package com.google.android.gms.tasks;

import android.app.Activity;
import b.b.a.F;
import b.b.a.G;
import java.util.concurrent.Executor;

public abstract class Task<TResult>
{
  public Task() {}
  
  @F
  public Task<TResult> addOnCompleteListener(@F Activity paramActivity, @F OnCompleteListener<TResult> paramOnCompleteListener)
  {
    throw new UnsupportedOperationException("addOnCompleteListener is not implemented");
  }
  
  @F
  public Task<TResult> addOnCompleteListener(@F OnCompleteListener<TResult> paramOnCompleteListener)
  {
    throw new UnsupportedOperationException("addOnCompleteListener is not implemented");
  }
  
  @F
  public Task<TResult> addOnCompleteListener(@F Executor paramExecutor, @F OnCompleteListener<TResult> paramOnCompleteListener)
  {
    throw new UnsupportedOperationException("addOnCompleteListener is not implemented");
  }
  
  @F
  public abstract Task<TResult> addOnFailureListener(@F Activity paramActivity, @F OnFailureListener paramOnFailureListener);
  
  @F
  public abstract Task<TResult> addOnFailureListener(@F OnFailureListener paramOnFailureListener);
  
  @F
  public abstract Task<TResult> addOnFailureListener(@F Executor paramExecutor, @F OnFailureListener paramOnFailureListener);
  
  @F
  public abstract Task<TResult> addOnSuccessListener(@F Activity paramActivity, @F OnSuccessListener<? super TResult> paramOnSuccessListener);
  
  @F
  public abstract Task<TResult> addOnSuccessListener(@F OnSuccessListener<? super TResult> paramOnSuccessListener);
  
  @F
  public abstract Task<TResult> addOnSuccessListener(@F Executor paramExecutor, @F OnSuccessListener<? super TResult> paramOnSuccessListener);
  
  @F
  public <TContinuationResult> Task<TContinuationResult> continueWith(@F Continuation<TResult, TContinuationResult> paramContinuation)
  {
    throw new UnsupportedOperationException("continueWith is not implemented");
  }
  
  @F
  public <TContinuationResult> Task<TContinuationResult> continueWith(@F Executor paramExecutor, @F Continuation<TResult, TContinuationResult> paramContinuation)
  {
    throw new UnsupportedOperationException("continueWith is not implemented");
  }
  
  @F
  public <TContinuationResult> Task<TContinuationResult> continueWithTask(@F Continuation<TResult, Task<TContinuationResult>> paramContinuation)
  {
    throw new UnsupportedOperationException("continueWithTask is not implemented");
  }
  
  @F
  public <TContinuationResult> Task<TContinuationResult> continueWithTask(@F Executor paramExecutor, @F Continuation<TResult, Task<TContinuationResult>> paramContinuation)
  {
    throw new UnsupportedOperationException("continueWithTask is not implemented");
  }
  
  @G
  public abstract Exception getException();
  
  public abstract TResult getResult();
  
  public abstract <X extends Throwable> TResult getResult(@F Class<X> paramClass)
    throws Throwable;
  
  public abstract boolean isComplete();
  
  public abstract boolean isSuccessful();
}
