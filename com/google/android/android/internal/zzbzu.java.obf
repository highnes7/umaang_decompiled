package com.google.android.gms.internal;

import android.app.PendingIntent;
import android.content.Context;
import android.location.Location;
import android.os.Looper;
import android.os.RemoteException;
import com.google.android.gms.common.api.GoogleApiClient.ConnectionCallbacks;
import com.google.android.gms.common.api.GoogleApiClient.OnConnectionFailedListener;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.api.internal.zzcj;
import com.google.android.gms.common.api.internal.zzcl;
import com.google.android.gms.common.api.internal.zzn;
import com.google.android.gms.common.internal.zzbp;
import com.google.android.gms.common.internal.zzd;
import com.google.android.gms.common.internal.zzq;
import com.google.android.gms.location.GeofencingRequest;
import com.google.android.gms.location.LocationAvailability;
import com.google.android.gms.location.LocationCallback;
import com.google.android.gms.location.LocationListener;
import com.google.android.gms.location.LocationRequest;
import com.google.android.gms.location.LocationSettingsRequest;
import com.google.android.gms.location.LocationSettingsResult;
import com.google.android.gms.location.zzaa;

public final class zzbzu
  extends zzbyi
{
  public final zzbzo zzhzs = new zzbzo(paramContext, zzhzb);
  
  public zzbzu(Context paramContext, Looper paramLooper, GoogleApiClient.ConnectionCallbacks paramConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener paramOnConnectionFailedListener, String paramString)
  {
    super(paramContext, paramLooper, paramConnectionCallbacks, paramOnConnectionFailedListener, paramString, zzq.zzcc(paramContext));
  }
  
  public zzbzu(Context paramContext, Looper paramLooper, GoogleApiClient.ConnectionCallbacks paramConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener paramOnConnectionFailedListener, String paramString, zzq paramZzq)
  {
    super(paramContext, paramLooper, paramConnectionCallbacks, paramOnConnectionFailedListener, paramString, paramZzq);
  }
  
  public final void disconnect()
  {
    synchronized (zzhzs)
    {
      boolean bool = isConnected();
      if (!bool) {}
    }
    try
    {
      zzhzs.removeAllListeners();
      zzhzs.zzasx();
      super.disconnect();
      return;
      localObject = finally;
      throw localObject;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public final Location getLastLocation()
  {
    return zzhzs.getLastLocation();
  }
  
  public final void zza(long paramLong, PendingIntent paramPendingIntent)
    throws RemoteException
  {
    zzaji();
    zzbp.zzu(paramPendingIntent);
    boolean bool;
    if (paramLong >= 0L) {
      bool = true;
    } else {
      bool = false;
    }
    zzbp.zzb(bool, "detectionIntervalMillis must be >= 0");
    ((zzbzk)zzajj()).zza(paramLong, true, paramPendingIntent);
  }
  
  public final void zza(PendingIntent paramPendingIntent, zzbzf paramZzbzf)
    throws RemoteException
  {
    zzhzs.zza(paramPendingIntent, paramZzbzf);
  }
  
  public final void zza(zzcl<LocationListener> paramZzcl, zzbzf paramZzbzf)
    throws RemoteException
  {
    zzhzs.zza(paramZzcl, paramZzbzf);
  }
  
  public final void zza(zzbzf paramZzbzf)
    throws RemoteException
  {
    zzhzs.zza(paramZzbzf);
  }
  
  public final void zza(zzbzy paramZzbzy, zzcj<LocationCallback> paramZzcj, zzbzf paramZzbzf)
    throws RemoteException
  {
    synchronized (zzhzs)
    {
      zzhzs.zza(paramZzbzy, paramZzcj, paramZzbzf);
      return;
    }
  }
  
  public final void zza(GeofencingRequest paramGeofencingRequest, PendingIntent paramPendingIntent, zzn<Status> paramZzn)
    throws RemoteException
  {
    zzaji();
    zzbp.zzb(paramGeofencingRequest, "geofencingRequest can't be null.");
    zzbp.zzb(paramPendingIntent, "PendingIntent must be specified.");
    zzbp.zzb(paramZzn, "ResultHolder not provided.");
    paramZzn = new zzbzv(paramZzn);
    ((zzbzk)zzajj()).zza(paramGeofencingRequest, paramPendingIntent, paramZzn);
  }
  
  public final void zza(LocationRequest paramLocationRequest, PendingIntent paramPendingIntent, zzbzf paramZzbzf)
    throws RemoteException
  {
    zzhzs.zza(paramLocationRequest, paramPendingIntent, paramZzbzf);
  }
  
  public final void zza(LocationRequest paramLocationRequest, zzcj<LocationListener> paramZzcj, zzbzf paramZzbzf)
    throws RemoteException
  {
    synchronized (zzhzs)
    {
      zzhzs.zza(paramLocationRequest, paramZzcj, paramZzbzf);
      return;
    }
  }
  
  public final void zza(LocationSettingsRequest paramLocationSettingsRequest, zzn<LocationSettingsResult> paramZzn, String paramString)
    throws RemoteException
  {
    zzaji();
    boolean bool2 = true;
    boolean bool1;
    if (paramLocationSettingsRequest != null) {
      bool1 = true;
    } else {
      bool1 = false;
    }
    zzbp.zzb(bool1, "locationSettingsRequest can't be null nor empty.");
    if (paramZzn != null) {
      bool1 = bool2;
    } else {
      bool1 = false;
    }
    zzbp.zzb(bool1, "listener can't be null.");
    paramZzn = new zzbzx(paramZzn);
    ((zzbzk)zzajj()).zza(paramLocationSettingsRequest, paramZzn, paramString);
  }
  
  public final void zza(zzaa paramZzaa, zzn<Status> paramZzn)
    throws RemoteException
  {
    zzaji();
    zzbp.zzb(paramZzaa, "removeGeofencingRequest can't be null.");
    zzbp.zzb(paramZzn, "ResultHolder not provided.");
    paramZzn = new zzbzw(paramZzn);
    ((zzbzk)zzajj()).zza(paramZzaa, paramZzn);
  }
  
  public final LocationAvailability zzasw()
  {
    return zzhzs.zzasw();
  }
  
  public final void zzb(zzcl<LocationCallback> paramZzcl, zzbzf paramZzbzf)
    throws RemoteException
  {
    zzhzs.zzb(paramZzcl, paramZzbzf);
  }
  
  public final void zzbk(boolean paramBoolean)
    throws RemoteException
  {
    zzhzs.zzbk(paramBoolean);
  }
  
  public final void zzc(PendingIntent paramPendingIntent)
    throws RemoteException
  {
    zzaji();
    zzbp.zzu(paramPendingIntent);
    ((zzbzk)zzajj()).zzc(paramPendingIntent);
  }
  
  public final void zzc(Location paramLocation)
    throws RemoteException
  {
    zzhzs.zzc(paramLocation);
  }
}
