package com.google.android.gms.internal;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Build;
import android.os.Build.VERSION;
import com.google.android.gms.analytics.zzj;
import com.google.android.gms.common.internal.zzbp;
import com.google.android.gms.common.util.zzd;
import f.a.a.a.a;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public final class zzaop
  extends zzams
{
  public static final byte[] zzdtm = "\n".getBytes();
  public final String zzbwi = String.format("%s/%s (Linux; U; Android %s; %s; %s Build/%s)", new Object[] { "GoogleAnalytics", zzamt.VERSION, Build.VERSION.RELEASE, zzapd.zza(Locale.getDefault()), Build.MODEL, Build.ID });
  public final zzaoz zzdtl;
  
  public zzaop(zzamu paramZzamu)
  {
    super(paramZzamu);
    zzdtl = new zzaoz(paramZzamu.zzvx());
  }
  
  /* Error */
  private final int zza(URL paramURL)
  {
    // Byte code:
    //   0: aload_1
    //   1: invokestatic 91	com/google/android/gms/common/internal/zzbp:zzu	(Ljava/lang/Object;)Ljava/lang/Object;
    //   4: pop
    //   5: aload_0
    //   6: ldc 93
    //   8: aload_1
    //   9: invokevirtual 99	com/google/android/gms/internal/zzamr:zzb	(Ljava/lang/String;Ljava/lang/Object;)V
    //   12: aconst_null
    //   13: astore 4
    //   15: aconst_null
    //   16: astore_3
    //   17: aload_0
    //   18: aload_1
    //   19: invokespecial 102	com/google/android/gms/internal/zzaop:zzb	(Ljava/net/URL;)Ljava/net/HttpURLConnection;
    //   22: astore_1
    //   23: aload_1
    //   24: astore_3
    //   25: aload_1
    //   26: astore 4
    //   28: aload_1
    //   29: invokevirtual 107	java/net/HttpURLConnection:connect	()V
    //   32: aload_1
    //   33: astore_3
    //   34: aload_1
    //   35: astore 4
    //   37: aload_0
    //   38: aload_1
    //   39: invokespecial 110	com/google/android/gms/internal/zzaop:zzb	(Ljava/net/HttpURLConnection;)V
    //   42: aload_1
    //   43: astore_3
    //   44: aload_1
    //   45: astore 4
    //   47: aload_1
    //   48: invokevirtual 114	java/net/HttpURLConnection:getResponseCode	()I
    //   51: istore_2
    //   52: iload_2
    //   53: sipush 200
    //   56: if_icmpne +15 -> 71
    //   59: aload_1
    //   60: astore_3
    //   61: aload_1
    //   62: astore 4
    //   64: aload_0
    //   65: invokevirtual 118	com/google/android/gms/internal/zzamr:zzwc	()Lcom/google/android/gms/internal/zzamj;
    //   68: invokevirtual 123	com/google/android/gms/internal/zzamj:zzvv	()V
    //   71: aload_1
    //   72: astore_3
    //   73: aload_1
    //   74: astore 4
    //   76: aload_0
    //   77: ldc 125
    //   79: iload_2
    //   80: invokestatic 131	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   83: invokevirtual 99	com/google/android/gms/internal/zzamr:zzb	(Ljava/lang/String;Ljava/lang/Object;)V
    //   86: aload_1
    //   87: invokevirtual 134	java/net/HttpURLConnection:disconnect	()V
    //   90: iload_2
    //   91: ireturn
    //   92: astore_1
    //   93: goto +26 -> 119
    //   96: astore_1
    //   97: aload 4
    //   99: astore_3
    //   100: aload_0
    //   101: ldc -120
    //   103: aload_1
    //   104: invokevirtual 139	com/google/android/gms/internal/zzamr:zzd	(Ljava/lang/String;Ljava/lang/Object;)V
    //   107: aload 4
    //   109: ifnull +8 -> 117
    //   112: aload 4
    //   114: invokevirtual 134	java/net/HttpURLConnection:disconnect	()V
    //   117: iconst_0
    //   118: ireturn
    //   119: aload_3
    //   120: ifnull +7 -> 127
    //   123: aload_3
    //   124: invokevirtual 134	java/net/HttpURLConnection:disconnect	()V
    //   127: aload_1
    //   128: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	129	0	this	zzaop
    //   0	129	1	paramURL	URL
    //   51	40	2	i	int
    //   16	108	3	localURL1	URL
    //   13	100	4	localURL2	URL
    // Exception table:
    //   from	to	target	type
    //   17	23	92	finally
    //   28	32	92	finally
    //   37	42	92	finally
    //   47	52	92	finally
    //   64	71	92	finally
    //   76	86	92	finally
    //   100	107	92	finally
    //   17	23	96	java/io/IOException
    //   28	32	96	java/io/IOException
    //   37	42	96	java/io/IOException
    //   47	52	96	java/io/IOException
    //   64	71	96	java/io/IOException
    //   76	86	96	java/io/IOException
  }
  
  /* Error */
  private final int zza(URL paramURL, byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: aload_1
    //   1: invokestatic 91	com/google/android/gms/common/internal/zzbp:zzu	(Ljava/lang/Object;)Ljava/lang/Object;
    //   4: pop
    //   5: aload_2
    //   6: invokestatic 91	com/google/android/gms/common/internal/zzbp:zzu	(Ljava/lang/Object;)Ljava/lang/Object;
    //   9: pop
    //   10: aload_0
    //   11: ldc -114
    //   13: aload_2
    //   14: arraylength
    //   15: invokestatic 131	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   18: aload_1
    //   19: invokevirtual 145	com/google/android/gms/internal/zzamr:zzb	(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
    //   22: invokestatic 149	com/google/android/gms/internal/zzamr:zzqu	()Z
    //   25: ifeq +17 -> 42
    //   28: aload_0
    //   29: ldc -105
    //   31: new 16	java/lang/String
    //   34: dup
    //   35: aload_2
    //   36: invokespecial 154	java/lang/String:<init>	([B)V
    //   39: invokevirtual 156	com/google/android/gms/internal/zzamr:zza	(Ljava/lang/String;Ljava/lang/Object;)V
    //   42: aconst_null
    //   43: astore 5
    //   45: aconst_null
    //   46: astore 8
    //   48: aconst_null
    //   49: astore 4
    //   51: aconst_null
    //   52: astore 7
    //   54: aload_0
    //   55: invokevirtual 160	com/google/android/gms/internal/zzamr:getContext	()Landroid/content/Context;
    //   58: invokevirtual 166	android/content/Context:getPackageName	()Ljava/lang/String;
    //   61: pop
    //   62: aload_0
    //   63: aload_1
    //   64: invokespecial 102	com/google/android/gms/internal/zzaop:zzb	(Ljava/net/URL;)Ljava/net/HttpURLConnection;
    //   67: astore 6
    //   69: aload 7
    //   71: astore 5
    //   73: aload 8
    //   75: astore_1
    //   76: aload 6
    //   78: astore 4
    //   80: aload 6
    //   82: iconst_1
    //   83: invokevirtual 170	java/net/HttpURLConnection:setDoOutput	(Z)V
    //   86: aload 7
    //   88: astore 5
    //   90: aload 8
    //   92: astore_1
    //   93: aload 6
    //   95: astore 4
    //   97: aload 6
    //   99: aload_2
    //   100: arraylength
    //   101: invokevirtual 174	java/net/HttpURLConnection:setFixedLengthStreamingMode	(I)V
    //   104: aload 7
    //   106: astore 5
    //   108: aload 8
    //   110: astore_1
    //   111: aload 6
    //   113: astore 4
    //   115: aload 6
    //   117: invokevirtual 107	java/net/HttpURLConnection:connect	()V
    //   120: aload 7
    //   122: astore 5
    //   124: aload 8
    //   126: astore_1
    //   127: aload 6
    //   129: astore 4
    //   131: aload 6
    //   133: invokevirtual 178	java/net/HttpURLConnection:getOutputStream	()Ljava/io/OutputStream;
    //   136: astore 7
    //   138: aload 7
    //   140: astore 5
    //   142: aload 7
    //   144: astore_1
    //   145: aload 6
    //   147: astore 4
    //   149: aload 7
    //   151: aload_2
    //   152: invokevirtual 183	java/io/OutputStream:write	([B)V
    //   155: aload 7
    //   157: astore 5
    //   159: aload 7
    //   161: astore_1
    //   162: aload 6
    //   164: astore 4
    //   166: aload_0
    //   167: aload 6
    //   169: invokespecial 110	com/google/android/gms/internal/zzaop:zzb	(Ljava/net/HttpURLConnection;)V
    //   172: aload 7
    //   174: astore 5
    //   176: aload 7
    //   178: astore_1
    //   179: aload 6
    //   181: astore 4
    //   183: aload 6
    //   185: invokevirtual 114	java/net/HttpURLConnection:getResponseCode	()I
    //   188: istore_3
    //   189: iload_3
    //   190: sipush 200
    //   193: if_icmpne +21 -> 214
    //   196: aload 7
    //   198: astore 5
    //   200: aload 7
    //   202: astore_1
    //   203: aload 6
    //   205: astore 4
    //   207: aload_0
    //   208: invokevirtual 118	com/google/android/gms/internal/zzamr:zzwc	()Lcom/google/android/gms/internal/zzamj;
    //   211: invokevirtual 123	com/google/android/gms/internal/zzamj:zzvv	()V
    //   214: aload 7
    //   216: astore 5
    //   218: aload 7
    //   220: astore_1
    //   221: aload 6
    //   223: astore 4
    //   225: aload_0
    //   226: ldc -71
    //   228: iload_3
    //   229: invokestatic 131	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   232: invokevirtual 99	com/google/android/gms/internal/zzamr:zzb	(Ljava/lang/String;Ljava/lang/Object;)V
    //   235: aload 7
    //   237: invokevirtual 188	java/io/OutputStream:close	()V
    //   240: goto +11 -> 251
    //   243: astore_1
    //   244: aload_0
    //   245: ldc -66
    //   247: aload_1
    //   248: invokevirtual 193	com/google/android/gms/internal/zzamr:zze	(Ljava/lang/String;Ljava/lang/Object;)V
    //   251: aload 6
    //   253: invokevirtual 134	java/net/HttpURLConnection:disconnect	()V
    //   256: iload_3
    //   257: ireturn
    //   258: astore_1
    //   259: aload 6
    //   261: astore_2
    //   262: aload_1
    //   263: astore 6
    //   265: goto +21 -> 286
    //   268: astore_2
    //   269: aconst_null
    //   270: astore 5
    //   272: aload 4
    //   274: astore_1
    //   275: aload 5
    //   277: astore 4
    //   279: goto +53 -> 332
    //   282: astore 6
    //   284: aconst_null
    //   285: astore_2
    //   286: aload 5
    //   288: astore_1
    //   289: aload_2
    //   290: astore 4
    //   292: aload_0
    //   293: ldc -61
    //   295: aload 6
    //   297: invokevirtual 139	com/google/android/gms/internal/zzamr:zzd	(Ljava/lang/String;Ljava/lang/Object;)V
    //   300: aload 5
    //   302: ifnull +19 -> 321
    //   305: aload 5
    //   307: invokevirtual 188	java/io/OutputStream:close	()V
    //   310: goto +11 -> 321
    //   313: astore_1
    //   314: aload_0
    //   315: ldc -66
    //   317: aload_1
    //   318: invokevirtual 193	com/google/android/gms/internal/zzamr:zze	(Ljava/lang/String;Ljava/lang/Object;)V
    //   321: aload_2
    //   322: ifnull +7 -> 329
    //   325: aload_2
    //   326: invokevirtual 134	java/net/HttpURLConnection:disconnect	()V
    //   329: iconst_0
    //   330: ireturn
    //   331: astore_2
    //   332: aload_1
    //   333: ifnull +18 -> 351
    //   336: aload_1
    //   337: invokevirtual 188	java/io/OutputStream:close	()V
    //   340: goto +11 -> 351
    //   343: astore_1
    //   344: aload_0
    //   345: ldc -66
    //   347: aload_1
    //   348: invokevirtual 193	com/google/android/gms/internal/zzamr:zze	(Ljava/lang/String;Ljava/lang/Object;)V
    //   351: aload 4
    //   353: ifnull +8 -> 361
    //   356: aload 4
    //   358: invokevirtual 134	java/net/HttpURLConnection:disconnect	()V
    //   361: aload_2
    //   362: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	363	0	this	zzaop
    //   0	363	1	paramURL	URL
    //   0	363	2	paramArrayOfByte	byte[]
    //   188	69	3	i	int
    //   49	308	4	localObject1	Object
    //   43	263	5	localObject2	Object
    //   67	197	6	localObject3	Object
    //   282	14	6	localIOException	IOException
    //   52	184	7	localOutputStream	java.io.OutputStream
    //   46	79	8	localObject4	Object
    // Exception table:
    //   from	to	target	type
    //   235	240	243	java/io/IOException
    //   80	86	258	java/io/IOException
    //   97	104	258	java/io/IOException
    //   115	120	258	java/io/IOException
    //   131	138	258	java/io/IOException
    //   149	155	258	java/io/IOException
    //   166	172	258	java/io/IOException
    //   183	189	258	java/io/IOException
    //   207	214	258	java/io/IOException
    //   225	235	258	java/io/IOException
    //   54	69	268	finally
    //   54	69	282	java/io/IOException
    //   305	310	313	java/io/IOException
    //   80	86	331	finally
    //   97	104	331	finally
    //   115	120	331	finally
    //   131	138	331	finally
    //   149	155	331	finally
    //   166	172	331	finally
    //   183	189	331	finally
    //   207	214	331	finally
    //   225	235	331	finally
    //   292	300	331	finally
    //   336	340	343	java/io/IOException
  }
  
  public static void zza(StringBuilder paramStringBuilder, String paramString1, String paramString2)
    throws UnsupportedEncodingException
  {
    if (paramStringBuilder.length() != 0) {
      paramStringBuilder.append('&');
    }
    paramStringBuilder.append(URLEncoder.encode(paramString1, "UTF-8"));
    paramStringBuilder.append('=');
    paramStringBuilder.append(URLEncoder.encode(paramString2, "UTF-8"));
  }
  
  /* Error */
  private final int zzb(URL paramURL, byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: aload_1
    //   1: invokestatic 91	com/google/android/gms/common/internal/zzbp:zzu	(Ljava/lang/Object;)Ljava/lang/Object;
    //   4: pop
    //   5: aload_2
    //   6: invokestatic 91	com/google/android/gms/common/internal/zzbp:zzu	(Ljava/lang/Object;)Ljava/lang/Object;
    //   9: pop
    //   10: aconst_null
    //   11: astore 5
    //   13: aconst_null
    //   14: astore 4
    //   16: aload_0
    //   17: invokevirtual 160	com/google/android/gms/internal/zzamr:getContext	()Landroid/content/Context;
    //   20: invokevirtual 166	android/content/Context:getPackageName	()Ljava/lang/String;
    //   23: pop
    //   24: new 221	java/io/ByteArrayOutputStream
    //   27: dup
    //   28: invokespecial 223	java/io/ByteArrayOutputStream:<init>	()V
    //   31: astore 6
    //   33: new 225	java/util/zip/GZIPOutputStream
    //   36: dup
    //   37: aload 6
    //   39: invokespecial 228	java/util/zip/GZIPOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   42: astore 7
    //   44: aload 7
    //   46: aload_2
    //   47: invokevirtual 229	java/util/zip/GZIPOutputStream:write	([B)V
    //   50: aload 7
    //   52: invokevirtual 230	java/util/zip/GZIPOutputStream:close	()V
    //   55: aload 6
    //   57: invokevirtual 231	java/io/ByteArrayOutputStream:close	()V
    //   60: aload 6
    //   62: invokevirtual 234	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   65: astore 6
    //   67: aload_0
    //   68: ldc -20
    //   70: aload 6
    //   72: arraylength
    //   73: invokestatic 131	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   76: aload 6
    //   78: arraylength
    //   79: i2l
    //   80: ldc2_w 237
    //   83: lmul
    //   84: aload_2
    //   85: arraylength
    //   86: i2l
    //   87: ldiv
    //   88: invokestatic 243	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   91: aload_1
    //   92: invokevirtual 246	com/google/android/gms/internal/zzamr:zza	(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
    //   95: aload 6
    //   97: arraylength
    //   98: aload_2
    //   99: arraylength
    //   100: if_icmple +20 -> 120
    //   103: aload_0
    //   104: ldc -8
    //   106: aload 6
    //   108: arraylength
    //   109: invokestatic 131	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   112: aload_2
    //   113: arraylength
    //   114: invokestatic 131	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   117: invokevirtual 251	com/google/android/gms/internal/zzamr:zzc	(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
    //   120: invokestatic 149	com/google/android/gms/internal/zzamr:zzqu	()Z
    //   123: ifeq +47 -> 170
    //   126: new 16	java/lang/String
    //   129: dup
    //   130: aload_2
    //   131: invokespecial 154	java/lang/String:<init>	([B)V
    //   134: astore_2
    //   135: aload_2
    //   136: invokevirtual 252	java/lang/String:length	()I
    //   139: ifeq +13 -> 152
    //   142: ldc 14
    //   144: aload_2
    //   145: invokevirtual 256	java/lang/String:concat	(Ljava/lang/String;)Ljava/lang/String;
    //   148: astore_2
    //   149: goto +13 -> 162
    //   152: new 16	java/lang/String
    //   155: dup
    //   156: ldc 14
    //   158: invokespecial 259	java/lang/String:<init>	(Ljava/lang/String;)V
    //   161: astore_2
    //   162: aload_0
    //   163: ldc_w 261
    //   166: aload_2
    //   167: invokevirtual 156	com/google/android/gms/internal/zzamr:zza	(Ljava/lang/String;Ljava/lang/Object;)V
    //   170: aload_0
    //   171: aload_1
    //   172: invokespecial 102	com/google/android/gms/internal/zzaop:zzb	(Ljava/net/URL;)Ljava/net/HttpURLConnection;
    //   175: astore_1
    //   176: aload_1
    //   177: iconst_1
    //   178: invokevirtual 170	java/net/HttpURLConnection:setDoOutput	(Z)V
    //   181: aload_1
    //   182: ldc_w 263
    //   185: ldc_w 265
    //   188: invokevirtual 269	java/net/HttpURLConnection:addRequestProperty	(Ljava/lang/String;Ljava/lang/String;)V
    //   191: aload_1
    //   192: aload 6
    //   194: arraylength
    //   195: invokevirtual 174	java/net/HttpURLConnection:setFixedLengthStreamingMode	(I)V
    //   198: aload_1
    //   199: invokevirtual 107	java/net/HttpURLConnection:connect	()V
    //   202: aload_1
    //   203: invokevirtual 178	java/net/HttpURLConnection:getOutputStream	()Ljava/io/OutputStream;
    //   206: astore_2
    //   207: aload_2
    //   208: aload 6
    //   210: invokevirtual 183	java/io/OutputStream:write	([B)V
    //   213: aload_2
    //   214: invokevirtual 188	java/io/OutputStream:close	()V
    //   217: aload_0
    //   218: aload_1
    //   219: invokespecial 110	com/google/android/gms/internal/zzaop:zzb	(Ljava/net/HttpURLConnection;)V
    //   222: aload_1
    //   223: invokevirtual 114	java/net/HttpURLConnection:getResponseCode	()I
    //   226: istore_3
    //   227: iload_3
    //   228: sipush 200
    //   231: if_icmpne +10 -> 241
    //   234: aload_0
    //   235: invokevirtual 118	com/google/android/gms/internal/zzamr:zzwc	()Lcom/google/android/gms/internal/zzamj;
    //   238: invokevirtual 123	com/google/android/gms/internal/zzamj:zzvv	()V
    //   241: aload_0
    //   242: ldc -71
    //   244: iload_3
    //   245: invokestatic 131	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   248: invokevirtual 99	com/google/android/gms/internal/zzamr:zzb	(Ljava/lang/String;Ljava/lang/Object;)V
    //   251: aload_1
    //   252: invokevirtual 134	java/net/HttpURLConnection:disconnect	()V
    //   255: iload_3
    //   256: ireturn
    //   257: astore 4
    //   259: aload_1
    //   260: astore 5
    //   262: aload 4
    //   264: astore_1
    //   265: aload_2
    //   266: astore 4
    //   268: aload 5
    //   270: astore_2
    //   271: goto +92 -> 363
    //   274: astore 5
    //   276: aload_2
    //   277: astore 4
    //   279: aload 5
    //   281: astore_2
    //   282: goto +34 -> 316
    //   285: astore 4
    //   287: aload_1
    //   288: astore_2
    //   289: aload 4
    //   291: astore_1
    //   292: aload 5
    //   294: astore 4
    //   296: goto +67 -> 363
    //   299: astore_2
    //   300: goto +16 -> 316
    //   303: astore_1
    //   304: aconst_null
    //   305: astore_2
    //   306: aload 5
    //   308: astore 4
    //   310: goto +53 -> 363
    //   313: astore_2
    //   314: aconst_null
    //   315: astore_1
    //   316: aload_0
    //   317: ldc_w 271
    //   320: aload_2
    //   321: invokevirtual 139	com/google/android/gms/internal/zzamr:zzd	(Ljava/lang/String;Ljava/lang/Object;)V
    //   324: aload 4
    //   326: ifnull +20 -> 346
    //   329: aload 4
    //   331: invokevirtual 188	java/io/OutputStream:close	()V
    //   334: goto +12 -> 346
    //   337: astore_2
    //   338: aload_0
    //   339: ldc_w 273
    //   342: aload_2
    //   343: invokevirtual 193	com/google/android/gms/internal/zzamr:zze	(Ljava/lang/String;Ljava/lang/Object;)V
    //   346: aload_1
    //   347: ifnull +7 -> 354
    //   350: aload_1
    //   351: invokevirtual 134	java/net/HttpURLConnection:disconnect	()V
    //   354: iconst_0
    //   355: ireturn
    //   356: astore 5
    //   358: aload_1
    //   359: astore_2
    //   360: aload 5
    //   362: astore_1
    //   363: aload 4
    //   365: ifnull +22 -> 387
    //   368: aload 4
    //   370: invokevirtual 188	java/io/OutputStream:close	()V
    //   373: goto +14 -> 387
    //   376: astore 4
    //   378: aload_0
    //   379: ldc_w 273
    //   382: aload 4
    //   384: invokevirtual 193	com/google/android/gms/internal/zzamr:zze	(Ljava/lang/String;Ljava/lang/Object;)V
    //   387: aload_2
    //   388: ifnull +7 -> 395
    //   391: aload_2
    //   392: invokevirtual 134	java/net/HttpURLConnection:disconnect	()V
    //   395: aload_1
    //   396: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	397	0	this	zzaop
    //   0	397	1	paramURL	URL
    //   0	397	2	paramArrayOfByte	byte[]
    //   226	30	3	i	int
    //   14	1	4	localObject1	Object
    //   257	6	4	localObject2	Object
    //   266	12	4	arrayOfByte	byte[]
    //   285	5	4	localObject3	Object
    //   294	75	4	localIOException1	IOException
    //   376	7	4	localIOException2	IOException
    //   11	258	5	localURL	URL
    //   274	33	5	localIOException3	IOException
    //   356	5	5	localObject4	Object
    //   31	178	6	localObject5	Object
    //   42	9	7	localGZIPOutputStream	java.util.zip.GZIPOutputStream
    // Exception table:
    //   from	to	target	type
    //   207	217	257	finally
    //   207	217	274	java/io/IOException
    //   176	207	285	finally
    //   217	227	285	finally
    //   234	241	285	finally
    //   241	251	285	finally
    //   176	207	299	java/io/IOException
    //   217	227	299	java/io/IOException
    //   234	241	299	java/io/IOException
    //   241	251	299	java/io/IOException
    //   16	120	303	finally
    //   120	149	303	finally
    //   152	162	303	finally
    //   162	170	303	finally
    //   170	176	303	finally
    //   16	120	313	java/io/IOException
    //   120	149	313	java/io/IOException
    //   152	162	313	java/io/IOException
    //   162	170	313	java/io/IOException
    //   170	176	313	java/io/IOException
    //   329	334	337	java/io/IOException
    //   316	324	356	finally
    //   368	373	376	java/io/IOException
  }
  
  private final HttpURLConnection zzb(URL paramURL)
    throws IOException
  {
    paramURL = paramURL.openConnection();
    if ((paramURL instanceof HttpURLConnection))
    {
      paramURL = (HttpURLConnection)paramURL;
      paramURL.setDefaultUseCaches(false);
      paramURL.setConnectTimeout(((Integer)zzaod.zzdsd.get()).intValue());
      paramURL.setReadTimeout(((Integer)zzaod.zzdse.get()).intValue());
      paramURL.setInstanceFollowRedirects(false);
      paramURL.setRequestProperty("User-Agent", zzbwi);
      paramURL.setDoInput(true);
      return paramURL;
    }
    throw new IOException("Failed to obtain http connection");
  }
  
  private final URL zzb(zzaoi paramZzaoi, String paramString)
  {
    String str;
    StringBuilder localStringBuilder;
    if (paramZzaoi.zzyp())
    {
      str = zzanv.zzyb();
      paramZzaoi = zzanv.zzyd();
      localStringBuilder = new StringBuilder(a.a(paramString, a.a(paramZzaoi, a.a(str, 1))));
    }
    else
    {
      str = zzanv.zzyc();
      paramZzaoi = zzanv.zzyd();
      localStringBuilder = new StringBuilder(a.a(paramString, a.a(paramZzaoi, a.a(str, 1))));
    }
    paramZzaoi = a.a(localStringBuilder, str, paramZzaoi, "?", paramString);
    try
    {
      paramZzaoi = new URL(paramZzaoi);
      return paramZzaoi;
    }
    catch (MalformedURLException paramZzaoi)
    {
      zze("Error trying to parse the hardcoded host url", paramZzaoi);
    }
    return null;
  }
  
  /* Error */
  private final void zzb(HttpURLConnection paramHttpURLConnection)
    throws IOException
  {
    // Byte code:
    //   0: aload_1
    //   1: invokevirtual 359	java/net/HttpURLConnection:getInputStream	()Ljava/io/InputStream;
    //   4: astore_3
    //   5: sipush 1024
    //   8: newarray byte
    //   10: astore_1
    //   11: aload_3
    //   12: aload_1
    //   13: invokevirtual 365	java/io/InputStream:read	([B)I
    //   16: istore_2
    //   17: iload_2
    //   18: ifgt -7 -> 11
    //   21: aload_3
    //   22: invokevirtual 366	java/io/InputStream:close	()V
    //   25: return
    //   26: astore_1
    //   27: aload_0
    //   28: ldc_w 368
    //   31: aload_1
    //   32: invokevirtual 193	com/google/android/gms/internal/zzamr:zze	(Ljava/lang/String;Ljava/lang/Object;)V
    //   35: return
    //   36: astore_1
    //   37: goto +6 -> 43
    //   40: astore_1
    //   41: aconst_null
    //   42: astore_3
    //   43: aload_3
    //   44: ifnull +19 -> 63
    //   47: aload_3
    //   48: invokevirtual 366	java/io/InputStream:close	()V
    //   51: goto +12 -> 63
    //   54: astore_3
    //   55: aload_0
    //   56: ldc_w 368
    //   59: aload_3
    //   60: invokevirtual 193	com/google/android/gms/internal/zzamr:zze	(Ljava/lang/String;Ljava/lang/Object;)V
    //   63: goto +5 -> 68
    //   66: aload_1
    //   67: athrow
    //   68: goto -2 -> 66
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	71	0	this	zzaop
    //   0	71	1	paramHttpURLConnection	HttpURLConnection
    //   16	2	2	i	int
    //   4	44	3	localInputStream	java.io.InputStream
    //   54	6	3	localIOException	IOException
    // Exception table:
    //   from	to	target	type
    //   21	25	26	java/io/IOException
    //   5	11	36	finally
    //   11	17	36	finally
    //   0	5	40	finally
    //   47	51	54	java/io/IOException
  }
  
  private final URL zzd(zzaoi paramZzaoi)
  {
    String str;
    if (paramZzaoi.zzyp())
    {
      str = String.valueOf(zzanv.zzyb());
      paramZzaoi = String.valueOf(zzanv.zzyd());
      if (paramZzaoi.length() != 0)
      {
        paramZzaoi = str.concat(paramZzaoi);
        break label85;
      }
    }
    for (paramZzaoi = new String(str);; paramZzaoi = new String(str))
    {
      break label85;
      str = String.valueOf(zzanv.zzyc());
      paramZzaoi = String.valueOf(zzanv.zzyd());
      if (paramZzaoi.length() != 0) {
        break;
      }
    }
    try
    {
      label85:
      paramZzaoi = new URL(paramZzaoi);
      return paramZzaoi;
    }
    catch (MalformedURLException paramZzaoi)
    {
      zze("Error trying to parse the hardcoded host url", paramZzaoi);
    }
    return null;
  }
  
  private final List<Long> zzt(List<zzaoi> paramList)
  {
    ArrayList localArrayList = new ArrayList(paramList.size());
    Iterator localIterator = paramList.iterator();
    label129:
    label249:
    do
    {
      if (!localIterator.hasNext()) {
        break;
      }
      zzaoi localZzaoi = (zzaoi)localIterator.next();
      zzbp.zzu(localZzaoi);
      boolean bool = localZzaoi.zzyp();
      int i = 1;
      paramList = zza(localZzaoi, bool ^ true);
      Object localObject;
      if (paramList == null)
      {
        paramList = zzvy();
        localObject = "Error formatting hit for upload";
        paramList.zza(localZzaoi, (String)localObject);
      }
      else
      {
        if (paramList.length() <= ((Integer)zzaod.zzdrt.get()).intValue())
        {
          paramList = zzb(localZzaoi, paramList);
          if (paramList == null)
          {
            paramList = "Failed to build collect GET endpoint url";
            zzdq(paramList);
          }
          else
          {
            if (zza(paramList) == 200) {
              break label249;
            }
          }
        }
        do
        {
          i = 0;
          break label249;
          paramList = zza(localZzaoi, false);
          if (paramList == null)
          {
            paramList = zzvy();
            localObject = "Error formatting hit for POST upload";
            break;
          }
          paramList = paramList.getBytes();
          if (paramList.length > ((Integer)zzaod.zzdry.get()).intValue())
          {
            paramList = zzvy();
            localObject = "Hit payload exceeds size limit";
            break;
          }
          localObject = zzd(localZzaoi);
          if (localObject == null)
          {
            paramList = "Failed to build collect POST endpoint url";
            break label129;
          }
        } while (zza((URL)localObject, paramList) != 200);
      }
      if (i == 0) {
        break;
      }
      localArrayList.add(Long.valueOf(localZzaoi.zzym()));
    } while (localArrayList.size() < zzanv.zzxz());
    return localArrayList;
  }
  
  private final URL zzyy()
  {
    Object localObject = String.valueOf(zzanv.zzyb());
    String str = String.valueOf((String)zzaod.zzdrs.get());
    if (str.length() != 0) {
      localObject = ((String)localObject).concat(str);
    } else {
      localObject = new String((String)localObject);
    }
    try
    {
      localObject = new URL((String)localObject);
      return localObject;
    }
    catch (MalformedURLException localMalformedURLException)
    {
      zze("Error trying to parse the hardcoded host url", localMalformedURLException);
    }
    return null;
  }
  
  public final String zza(zzaoi paramZzaoi, boolean paramBoolean)
  {
    zzbp.zzu(paramZzaoi);
    StringBuilder localStringBuilder = new StringBuilder();
    try
    {
      Iterator localIterator = paramZzaoi.zziy().entrySet().iterator();
      for (;;)
      {
        boolean bool = localIterator.hasNext();
        if (!bool) {
          break;
        }
        Map.Entry localEntry = (Map.Entry)localIterator.next();
        String str = (String)localEntry.getKey();
        if ((!"ht".equals(str)) && (!"qt".equals(str)) && (!"AppUID".equals(str)) && (!"z".equals(str)) && (!"_gmsv".equals(str))) {
          zza(localStringBuilder, str, (String)localEntry.getValue());
        }
      }
      zza(localStringBuilder, "ht", String.valueOf(paramZzaoi.zzyn()));
      zza(localStringBuilder, "qt", String.valueOf(zzvx().currentTimeMillis() - paramZzaoi.zzyn()));
      if (paramBoolean)
      {
        long l = paramZzaoi.zzyq();
        if (l != 0L) {
          paramZzaoi = String.valueOf(l);
        } else {
          paramZzaoi = String.valueOf(paramZzaoi.zzym());
        }
        zza(localStringBuilder, "z", paramZzaoi);
      }
      paramZzaoi = localStringBuilder.toString();
      return paramZzaoi;
    }
    catch (UnsupportedEncodingException paramZzaoi)
    {
      zze("Failed to encode name or value", paramZzaoi);
    }
    return null;
  }
  
  public final List<Long> zzs(List<zzaoi> paramList)
  {
    zzj.zzuj();
    zzwk();
    zzbp.zzu(paramList);
    boolean bool2 = zzvz().zzye().isEmpty();
    boolean bool1 = false;
    int i;
    int j;
    if ((!bool2) && (zzdtl.zzu(((Integer)zzaod.zzdsb.get()).intValue() * 1000L)))
    {
      if (zzanl.zzdv((String)zzaod.zzdru.get()) != zzanl.zzdqa) {
        i = 1;
      } else {
        i = 0;
      }
      j = i;
      if (zzanr.zzdw((String)zzaod.zzdrv.get()) == zzanr.zzdql)
      {
        bool1 = true;
        j = i;
      }
    }
    else
    {
      j = 0;
    }
    if (j != 0)
    {
      zzbp.zzbh(paramList.isEmpty() ^ true);
      zza("Uploading batched hits. compression, count", Boolean.valueOf(bool1), Integer.valueOf(paramList.size()));
      zzaoq localZzaoq = new zzaoq(this);
      ArrayList localArrayList = new ArrayList();
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        zzaoi localZzaoi = (zzaoi)paramList.next();
        if (!localZzaoq.zze(localZzaoi)) {
          break;
        }
        localArrayList.add(Long.valueOf(localZzaoi.zzym()));
      }
      if (localZzaoq.zzza() == 0) {
        return localArrayList;
      }
      paramList = zzyy();
      if (paramList == null)
      {
        zzdq("Failed to build batching endpoint url");
      }
      else
      {
        if (bool1) {
          i = zzb(paramList, localZzaoq.getPayload());
        } else {
          i = zza(paramList, localZzaoq.getPayload());
        }
        if (200 == i)
        {
          zza("Batched upload completed. Hits batched", Integer.valueOf(localZzaoq.zzza()));
          return localArrayList;
        }
        zza("Network error uploading hits. status code", Integer.valueOf(i));
        if (zzvz().zzye().contains(Integer.valueOf(i)))
        {
          zzdp("Server instructed the client to stop batching");
          zzdtl.start();
        }
      }
      return Collections.emptyList();
    }
    return zzt(paramList);
  }
  
  public final void zzuk()
  {
    zza("Network initialized. User agent", zzbwi);
  }
  
  public final boolean zzyx()
  {
    zzj.zzuj();
    zzwk();
    Object localObject = (ConnectivityManager)getContext().getSystemService("connectivity");
    try
    {
      localObject = ((ConnectivityManager)localObject).getActiveNetworkInfo();
    }
    catch (SecurityException localSecurityException)
    {
      for (;;) {}
    }
    localObject = null;
    if ((localObject != null) && (((NetworkInfo)localObject).isConnected())) {
      return true;
    }
    zzdm("No network connectivity");
    return false;
  }
}
