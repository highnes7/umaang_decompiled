package com.google.android.gms.auth.api.signin.internal;

import android.content.Context;
import android.os.Binder;
import com.google.android.gms.auth.api.Auth;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInApi;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.api.Api.ApiOptions.HasOptions;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.GoogleApiClient.Builder;
import com.google.android.gms.common.zzo;

public final class zzv
  extends zzq
{
  public final Context mContext;
  
  public zzv(Context paramContext)
  {
    mContext = paramContext;
  }
  
  public final void zzaap()
  {
    if (zzo.zzf(mContext, Binder.getCallingUid()))
    {
      zzy localZzy = zzy.zzbl(mContext);
      GoogleSignInAccount localGoogleSignInAccount = localZzy.zzaas();
      localObject1 = GoogleSignInOptions.DEFAULT_SIGN_IN;
      if (localGoogleSignInAccount != null) {
        localObject1 = localZzy.zzaat();
      }
      localObject1 = new GoogleApiClient.Builder(mContext).addApi(Auth.GOOGLE_SIGN_IN_API, (Api.ApiOptions.HasOptions)localObject1).build();
      try
      {
        if (((GoogleApiClient)localObject1).blockingConnect().isSuccess()) {
          if (localGoogleSignInAccount != null) {
            Auth.GoogleSignInApi.revokeAccess((GoogleApiClient)localObject1);
          } else {
            ((GoogleApiClient)localObject1).clearDefaultAccountAndReconnect();
          }
        }
        return;
      }
      finally
      {
        ((GoogleApiClient)localObject1).disconnect();
      }
    }
    int i = Binder.getCallingUid();
    Object localObject1 = new StringBuilder(52);
    ((StringBuilder)localObject1).append("Calling UID ");
    ((StringBuilder)localObject1).append(i);
    ((StringBuilder)localObject1).append(" is not Google Play services.");
    throw new SecurityException(((StringBuilder)localObject1).toString());
  }
}
