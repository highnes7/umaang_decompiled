package com.google.android.android.common.package_9.internal;

import com.google.android.android.common.package_9.PendingResult;
import com.google.android.android.common.package_9.PendingResult.zza;
import com.google.android.android.common.package_9.ResultCallback;
import com.google.android.android.common.package_9.ResultTransform;
import com.google.android.android.common.package_9.TransformedResult;
import com.google.android.gms.common.api.OptionalPendingResult;
import com.google.android.gms.common.api.internal.zzs;
import java.util.concurrent.TimeUnit;

public final class zzcp<R extends com.google.android.gms.common.api.Result>
  extends OptionalPendingResult<R>
{
  public final zzs<R> zzfoy;
  
  public zzcp(PendingResult paramPendingResult)
  {
    if ((paramPendingResult instanceof Log))
    {
      zzfoy = ((Log)paramPendingResult);
      return;
    }
    throw new IllegalArgumentException("OptionalPendingResult can only wrap PendingResults generated by an API call.");
  }
  
  public final com.google.android.android.common.package_9.Result await()
  {
    return zzfoy.await();
  }
  
  public final com.google.android.android.common.package_9.Result await(long paramLong, TimeUnit paramTimeUnit)
  {
    return zzfoy.await(paramLong, paramTimeUnit);
  }
  
  public final void cancel()
  {
    zzfoy.cancel();
  }
  
  public final com.google.android.android.common.package_9.Result getResponses()
  {
    if (isDone()) {
      return await(0L, TimeUnit.MILLISECONDS);
    }
    throw new IllegalStateException("Result is not available. Check that isDone() returns true before calling get().");
  }
  
  public final boolean isCanceled()
  {
    return zzfoy.isCanceled();
  }
  
  public final boolean isDone()
  {
    return zzfoy.isReady();
  }
  
  public final void set(PendingResult.zza paramZza)
  {
    zzfoy.set(paramZza);
  }
  
  public final void setResultCallback(ResultCallback paramResultCallback)
  {
    zzfoy.setResultCallback(paramResultCallback);
  }
  
  public final void setResultCallback(ResultCallback paramResultCallback, long paramLong, TimeUnit paramTimeUnit)
  {
    zzfoy.setResultCallback(paramResultCallback, paramLong, paramTimeUnit);
  }
  
  public final TransformedResult then(ResultTransform paramResultTransform)
  {
    return zzfoy.then(paramResultTransform);
  }
  
  public final Integer zzafs()
  {
    return zzfoy.zzafs();
  }
}
