package com.google.android.gms.security;

import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import com.google.android.gms.common.GooglePlayServicesNotAvailableException;
import com.google.android.gms.common.GooglePlayServicesRepairableException;
import com.google.android.gms.common.internal.zzbp;
import com.google.android.gms.common.zze;
import com.google.android.gms.common.zzo;
import java.lang.reflect.Method;

public class ProviderInstaller
{
  public static final String PROVIDER_NAME = "GmsCore_OpenSSL";
  public static final Object zzaqd = new Object();
  public static final zze zzjnj = zze.zzffk;
  public static Method zzjnk = null;
  
  public ProviderInstaller() {}
  
  public static void installIfNeeded(Context arg0)
    throws GooglePlayServicesRepairableException, GooglePlayServicesNotAvailableException
  {
    zzbp.zzb(???, "Context must not be null");
    zze.zzbu(???);
    Context localContext = zzo.getRemoteContext(???);
    if (localContext != null) {}
    synchronized (zzaqd)
    {
      String str;
      try
      {
        if (zzjnk == null) {
          zzjnk = localContext.getClassLoader().loadClass("com.google.android.gms.common.security.ProviderInstallerImpl").getMethod("insertProvider", new Class[] { Context.class });
        }
        zzjnk.invoke(null, new Object[] { localContext });
        return;
      }
      catch (Exception localException)
      {
        str = String.valueOf(localException.getMessage());
        if (str.length() != 0) {
          "Failed to install provider: ".concat(str);
        } else {
          new String("Failed to install provider: ");
        }
        throw new GooglePlayServicesNotAvailableException(8);
      }
      throw str;
      throw new GooglePlayServicesNotAvailableException(8);
    }
  }
  
  public static void installIfNeededAsync(Context paramContext, ProviderInstallListener paramProviderInstallListener)
  {
    zzbp.zzb(paramContext, "Context must not be null");
    zzbp.zzb(paramProviderInstallListener, "Listener must not be null");
    zzbp.zzfy("Must be called on the UI thread");
    new zza(paramContext, paramProviderInstallListener).execute(new Void[0]);
  }
  
  public static abstract interface ProviderInstallListener
  {
    public abstract void onProviderInstallFailed(int paramInt, Intent paramIntent);
    
    public abstract void onProviderInstalled();
  }
}
