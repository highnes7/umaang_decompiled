package com.coremedia.iso.boxes.fragment;

import f.a.a.a.a;
import f.b.a.h;
import f.h.a.c;
import f.h.a.j;
import java.nio.ByteBuffer;
import org.aspectj.lang.JoinPoint;
import org.aspectj.runtime.reflect.Factory;

public class TrackFragmentBaseMediaDecodeTimeBox
  extends c
{
  public static final String TYPE = "tfdt";
  public long baseMediaDecodeTime;
  
  static {}
  
  public TrackFragmentBaseMediaDecodeTimeBox()
  {
    super("tfdt");
  }
  
  public void _parseDetails(ByteBuffer paramByteBuffer)
  {
    parseVersionAndFlags(paramByteBuffer);
    if (getVersion() == 1)
    {
      baseMediaDecodeTime = h.l(paramByteBuffer);
      return;
    }
    baseMediaDecodeTime = h.j(paramByteBuffer);
  }
  
  public long getBaseMediaDecodeTime()
  {
    JoinPoint localJoinPoint = Factory.makeJP(ajc$tjp_0, this, this);
    j.b().a(localJoinPoint);
    return baseMediaDecodeTime;
  }
  
  public void getContent(ByteBuffer paramByteBuffer)
  {
    writeVersionAndFlags(paramByteBuffer);
    if (getVersion() == 1)
    {
      paramByteBuffer.putLong(baseMediaDecodeTime);
      return;
    }
    paramByteBuffer.putInt((int)baseMediaDecodeTime);
  }
  
  public long getContentSize()
  {
    int i;
    if (getVersion() == 0) {
      i = 8;
    } else {
      i = 12;
    }
    return i;
  }
  
  public void setBaseMediaDecodeTime(long paramLong)
  {
    JoinPoint localJoinPoint = Factory.makeJP(ajc$tjp_1, this, this, new Long(paramLong));
    j.b().a(localJoinPoint);
    baseMediaDecodeTime = paramLong;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = a.a(Factory.makeJP(ajc$tjp_2, this, this), "TrackFragmentBaseMediaDecodeTimeBox{baseMediaDecodeTime=");
    localStringBuilder.append(baseMediaDecodeTime);
    localStringBuilder.append('}');
    return localStringBuilder.toString();
  }
}
