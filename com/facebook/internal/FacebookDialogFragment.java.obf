package com.facebook.internal;

import android.app.Activity;
import android.app.Dialog;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import b.b.a.F;
import com.facebook.FacebookException;
import com.facebook.FacebookSdk;

public class FacebookDialogFragment
  extends DialogFragment
{
  public static final String TAG = "FacebookDialogFragment";
  public Dialog dialog;
  
  public FacebookDialogFragment() {}
  
  private void onCompleteWebDialog(Bundle paramBundle, FacebookException paramFacebookException)
  {
    FragmentActivity localFragmentActivity = getActivity();
    paramBundle = NativeProtocol.createProtocolResultIntent(localFragmentActivity.getIntent(), paramBundle, paramFacebookException);
    int i;
    if (paramFacebookException == null) {
      i = -1;
    } else {
      i = 0;
    }
    localFragmentActivity.setResult(i, paramBundle);
    localFragmentActivity.finish();
  }
  
  private void onCompleteWebFallbackDialog(Bundle paramBundle)
  {
    FragmentActivity localFragmentActivity = getActivity();
    Intent localIntent = new Intent();
    Bundle localBundle = paramBundle;
    if (paramBundle == null) {
      localBundle = new Bundle();
    }
    localIntent.putExtras(localBundle);
    localFragmentActivity.setResult(-1, localIntent);
    localFragmentActivity.finish();
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    mCalled = true;
    paramConfiguration = dialog;
    if ((paramConfiguration instanceof WebDialog)) {
      ((WebDialog)paramConfiguration).resize();
    }
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    if (dialog == null)
    {
      paramBundle = getActivity();
      Bundle localBundle = NativeProtocol.getMethodArgumentsFromIntent(paramBundle.getIntent());
      String str;
      if (!localBundle.getBoolean("is_fallback", false))
      {
        str = localBundle.getString("action");
        localBundle = localBundle.getBundle("params");
        if (Utility.isNullOrEmpty(str))
        {
          Utility.logd("FacebookDialogFragment", "Cannot start a WebDialog with an empty/missing 'actionName'");
          paramBundle.finish();
          return;
        }
        paramBundle = new WebDialog.Builder(paramBundle, str, localBundle).setOnCompleteListener(new WebDialog.OnCompleteListener()
        {
          public void onComplete(Bundle paramAnonymousBundle, FacebookException paramAnonymousFacebookException)
          {
            FacebookDialogFragment.access$000(FacebookDialogFragment.this, paramAnonymousBundle, paramAnonymousFacebookException);
          }
        }).build();
      }
      else
      {
        str = localBundle.getString("url");
        if (Utility.isNullOrEmpty(str))
        {
          Utility.logd("FacebookDialogFragment", "Cannot start a fallback WebDialog with an empty/missing 'url'");
          paramBundle.finish();
          return;
        }
        paramBundle = new FacebookWebFallbackDialog(paramBundle, str, String.format("fb%s://bridge/", new Object[] { FacebookSdk.getApplicationId() }));
        paramBundle.setOnCompleteListener(new WebDialog.OnCompleteListener()
        {
          public void onComplete(Bundle paramAnonymousBundle, FacebookException paramAnonymousFacebookException)
          {
            FacebookDialogFragment.access$100(FacebookDialogFragment.this, paramAnonymousBundle);
          }
        });
      }
      dialog = paramBundle;
    }
  }
  
  @F
  public Dialog onCreateDialog(Bundle paramBundle)
  {
    if (dialog == null)
    {
      onCompleteWebDialog(null, null);
      setShowsDialog(false);
    }
    return dialog;
  }
  
  public void onDestroyView()
  {
    if ((getDialog() != null) && (getRetainInstance())) {
      getDialog().setDismissMessage(null);
    }
    super.onDestroyView();
  }
  
  public void setDialog(Dialog paramDialog)
  {
    dialog = paramDialog;
  }
}
