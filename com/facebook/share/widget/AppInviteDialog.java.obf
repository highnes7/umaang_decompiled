package com.facebook.share.widget;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import com.facebook.FacebookCallback;
import com.facebook.FacebookException;
import com.facebook.FacebookSdk;
import com.facebook.internal.AppCall;
import com.facebook.internal.CallbackManagerImpl;
import com.facebook.internal.CallbackManagerImpl.Callback;
import com.facebook.internal.CallbackManagerImpl.RequestCodeOffset;
import com.facebook.internal.DialogFeature;
import com.facebook.internal.DialogPresenter;
import com.facebook.internal.DialogPresenter.ParameterProvider;
import com.facebook.internal.FacebookDialogBase;
import com.facebook.internal.FacebookDialogBase.ModeHandler;
import com.facebook.internal.NativeProtocol;
import com.facebook.share.internal.AppInviteDialogFeature;
import com.facebook.share.internal.ResultProcessor;
import com.facebook.share.internal.ShareInternalUtility;
import com.facebook.share.model.AppInviteContent;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

public class AppInviteDialog
  extends FacebookDialogBase<AppInviteContent, Result>
{
  public static final int DEFAULT_REQUEST_CODE = CallbackManagerImpl.RequestCodeOffset.AppInvite.toRequestCode();
  public static final String TAG = "AppInviteDialog";
  
  public AppInviteDialog(Activity paramActivity)
  {
    super(paramActivity, DEFAULT_REQUEST_CODE);
  }
  
  public AppInviteDialog(Fragment paramFragment)
  {
    super(paramFragment, DEFAULT_REQUEST_CODE);
  }
  
  public static boolean canShow()
  {
    return (canShowNativeDialog()) || (canShowWebFallback());
  }
  
  public static boolean canShowNativeDialog()
  {
    return DialogPresenter.canPresentNativeDialogWithFeature(AppInviteDialogFeature.APP_INVITES_DIALOG);
  }
  
  public static boolean canShowWebFallback()
  {
    return DialogPresenter.canPresentWebFallbackDialogWithFeature(AppInviteDialogFeature.APP_INVITES_DIALOG);
  }
  
  public static Bundle createParameters(AppInviteContent paramAppInviteContent)
  {
    Bundle localBundle = new Bundle();
    localBundle.putString("app_link_url", paramAppInviteContent.getApplinkUrl());
    localBundle.putString("preview_image_url", paramAppInviteContent.getPreviewImageUrl());
    return localBundle;
  }
  
  public static DialogFeature getFeature()
  {
    return AppInviteDialogFeature.APP_INVITES_DIALOG;
  }
  
  public static void show(Activity paramActivity, AppInviteContent paramAppInviteContent)
  {
    new AppInviteDialog(paramActivity).show(paramAppInviteContent);
  }
  
  public static void show(Fragment paramFragment, AppInviteContent paramAppInviteContent)
  {
    new AppInviteDialog(paramFragment).show(paramAppInviteContent);
  }
  
  public AppCall createBaseAppCall()
  {
    return new AppCall(getRequestCode());
  }
  
  public List<FacebookDialogBase<AppInviteContent, Result>.ModeHandler> getOrderedModeHandlers()
  {
    ArrayList localArrayList = new ArrayList();
    localArrayList.add(new NativeHandler(null));
    localArrayList.add(new WebFallbackHandler(null));
    return localArrayList;
  }
  
  public void registerCallbackImpl(CallbackManagerImpl paramCallbackManagerImpl, final FacebookCallback<Result> paramFacebookCallback)
  {
    if (paramFacebookCallback == null) {
      paramFacebookCallback = null;
    } else {
      paramFacebookCallback = new ResultProcessor(paramFacebookCallback)
      {
        public void onSuccess(AppCall paramAnonymousAppCall, Bundle paramAnonymousBundle)
        {
          if ("cancel".equalsIgnoreCase(ShareInternalUtility.getNativeDialogCompletionGesture(paramAnonymousBundle)))
          {
            paramFacebookCallback.onCancel();
            return;
          }
          paramFacebookCallback.onSuccess(new AppInviteDialog.Result(paramAnonymousBundle));
        }
      };
    }
    paramFacebookCallback = new CallbackManagerImpl.Callback()
    {
      public boolean onActivityResult(int paramAnonymousInt, Intent paramAnonymousIntent)
      {
        return ShareInternalUtility.handleActivityResult(getRequestCode(), paramAnonymousInt, paramAnonymousIntent, paramFacebookCallback);
      }
    };
    paramCallbackManagerImpl.registerCallback(getRequestCode(), paramFacebookCallback);
  }
  
  private class NativeHandler
    extends FacebookDialogBase<AppInviteContent, AppInviteDialog.Result>.ModeHandler
  {
    public NativeHandler()
    {
      super();
    }
    
    public boolean canShow(AppInviteContent paramAppInviteContent)
    {
      return AppInviteDialog.canShowNativeDialog();
    }
    
    public AppCall createAppCall(AppInviteContent paramAppInviteContent)
    {
      AppCall localAppCall = createBaseAppCall();
      Object localObject = AppInviteDialog.access$400();
      Context localContext = FacebookSdk.getApplicationContext();
      String str = ((DialogFeature)localObject).getAction();
      int i = DialogPresenter.getProtocolVersionForNativeDialog((DialogFeature)localObject);
      if (i != -1)
      {
        if (NativeProtocol.isVersionCompatibleWithBucketedIntent(i)) {
          paramAppInviteContent = AppInviteDialog.createParameters(paramAppInviteContent);
        } else {
          paramAppInviteContent = new Bundle();
        }
        localObject = paramAppInviteContent;
        if (paramAppInviteContent == null) {
          localObject = new Bundle();
        }
        paramAppInviteContent = NativeProtocol.createPlatformActivityIntent(localContext, localAppCall.getCallId().toString(), str, i, (Bundle)localObject);
        if (paramAppInviteContent != null)
        {
          localAppCall.setRequestIntent(paramAppInviteContent);
          return localAppCall;
        }
        throw new FacebookException("Unable to create Intent; this likely means theFacebook app is not installed.");
      }
      throw new FacebookException("Cannot present this dialog. This likely means that the Facebook app is not installed.");
    }
  }
  
  public static final class Result
  {
    public final Bundle bundle;
    
    public Result(Bundle paramBundle)
    {
      bundle = paramBundle;
    }
    
    public Bundle getData()
    {
      return bundle;
    }
  }
  
  private class WebFallbackHandler
    extends FacebookDialogBase<AppInviteContent, AppInviteDialog.Result>.ModeHandler
  {
    public WebFallbackHandler()
    {
      super();
    }
    
    public boolean canShow(AppInviteContent paramAppInviteContent)
    {
      return AppInviteDialog.canShowWebFallback();
    }
    
    public AppCall createAppCall(AppInviteContent paramAppInviteContent)
    {
      AppCall localAppCall = createBaseAppCall();
      DialogPresenter.setupAppCallForWebFallbackDialog(localAppCall, AppInviteDialog.createParameters(paramAppInviteContent), AppInviteDialog.access$400());
      return localAppCall;
    }
  }
}
