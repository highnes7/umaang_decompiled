package com.github.mikephil.charting.utils;

import android.os.Environment;
import com.github.mikephil.charting.data.BarEntry;
import com.github.mikephil.charting.data.Entry;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class FileUtils
{
  public static final String LOG = "MPChart-FileUtils";
  
  public FileUtils() {}
  
  /* Error */
  public static List<BarEntry> loadBarEntriesFromAssets(android.content.res.AssetManager paramAssetManager, String paramString)
  {
    // Byte code:
    //   0: new 19	java/util/ArrayList
    //   3: dup
    //   4: invokespecial 20	java/util/ArrayList:<init>	()V
    //   7: astore 4
    //   9: aconst_null
    //   10: astore_3
    //   11: aconst_null
    //   12: astore_2
    //   13: new 22	java/io/BufferedReader
    //   16: dup
    //   17: new 24	java/io/InputStreamReader
    //   20: dup
    //   21: aload_0
    //   22: aload_1
    //   23: invokevirtual 30	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   26: ldc 32
    //   28: invokespecial 35	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;Ljava/lang/String;)V
    //   31: invokespecial 38	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   34: astore_0
    //   35: aload_0
    //   36: invokevirtual 42	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   39: astore_1
    //   40: aload_1
    //   41: ifnull +45 -> 86
    //   44: aload_1
    //   45: ldc 44
    //   47: invokevirtual 50	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   50: astore_1
    //   51: aload 4
    //   53: new 52	com/github/mikephil/charting/data/BarEntry
    //   56: dup
    //   57: aload_1
    //   58: iconst_0
    //   59: aaload
    //   60: invokestatic 58	java/lang/Float:parseFloat	(Ljava/lang/String;)F
    //   63: aload_1
    //   64: iconst_1
    //   65: aaload
    //   66: invokestatic 64	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   69: invokespecial 67	com/github/mikephil/charting/data/BarEntry:<init>	(FI)V
    //   72: invokeinterface 73 2 0
    //   77: pop
    //   78: aload_0
    //   79: invokevirtual 42	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   82: astore_1
    //   83: goto -43 -> 40
    //   86: aload_0
    //   87: invokevirtual 76	java/io/BufferedReader:close	()V
    //   90: aload 4
    //   92: areturn
    //   93: astore_1
    //   94: goto +43 -> 137
    //   97: astore_1
    //   98: goto +12 -> 110
    //   101: astore_1
    //   102: aload_2
    //   103: astore_0
    //   104: goto +33 -> 137
    //   107: astore_1
    //   108: aload_3
    //   109: astore_0
    //   110: aload_0
    //   111: astore_2
    //   112: aload_1
    //   113: invokevirtual 79	java/io/IOException:toString	()Ljava/lang/String;
    //   116: pop
    //   117: aload_0
    //   118: ifnull +16 -> 134
    //   121: aload_0
    //   122: invokevirtual 76	java/io/BufferedReader:close	()V
    //   125: aload 4
    //   127: areturn
    //   128: astore_0
    //   129: aload_0
    //   130: invokevirtual 79	java/io/IOException:toString	()Ljava/lang/String;
    //   133: pop
    //   134: aload 4
    //   136: areturn
    //   137: aload_0
    //   138: ifnull +16 -> 154
    //   141: aload_0
    //   142: invokevirtual 76	java/io/BufferedReader:close	()V
    //   145: goto +9 -> 154
    //   148: astore_0
    //   149: aload_0
    //   150: invokevirtual 79	java/io/IOException:toString	()Ljava/lang/String;
    //   153: pop
    //   154: goto +5 -> 159
    //   157: aload_1
    //   158: athrow
    //   159: goto -2 -> 157
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	162	0	paramAssetManager	android.content.res.AssetManager
    //   0	162	1	paramString	String
    //   12	100	2	localAssetManager	android.content.res.AssetManager
    //   10	99	3	localObject	Object
    //   7	128	4	localArrayList	ArrayList
    // Exception table:
    //   from	to	target	type
    //   35	40	93	finally
    //   44	83	93	finally
    //   35	40	97	java/io/IOException
    //   44	83	97	java/io/IOException
    //   13	35	101	finally
    //   112	117	101	finally
    //   13	35	107	java/io/IOException
    //   86	90	128	java/io/IOException
    //   121	125	128	java/io/IOException
    //   141	145	148	java/io/IOException
  }
  
  /* Error */
  public static List<Entry> loadEntriesFromAssets(android.content.res.AssetManager paramAssetManager, String paramString)
  {
    // Byte code:
    //   0: new 19	java/util/ArrayList
    //   3: dup
    //   4: invokespecial 20	java/util/ArrayList:<init>	()V
    //   7: astore 6
    //   9: aconst_null
    //   10: astore 5
    //   12: aconst_null
    //   13: astore 4
    //   15: new 22	java/io/BufferedReader
    //   18: dup
    //   19: new 24	java/io/InputStreamReader
    //   22: dup
    //   23: aload_0
    //   24: aload_1
    //   25: invokevirtual 30	android/content/res/AssetManager:open	(Ljava/lang/String;)Ljava/io/InputStream;
    //   28: ldc 32
    //   30: invokespecial 35	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;Ljava/lang/String;)V
    //   33: invokespecial 38	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   36: astore_0
    //   37: aload_0
    //   38: invokevirtual 42	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   41: astore_1
    //   42: aload_1
    //   43: ifnull +116 -> 159
    //   46: aload_1
    //   47: ldc 44
    //   49: invokevirtual 50	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   52: astore_1
    //   53: aload_1
    //   54: arraylength
    //   55: istore_3
    //   56: iconst_0
    //   57: istore_2
    //   58: iload_3
    //   59: iconst_2
    //   60: if_icmpgt +33 -> 93
    //   63: aload 6
    //   65: new 84	com/github/mikephil/charting/data/Entry
    //   68: dup
    //   69: aload_1
    //   70: iconst_0
    //   71: aaload
    //   72: invokestatic 58	java/lang/Float:parseFloat	(Ljava/lang/String;)F
    //   75: aload_1
    //   76: iconst_1
    //   77: aaload
    //   78: invokestatic 64	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   81: invokespecial 85	com/github/mikephil/charting/data/Entry:<init>	(FI)V
    //   84: invokeinterface 73 2 0
    //   89: pop
    //   90: goto +61 -> 151
    //   93: aload_1
    //   94: arraylength
    //   95: iconst_1
    //   96: isub
    //   97: newarray float
    //   99: astore 4
    //   101: iload_2
    //   102: aload 4
    //   104: arraylength
    //   105: if_icmpge +20 -> 125
    //   108: aload 4
    //   110: iload_2
    //   111: aload_1
    //   112: iload_2
    //   113: aaload
    //   114: invokestatic 58	java/lang/Float:parseFloat	(Ljava/lang/String;)F
    //   117: fastore
    //   118: iload_2
    //   119: iconst_1
    //   120: iadd
    //   121: istore_2
    //   122: goto -21 -> 101
    //   125: aload 6
    //   127: new 52	com/github/mikephil/charting/data/BarEntry
    //   130: dup
    //   131: aload 4
    //   133: aload_1
    //   134: aload_1
    //   135: arraylength
    //   136: iconst_1
    //   137: isub
    //   138: aaload
    //   139: invokestatic 64	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   142: invokespecial 88	com/github/mikephil/charting/data/BarEntry:<init>	([FI)V
    //   145: invokeinterface 73 2 0
    //   150: pop
    //   151: aload_0
    //   152: invokevirtual 42	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   155: astore_1
    //   156: goto -114 -> 42
    //   159: aload_0
    //   160: invokevirtual 76	java/io/BufferedReader:close	()V
    //   163: aload 6
    //   165: areturn
    //   166: astore_1
    //   167: goto +46 -> 213
    //   170: astore_1
    //   171: goto +14 -> 185
    //   174: astore_1
    //   175: aload 4
    //   177: astore_0
    //   178: goto +35 -> 213
    //   181: astore_1
    //   182: aload 5
    //   184: astore_0
    //   185: aload_0
    //   186: astore 4
    //   188: aload_1
    //   189: invokevirtual 79	java/io/IOException:toString	()Ljava/lang/String;
    //   192: pop
    //   193: aload_0
    //   194: ifnull +16 -> 210
    //   197: aload_0
    //   198: invokevirtual 76	java/io/BufferedReader:close	()V
    //   201: aload 6
    //   203: areturn
    //   204: astore_0
    //   205: aload_0
    //   206: invokevirtual 79	java/io/IOException:toString	()Ljava/lang/String;
    //   209: pop
    //   210: aload 6
    //   212: areturn
    //   213: aload_0
    //   214: ifnull +16 -> 230
    //   217: aload_0
    //   218: invokevirtual 76	java/io/BufferedReader:close	()V
    //   221: goto +9 -> 230
    //   224: astore_0
    //   225: aload_0
    //   226: invokevirtual 79	java/io/IOException:toString	()Ljava/lang/String;
    //   229: pop
    //   230: goto +5 -> 235
    //   233: aload_1
    //   234: athrow
    //   235: goto -2 -> 233
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	238	0	paramAssetManager	android.content.res.AssetManager
    //   0	238	1	paramString	String
    //   57	65	2	i	int
    //   55	6	3	j	int
    //   13	174	4	localObject1	Object
    //   10	173	5	localObject2	Object
    //   7	204	6	localArrayList	ArrayList
    // Exception table:
    //   from	to	target	type
    //   37	42	166	finally
    //   46	56	166	finally
    //   63	90	166	finally
    //   93	101	166	finally
    //   101	118	166	finally
    //   125	151	166	finally
    //   151	156	166	finally
    //   37	42	170	java/io/IOException
    //   46	56	170	java/io/IOException
    //   63	90	170	java/io/IOException
    //   93	101	170	java/io/IOException
    //   101	118	170	java/io/IOException
    //   125	151	170	java/io/IOException
    //   151	156	170	java/io/IOException
    //   15	37	174	finally
    //   188	193	174	finally
    //   15	37	181	java/io/IOException
    //   159	163	204	java/io/IOException
    //   197	201	204	java/io/IOException
    //   217	221	224	java/io/IOException
  }
  
  public static List<Entry> loadEntriesFromFile(String paramString)
  {
    Object localObject1 = new File(Environment.getExternalStorageDirectory(), paramString);
    paramString = new ArrayList();
    try
    {
      localObject1 = new BufferedReader(new FileReader((File)localObject1));
      for (;;)
      {
        Object localObject2 = ((BufferedReader)localObject1).readLine();
        if (localObject2 == null) {
          break;
        }
        localObject2 = ((String)localObject2).split("#");
        int j = localObject2.length;
        int i = 0;
        if (j <= 2)
        {
          paramString.add(new Entry(Float.parseFloat(localObject2[0]), Integer.parseInt(localObject2[1])));
        }
        else
        {
          float[] arrayOfFloat = new float[localObject2.length - 1];
          while (i < arrayOfFloat.length)
          {
            arrayOfFloat[i] = Float.parseFloat(localObject2[i]);
            i += 1;
          }
          paramString.add(new BarEntry(arrayOfFloat, Integer.parseInt(localObject2[(localObject2.length - 1)])));
        }
      }
      return paramString;
    }
    catch (IOException localIOException)
    {
      localIOException.toString();
    }
  }
  
  public static void saveToSdCard(List<Entry> paramList, String paramString)
  {
    paramString = new File(Environment.getExternalStorageDirectory(), paramString);
    if (!paramString.exists()) {
      try
      {
        paramString.createNewFile();
      }
      catch (IOException localIOException)
      {
        localIOException.toString();
      }
    }
    try
    {
      paramString = new BufferedWriter(new FileWriter(paramString, true));
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        Entry localEntry = (Entry)paramList.next();
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append(localEntry.getVal());
        localStringBuilder.append("#");
        localStringBuilder.append(localEntry.getXIndex());
        paramString.append(localStringBuilder.toString());
        paramString.newLine();
      }
      paramString.close();
      return;
    }
    catch (IOException paramList)
    {
      paramList.toString();
    }
  }
}
