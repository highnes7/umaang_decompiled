package b.b.d.a.a;

import b.b.d.a.c;
import b.b.d.a.h;
import b.b.d.a.h.a;
import f.a.a.a.a;
import java.util.ArrayList;
import java.util.HashSet;

public class b
{
  public static final boolean a = false;
  public static final boolean b = false;
  public static final int c = Integer.MAX_VALUE;
  public static final int d = -2;
  public static final int e = 0;
  public static final int f = 1;
  public static final int g = 2;
  public static final int h = -1;
  public final f i;
  public final c j;
  public b k;
  public int l = 0;
  public int m = -1;
  public b n = b.a;
  public a o = a.a;
  public int p = 0;
  public h q;
  public int r = Integer.MAX_VALUE;
  
  public b(f paramF, c paramC)
  {
    i = paramF;
    j = paramC;
  }
  
  private String a(HashSet<b> paramHashSet)
  {
    if (paramHashSet.add(this))
    {
      StringBuilder localStringBuilder1 = new StringBuilder();
      localStringBuilder1.append(i.g());
      localStringBuilder1.append(":");
      localStringBuilder1.append(j.toString());
      if (k != null)
      {
        StringBuilder localStringBuilder2 = a.b(" connected to ");
        localStringBuilder2.append(k.a(paramHashSet));
        paramHashSet = localStringBuilder2.toString();
      }
      else
      {
        paramHashSet = "";
      }
      localStringBuilder1.append(paramHashSet);
      return localStringBuilder1.toString();
    }
    return "<-";
  }
  
  private boolean a(f paramF, HashSet<f> paramHashSet)
  {
    if (paramHashSet.contains(paramF)) {
      return false;
    }
    paramHashSet.add(paramF);
    if (paramF == f()) {
      return true;
    }
    paramF = paramF.b();
    int i2 = paramF.size();
    int i1 = 0;
    while (i1 < i2)
    {
      b localB = (b)paramF.get(i1);
      if ((localB.a(this)) && (localB.m()) && (a(localB.k().f(), paramHashSet))) {
        return true;
      }
      i1 += 1;
    }
    return false;
  }
  
  public int a()
  {
    return p;
  }
  
  public void a(int paramInt)
  {
    p = paramInt;
  }
  
  public void a(a paramA)
  {
    o = paramA;
  }
  
  public void a(b paramB)
  {
    if (m()) {
      n = paramB;
    }
  }
  
  public void a(c paramC)
  {
    paramC = q;
    if (paramC == null)
    {
      q = new h(h.a.a);
      return;
    }
    paramC.c();
  }
  
  public boolean a(b paramB)
  {
    paramB = paramB.l();
    c localC = j;
    boolean bool3 = true;
    boolean bool2 = true;
    if (paramB == localC) {
      return true;
    }
    boolean bool1;
    switch (localC.ordinal())
    {
    default: 
      return false;
    case 2: 
    case 4: 
    case 5: 
    case 8: 
      bool1 = bool2;
      if (paramB != c.c)
      {
        bool1 = bool2;
        if (paramB != c.e)
        {
          bool1 = bool2;
          if (paramB != c.i)
          {
            if (paramB == c.f) {
              return true;
            }
            bool1 = false;
          }
        }
      }
      return bool1;
    case 1: 
    case 3: 
    case 7: 
      bool1 = bool3;
      if (paramB != c.b)
      {
        bool1 = bool3;
        if (paramB != c.d)
        {
          if (paramB == c.h) {
            return true;
          }
          bool1 = false;
        }
      }
      return bool1;
    }
    return paramB != c.f;
  }
  
  public boolean a(b paramB, int paramInt)
  {
    return a(paramB, paramInt, -1, b.b, 0, false);
  }
  
  public boolean a(b paramB, int paramInt1, int paramInt2)
  {
    return a(paramB, paramInt1, -1, b.b, paramInt2, false);
  }
  
  public boolean a(b paramB, int paramInt1, int paramInt2, b paramB1, int paramInt3, boolean paramBoolean)
  {
    if (paramB == null)
    {
      k = null;
      l = 0;
      m = -1;
      n = b.a;
      p = 2;
      return true;
    }
    if ((!paramBoolean) && (!c(paramB))) {
      return false;
    }
    k = paramB;
    if (paramInt1 > 0) {
      l = paramInt1;
    } else {
      l = 0;
    }
    m = paramInt2;
    n = paramB1;
    p = paramInt3;
    return true;
  }
  
  public boolean a(b paramB, int paramInt1, b paramB1, int paramInt2)
  {
    return a(paramB, paramInt1, -1, paramB1, paramInt2, false);
  }
  
  public boolean a(f paramF)
  {
    if (a(paramF, new HashSet())) {
      return false;
    }
    f localF = f().D();
    if (localF == paramF) {
      return true;
    }
    return paramF.D() == localF;
  }
  
  public boolean a(f paramF, b paramB)
  {
    return a(paramF);
  }
  
  public a b()
  {
    return o;
  }
  
  public void b(int paramInt)
  {
    if (m()) {
      m = paramInt;
    }
  }
  
  public boolean b(b paramB)
  {
    c localC = j;
    if (localC == c.g) {
      return false;
    }
    if (localC == paramB.l()) {
      return true;
    }
    int i1 = j.ordinal();
    if (i1 != 1)
    {
      if (i1 != 2)
      {
        if (i1 != 3)
        {
          if (i1 != 4)
          {
            if (i1 != 7)
            {
              if (i1 != 8) {
                return false;
              }
              i1 = paramB.l().ordinal();
              return (i1 == 2) || (i1 == 4);
            }
            i1 = paramB.l().ordinal();
            return (i1 == 1) || (i1 == 3);
          }
          i1 = paramB.l().ordinal();
          return (i1 == 2) || (i1 == 8);
        }
        i1 = paramB.l().ordinal();
        return (i1 == 1) || (i1 == 7);
      }
      i1 = paramB.l().ordinal();
      return (i1 == 4) || (i1 == 8);
    }
    i1 = paramB.l().ordinal();
    return (i1 == 3) || (i1 == 7);
  }
  
  public int c()
  {
    return r;
  }
  
  public void c(int paramInt)
  {
    r = paramInt;
  }
  
  public boolean c(b paramB)
  {
    boolean bool2 = false;
    if (paramB == null) {
      return false;
    }
    c localC1 = paramB.l();
    c localC2 = j;
    if (localC1 == localC2)
    {
      if (localC2 == c.g) {
        return false;
      }
      return (localC2 != c.f) || ((paramB.f().U()) && (f().U()));
    }
    int i1 = localC2.ordinal();
    boolean bool1;
    if (i1 != 1)
    {
      if (i1 != 2)
      {
        if (i1 == 3) {
          break label203;
        }
        if (i1 != 4)
        {
          if (i1 != 6) {
            return false;
          }
          bool1 = bool2;
          if (localC1 != c.f)
          {
            bool1 = bool2;
            if (localC1 != c.h)
            {
              bool1 = bool2;
              if (localC1 != c.i) {
                bool1 = true;
              }
            }
          }
          return bool1;
        }
      }
      if ((localC1 != c.c) && (localC1 != c.e)) {
        bool1 = false;
      } else {
        bool1 = true;
      }
      bool2 = bool1;
      if ((paramB.f() instanceof j))
      {
        if ((!bool1) && (localC1 != c.i)) {
          return false;
        }
        bool2 = true;
      }
      return bool2;
    }
    label203:
    if ((localC1 != c.b) && (localC1 != c.d)) {
      bool1 = false;
    } else {
      bool1 = true;
    }
    bool2 = bool1;
    if ((paramB.f() instanceof j))
    {
      if ((!bool1) && (localC1 != c.h)) {
        return false;
      }
      bool2 = true;
    }
    return bool2;
  }
  
  public int d()
  {
    if (i.O() == 8) {
      return 0;
    }
    if (m > -1)
    {
      b localB = k;
      if ((localB != null) && (i.O() == 8)) {
        return m;
      }
    }
    return l;
  }
  
  public void d(int paramInt)
  {
    if (m()) {
      l = paramInt;
    }
  }
  
  public final b e()
  {
    int i1 = j.ordinal();
    if (i1 != 1)
    {
      if (i1 != 2)
      {
        if (i1 != 3)
        {
          if (i1 != 4) {
            return null;
          }
          return i.y;
        }
        return i.x;
      }
      return i.A;
    }
    return i.z;
  }
  
  public f f()
  {
    return i;
  }
  
  public int g()
  {
    switch (j.ordinal())
    {
    default: 
      return 0;
    case 5: 
      return 1;
    case 7: 
    case 8: 
      return 0;
    }
    return 2;
  }
  
  public int h()
  {
    switch (j.ordinal())
    {
    default: 
      return 0;
    case 5: 
      return 2;
    case 8: 
      return 1;
    case 2: 
    case 4: 
    case 7: 
      return 0;
    case 1: 
    case 3: 
      return 1;
    }
    return 3;
  }
  
  public h i()
  {
    return q;
  }
  
  public b j()
  {
    return n;
  }
  
  public b k()
  {
    return k;
  }
  
  public c l()
  {
    return j;
  }
  
  public boolean m()
  {
    return k != null;
  }
  
  public boolean n()
  {
    int i1 = j.ordinal();
    return (i1 == 1) || (i1 == 2) || (i1 == 3) || (i1 == 4);
  }
  
  public boolean o()
  {
    int i1 = j.ordinal();
    return (i1 != 1) && (i1 != 3) && (i1 != 6) && (i1 != 7);
  }
  
  public void p()
  {
    k = null;
    l = 0;
    m = -1;
    n = b.b;
    p = 0;
    o = a.a;
  }
  
  public String toString()
  {
    Object localObject = new HashSet();
    StringBuilder localStringBuilder1 = new StringBuilder();
    localStringBuilder1.append(i.g());
    localStringBuilder1.append(":");
    localStringBuilder1.append(j.toString());
    if (k != null)
    {
      StringBuilder localStringBuilder2 = a.b(" connected to ");
      localStringBuilder2.append(k.a((HashSet)localObject));
      localObject = localStringBuilder2.toString();
    }
    else
    {
      localObject = "";
    }
    localStringBuilder1.append((String)localObject);
    return localStringBuilder1.toString();
  }
  
  public static enum a
  {
    public a() {}
  }
  
  public static enum b
  {
    public b() {}
  }
  
  public static enum c
  {
    public c() {}
  }
}
