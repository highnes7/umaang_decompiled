package b.b.d.a.a;

import b.b.d.a.e;
import java.util.ArrayList;

public class j
  extends f
{
  public static final int Da = 0;
  public static final int Ea = 1;
  public static final int Fa = 0;
  public static final int Ga = 1;
  public static final int Ha = 2;
  public static final int Ia = -1;
  public float Ja = -1.0F;
  public int Ka = -1;
  public int La = -1;
  public b Ma = y;
  public int Na = 0;
  public boolean Oa = false;
  public int Pa = 0;
  public l Qa = new l();
  public int Ra = 8;
  
  public j()
  {
    F.clear();
    F.add(Ma);
  }
  
  public String J()
  {
    return "Guideline";
  }
  
  public b a(b.c paramC)
  {
    int i = paramC.ordinal();
    if (i != 1) {
      if (i != 2)
      {
        if (i != 3) {
          if (i != 4) {
            break label53;
          }
        }
      }
      else
      {
        if (Na != 0) {
          break label53;
        }
        return Ma;
      }
    }
    if (Na == 1) {
      return Ma;
    }
    label53:
    return null;
  }
  
  public void a(e paramE, int paramInt)
  {
    h localH = (h)D();
    if (localH == null) {
      return;
    }
    b localB1 = localH.a(b.c.b);
    b localB2 = localH.a(b.c.d);
    if (Na == 0)
    {
      localB1 = localH.a(b.c.c);
      localB2 = localH.a(b.c.e);
    }
    if (Ka != -1)
    {
      paramE.a(e.a(paramE, paramE.a(Ma), paramE.a(localB1), Ka, false));
      return;
    }
    if (La != -1)
    {
      paramE.a(e.a(paramE, paramE.a(Ma), paramE.a(localB2), -La, false));
      return;
    }
    if (Ja != -1.0F) {
      paramE.a(e.a(paramE, paramE.a(Ma), paramE.a(localB1), paramE.a(localB2), Ja, Oa));
    }
  }
  
  public void a(boolean paramBoolean)
  {
    if (Oa == paramBoolean) {
      return;
    }
    Oa = paramBoolean;
  }
  
  public ArrayList<b> b()
  {
    return F;
  }
  
  public void b(int paramInt1, int paramInt2)
  {
    if (Na == 1)
    {
      paramInt1 -= V;
      if (Ka != -1)
      {
        s(paramInt1);
        return;
      }
      if (La != -1)
      {
        t(D().P() - paramInt1);
        return;
      }
      if (Ja != -1.0F) {
        e(paramInt1 / D().P());
      }
    }
    else
    {
      paramInt1 = paramInt2 - W;
      if (Ka != -1)
      {
        s(paramInt1);
        return;
      }
      if (La != -1)
      {
        t(D().p() - paramInt1);
        return;
      }
      if (Ja != -1.0F) {
        e(paramInt1 / D().p());
      }
    }
  }
  
  public void b(e paramE, int paramInt)
  {
    if (D() == null) {
      return;
    }
    paramInt = paramE.b(Ma);
    if (Na == 1)
    {
      q(paramInt);
      r(0);
      h(D().p());
      n(0);
      return;
    }
    q(0);
    r(paramInt);
    n(D().P());
    h(0);
  }
  
  public void e(float paramFloat)
  {
    if (paramFloat > -1.0F)
    {
      Ja = paramFloat;
      Ka = -1;
      La = -1;
    }
  }
  
  public void fa()
  {
    if (Ka != -1)
    {
      pa();
      return;
    }
    if (Ja != -1.0F)
    {
      oa();
      return;
    }
    if (La != -1) {
      na();
    }
  }
  
  public b ga()
  {
    return Ma;
  }
  
  public l ha()
  {
    l localL = Qa;
    int i = n();
    int j = Ra;
    int k = o();
    int m = Ra;
    localL.a(i - j, k - m * 2, m * 2, m * 2);
    if (ia() == 0)
    {
      localL = Qa;
      i = n();
      j = Ra;
      k = o();
      m = Ra;
      localL.a(i - j * 2, k - m, m * 2, m * 2);
    }
    return Qa;
  }
  
  public int ia()
  {
    return Na;
  }
  
  public int ja()
  {
    return Ka;
  }
  
  public int ka()
  {
    if (Ja != -1.0F) {
      return 0;
    }
    if (Ka != -1) {
      return 1;
    }
    if (La != -1) {
      return 2;
    }
    return -1;
  }
  
  public int la()
  {
    return La;
  }
  
  public float ma()
  {
    return Ja;
  }
  
  public void na()
  {
    int i = S();
    if (Na == 0) {
      i = T();
    }
    s(i);
  }
  
  public void oa()
  {
    int i = D().P() - S();
    if (Na == 0) {
      i = D().p() - T();
    }
    t(i);
  }
  
  public void pa()
  {
    float f = S() / D().P();
    if (Na == 0) {
      f = T() / D().p();
    }
    e(f);
  }
  
  public void s(int paramInt)
  {
    if (paramInt > -1)
    {
      Ja = -1.0F;
      Ka = paramInt;
      La = -1;
    }
  }
  
  public void t(int paramInt)
  {
    if (paramInt > -1)
    {
      Ja = -1.0F;
      Ka = -1;
      La = paramInt;
    }
  }
  
  public void u(int paramInt)
  {
    e(paramInt / 100.0F);
  }
  
  public void v(int paramInt)
  {
    Pa = paramInt;
  }
  
  public void w(int paramInt)
  {
    if (Na == paramInt) {
      return;
    }
    Na = paramInt;
    F.clear();
    if (Na == 1) {
      Ma = x;
    } else {
      Ma = y;
    }
    F.add(Ma);
  }
}
