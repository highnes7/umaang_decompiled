package b.b.d.a;

import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

public class e
{
  public static final boolean a = false;
  public static int b = 1000;
  public int c = 0;
  public HashMap<String, h> d = null;
  public d e = new d();
  public int f = 32;
  public int g;
  public b[] h;
  public boolean[] i;
  public int j;
  public int k;
  public int l;
  public final c m;
  public h[] n;
  public int o;
  public b[] p;
  
  public e()
  {
    int i1 = f;
    g = i1;
    h = null;
    i = new boolean[i1];
    j = 1;
    k = 0;
    l = i1;
    n = new h[b];
    o = 0;
    p = new b[i1];
    h = new b[i1];
    s();
    m = new c();
  }
  
  public static b a(e paramE, h paramH1, h paramH2, int paramInt1, float paramFloat, h paramH3, h paramH4, int paramInt2, boolean paramBoolean)
  {
    b localB = paramE.b();
    localB.a(paramH1, paramH2, paramInt1, paramFloat, paramH3, paramH4, paramInt2);
    if (paramBoolean)
    {
      paramH1 = paramE.a();
      paramE = paramE.a();
      m = 4;
      m = 4;
      localB.a(paramH1, paramE);
    }
    return localB;
  }
  
  public static b a(e paramE, h paramH1, h paramH2, int paramInt, boolean paramBoolean)
  {
    b localB = paramE.b();
    localB.a(paramH1, paramH2, paramInt);
    if (paramBoolean) {
      localB.a(paramE.a(), 1);
    }
    return localB;
  }
  
  public static b a(e paramE, h paramH1, h paramH2, h paramH3, float paramFloat, boolean paramBoolean)
  {
    b localB = paramE.b();
    if (paramBoolean) {
      paramE.b(localB);
    }
    return localB.a(paramH1, paramH2, paramH3, paramFloat);
  }
  
  private h a(h.a paramA)
  {
    Object localObject = (h)m.b.a();
    if (localObject == null)
    {
      paramA = new h(paramA);
    }
    else
    {
      ((h)localObject).c();
      ((h)localObject).b(paramA);
      paramA = (h.a)localObject;
    }
    int i1 = o;
    int i2 = b;
    if (i1 >= i2)
    {
      b = i2 * 2;
      n = ((h[])Arrays.copyOf(n, b));
    }
    localObject = n;
    i1 = o;
    o = (i1 + 1);
    localObject[i1] = paramA;
    return paramA;
  }
  
  private void a(b paramB, int paramInt)
  {
    paramB.a(a(), paramInt);
  }
  
  private int b(d paramD)
    throws Exception
  {
    int i1 = 0;
    Object localObject;
    while (i1 < k)
    {
      localObject = h;
      if ((b.p != h.a.a) && (c < 0.0F))
      {
        i1 = 1;
        break label69;
      }
      i1 += 1;
    }
    i1 = 0;
    label69:
    if (i1 != 0)
    {
      int i7 = 0;
      i1 = 0;
      for (;;)
      {
        i2 = i1;
        if (i7 != 0) {
          break;
        }
        int i9 = i1 + 1;
        int i4 = 0;
        i1 = -1;
        i2 = -1;
        float f1 = Float.MAX_VALUE;
        int i5;
        for (int i3 = 0; i4 < k; i3 = i5)
        {
          localObject = h[i4];
          int i8;
          int i6;
          float f2;
          if (b.p == h.a.a)
          {
            i8 = i1;
            i6 = i2;
            f2 = f1;
            i5 = i3;
          }
          else
          {
            i8 = i1;
            i6 = i2;
            f2 = f1;
            i5 = i3;
            if (c < 0.0F)
            {
              i5 = i1;
              i6 = 1;
              i1 = i3;
              i3 = i5;
              i5 = i6;
              while (i5 < j)
              {
                h localH = m.c[i5];
                float f3 = e.b(localH);
                if (f3 > 0.0F)
                {
                  i8 = i1;
                  i6 = i3;
                  i1 = 0;
                  i3 = i2;
                  for (i2 = i8; i1 < 6; i2 = i8)
                  {
                    f2 = o[i1] / f3;
                    if ((f2 >= f1) || (i1 != i2))
                    {
                      i8 = i2;
                      if (i1 <= i2) {}
                    }
                    else
                    {
                      f1 = f2;
                      i6 = i4;
                      i3 = i5;
                      i8 = i1;
                    }
                    i1 += 1;
                  }
                  i1 = i2;
                  i2 = i3;
                  i3 = i6;
                }
                i5 += 1;
              }
              i5 = i1;
              f2 = f1;
              i6 = i2;
              i8 = i3;
            }
          }
          i4 += 1;
          i1 = i8;
          i2 = i6;
          f1 = f2;
        }
        if (i1 != -1)
        {
          localObject = h[i1];
          b.l = -1;
          ((b)localObject).b(m.c[i2]);
          b.l = i1;
          i1 = 0;
          while (i1 < k)
          {
            h[i1].a((b)localObject);
            i1 += 1;
          }
          paramD.a(this);
          i1 = i9;
        }
        else
        {
          i7 = 1;
          i1 = i9;
        }
      }
    }
    int i2 = 0;
    i1 = 0;
    while (i1 < k)
    {
      paramD = h;
      if ((b.p != h.a.a) && (c < 0.0F)) {
        return i2;
      }
      i1 += 1;
    }
    return i2;
  }
  
  public static b b(e paramE, h paramH1, h paramH2, int paramInt, boolean paramBoolean)
  {
    h localH = paramE.c();
    b localB = paramE.b();
    localB.a(paramH1, paramH2, localH, paramInt);
    if (paramBoolean)
    {
      paramInt = (int)(e.b(localH) * -1.0F);
      localB.a(paramE.a(), paramInt);
    }
    return localB;
  }
  
  private h b(String paramString, h.a paramA)
  {
    if (j + 1 >= g) {
      r();
    }
    paramA = a(paramA);
    paramA.a(paramString);
    c += 1;
    j += 1;
    k = c;
    if (d == null) {
      d = new HashMap();
    }
    d.put(paramString, paramA);
    m.c[c] = paramA;
    return paramA;
  }
  
  private String b(int paramInt)
  {
    paramInt *= 4;
    int i1 = paramInt / 1024;
    int i2 = i1 / 1024;
    if (i2 > 0) {
      return f.a.a.a.a.a("", i2, " Mb");
    }
    if (i1 > 0) {
      return f.a.a.a.a.a("", i1, " Kb");
    }
    return f.a.a.a.a.a("", paramInt, " bytes");
  }
  
  private void b(b paramB)
  {
    paramB.a(a(), a());
  }
  
  private int c(d paramD)
  {
    int i1 = 0;
    while (i1 < j)
    {
      i[i1] = false;
      i1 += 1;
    }
    i1 = 0;
    int i3 = 0;
    int i4 = 0;
    while (i1 == 0)
    {
      int i6 = i3 + 1;
      Object localObject2 = paramD.a();
      i3 = i1;
      int i2 = i4;
      Object localObject1 = localObject2;
      if (localObject2 != null)
      {
        localObject1 = i;
        i2 = k;
        if (localObject1[i2] != 0)
        {
          localObject1 = null;
          i3 = i1;
          i2 = i4;
        }
        else
        {
          localObject1[i2] = 1;
          i4 += 1;
          i3 = i1;
          i2 = i4;
          localObject1 = localObject2;
          if (i4 >= j)
          {
            i3 = 1;
            localObject1 = localObject2;
            i2 = i4;
          }
        }
      }
      if (localObject1 != null)
      {
        i1 = 0;
        i4 = -1;
        float f2;
        for (float f1 = Float.MAX_VALUE; i1 < k; f1 = f2)
        {
          localObject2 = h[i1];
          int i5;
          if (b.p == h.a.a)
          {
            i5 = i4;
            f2 = f1;
          }
          else
          {
            i5 = i4;
            f2 = f1;
            if (((b)localObject2).a((h)localObject1))
            {
              float f3 = e.b((h)localObject1);
              i5 = i4;
              f2 = f1;
              if (f3 < 0.0F)
              {
                f3 = -c / f3;
                i5 = i4;
                f2 = f1;
                if (f3 < f1)
                {
                  i5 = i1;
                  f2 = f3;
                }
              }
            }
          }
          i1 += 1;
          i4 = i5;
        }
        if (i4 > -1)
        {
          localObject2 = h[i4];
          b.l = -1;
          ((b)localObject2).b((h)localObject1);
          b.l = i4;
          i1 = 0;
          while (i1 < k)
          {
            h[i1].a((b)localObject2);
            i1 += 1;
          }
          paramD.a(this);
          try
          {
            b(paramD);
            i1 = i3;
            i3 = i6;
            i4 = i2;
          }
          catch (Exception localException)
          {
            localException.printStackTrace();
            i1 = i3;
            i3 = i6;
            i4 = i2;
          }
          continue;
        }
      }
      i1 = 1;
      i3 = i6;
      i4 = i2;
    }
    return i3;
  }
  
  public static b c(e paramE, h paramH1, h paramH2, int paramInt, boolean paramBoolean)
  {
    h localH = paramE.c();
    b localB = paramE.b();
    localB.b(paramH1, paramH2, localH, paramInt);
    if (paramBoolean)
    {
      paramInt = (int)(e.b(localH) * -1.0F);
      localB.a(paramE.a(), paramInt);
    }
    return localB;
  }
  
  private void c(b paramB)
  {
    if (k > 0)
    {
      e.a(paramB, h);
      if (e.c == 0) {
        f = true;
      }
    }
  }
  
  private void o()
  {
    int i1 = 0;
    while (i1 < k)
    {
      b localB = h[i1];
      b.n = c;
      i1 += 1;
    }
  }
  
  private void p()
  {
    q();
    Object localObject1 = "";
    int i1 = 0;
    while (i1 < k)
    {
      localObject1 = f.a.a.a.a.b((String)localObject1);
      ((StringBuilder)localObject1).append(h[i1]);
      localObject1 = f.a.a.a.a.c(((StringBuilder)localObject1).toString(), "\n");
      i1 += 1;
    }
    Object localObject2 = localObject1;
    if (e.a.size() != 0) {
      localObject2 = f.a.a.a.a.a(f.a.a.a.a.b((String)localObject1), e, "\n");
    }
    System.out.println((String)localObject2);
  }
  
  private void q()
  {
    Object localObject = f.a.a.a.a.b("Display Rows (");
    ((StringBuilder)localObject).append(k);
    ((StringBuilder)localObject).append("x");
    localObject = f.a.a.a.a.a((StringBuilder)localObject, j, ") :\n\t | C | ");
    int i1 = 1;
    while (i1 <= j)
    {
      localObject = f.a.a.a.a.c(f.a.a.a.a.a((String)localObject, m.c[i1]), " | ");
      i1 += 1;
    }
    localObject = f.a.a.a.a.c((String)localObject, "\n");
    System.out.println((String)localObject);
  }
  
  private void r()
  {
    f *= 2;
    h = ((b[])Arrays.copyOf(h, f));
    c localC = m;
    c = ((h[])Arrays.copyOf(c, f));
    int i1 = f;
    i = new boolean[i1];
    g = i1;
    l = i1;
    e.a.clear();
  }
  
  private void s()
  {
    int i1 = 0;
    for (;;)
    {
      Object localObject = h;
      if (i1 >= localObject.length) {
        break;
      }
      localObject = localObject[i1];
      if (localObject != null) {
        m.a.a(localObject);
      }
      h[i1] = null;
      i1 += 1;
    }
  }
  
  public float a(String paramString)
  {
    paramString = a(paramString, h.a.a);
    if (paramString == null) {
      return 0.0F;
    }
    return n;
  }
  
  public b a(int paramInt)
  {
    return h[paramInt];
  }
  
  public b a(h paramH1, h paramH2, int paramInt1, int paramInt2)
  {
    b localB = b();
    localB.a(paramH1, paramH2, paramInt1);
    paramH1 = a();
    paramH2 = a();
    m = paramInt2;
    m = paramInt2;
    localB.a(paramH1, paramH2);
    a(localB);
    return localB;
  }
  
  public h a()
  {
    if (j + 1 >= g) {
      r();
    }
    h localH = a(h.a.d);
    c += 1;
    j += 1;
    int i1 = c;
    k = i1;
    m.c[i1] = localH;
    return localH;
  }
  
  public h a(Object paramObject)
  {
    Object localObject = null;
    if (paramObject == null) {
      return null;
    }
    if (j + 1 >= g) {
      r();
    }
    if ((paramObject instanceof b.b.d.a.a.b))
    {
      b.b.d.a.a.b localB = (b.b.d.a.a.b)paramObject;
      localObject = localB.i();
      paramObject = localObject;
      if (localObject == null)
      {
        localB.a(m);
        paramObject = localB.i();
      }
      int i1 = k;
      if ((i1 != -1) && (i1 <= c))
      {
        localObject = paramObject;
        if (m.c[i1] != null) {}
      }
      else
      {
        if (k != -1) {
          paramObject.c();
        }
        c += 1;
        j += 1;
        i1 = c;
        k = i1;
        p = h.a.a;
        m.c[i1] = paramObject;
        localObject = paramObject;
      }
    }
    return localObject;
  }
  
  public h a(String paramString, h.a paramA)
  {
    if (d == null) {
      d = new HashMap();
    }
    h localH2 = (h)d.get(paramString);
    h localH1 = localH2;
    if (localH2 == null) {
      localH1 = b(paramString, paramA);
    }
    return localH1;
  }
  
  public void a(b paramB)
  {
    if (paramB == null) {
      return;
    }
    if ((k + 1 >= l) || (j + 1 >= g)) {
      r();
    }
    if (!f)
    {
      c(paramB);
      paramB.a();
      paramB.d();
      if (!paramB.c()) {
        return;
      }
    }
    Object localObject = h;
    int i1 = k;
    if (localObject[i1] != null) {
      m.a.a(localObject[i1]);
    }
    if (!f) {
      paramB.h();
    }
    localObject = h;
    i1 = k;
    localObject[i1] = paramB;
    localObject = b;
    l = i1;
    k = (i1 + 1);
    int i4 = r;
    if (i4 > 0)
    {
      for (;;)
      {
        localObject = p;
        if (localObject.length >= i4) {
          break;
        }
        p = new b[localObject.length * 2];
      }
      int i3 = 0;
      i1 = 0;
      int i2;
      for (;;)
      {
        i2 = i3;
        if (i1 >= i4) {
          break;
        }
        localObject[i1] = b.q[i1];
        i1 += 1;
      }
      while (i2 < i4)
      {
        b localB = localObject[i2];
        if (localB != paramB)
        {
          e.a(localB, paramB);
          localB.h();
        }
        i2 += 1;
      }
    }
  }
  
  public void a(d paramD)
    throws Exception
  {
    paramD.a(this);
    b(paramD);
    c(paramD);
    o();
  }
  
  public void a(h paramH, int paramInt)
  {
    int i1 = l;
    if (i1 != -1)
    {
      localB = h[i1];
      if (f)
      {
        c = paramInt;
        return;
      }
      localB = b();
      localB.c(paramH, paramInt);
      a(localB);
      return;
    }
    b localB = b();
    localB.b(paramH, paramInt);
    a(localB);
  }
  
  public void a(h paramH1, h paramH2, int paramInt1, float paramFloat, h paramH3, h paramH4, int paramInt2, int paramInt3)
  {
    b localB = b();
    localB.a(paramH1, paramH2, paramInt1, paramFloat, paramH3, paramH4, paramInt2);
    paramH1 = a();
    paramH2 = a();
    m = paramInt3;
    m = paramInt3;
    localB.a(paramH1, paramH2);
    a(localB);
  }
  
  public int b(Object paramObject)
  {
    paramObject = ((b.b.d.a.a.b)paramObject).i();
    if (paramObject != null) {
      return (int)(n + 0.5F);
    }
    return 0;
  }
  
  public b b()
  {
    b localB = (b)m.a.a();
    if (localB == null) {
      return new b(m);
    }
    localB.e();
    return localB;
  }
  
  public void b(h paramH1, h paramH2, int paramInt1, int paramInt2)
  {
    b localB = b();
    h localH = c();
    m = paramInt2;
    localB.a(paramH1, paramH2, localH, paramInt1);
    a(localB);
  }
  
  public h c()
  {
    if (j + 1 >= g) {
      r();
    }
    h localH = a(h.a.c);
    c += 1;
    j += 1;
    int i1 = c;
    k = i1;
    m.c[i1] = localH;
    return localH;
  }
  
  public void c(h paramH1, h paramH2, int paramInt1, int paramInt2)
  {
    b localB = b();
    h localH = c();
    m = paramInt2;
    localB.b(paramH1, paramH2, localH, paramInt1);
    a(localB);
  }
  
  public void d()
  {
    q();
    Object localObject1 = "";
    int i1 = 0;
    while (i1 < k)
    {
      localObject1 = f.a.a.a.a.b((String)localObject1);
      ((StringBuilder)localObject1).append(h[i1].g());
      localObject1 = f.a.a.a.a.c(((StringBuilder)localObject1).toString(), "\n");
      i1 += 1;
    }
    Object localObject2 = localObject1;
    if (e != null) {
      localObject2 = f.a.a.a.a.a(f.a.a.a.a.b((String)localObject1), e, "\n");
    }
    System.out.println((String)localObject2);
  }
  
  public void e()
  {
    int i2 = 0;
    for (int i1 = 0; i2 < f; i1 = i3)
    {
      localObject = h;
      i3 = i1;
      if (localObject[i2] != null) {
        i3 = localObject[i2].f() + i1;
      }
      i2 += 1;
    }
    int i3 = 0;
    int i4;
    for (i2 = 0; i3 < k; i2 = i4)
    {
      localObject = h;
      i4 = i2;
      if (localObject[i3] != null) {
        i4 = localObject[i3].f() + i2;
      }
      i3 += 1;
    }
    Object localObject = System.out;
    StringBuilder localStringBuilder = f.a.a.a.a.b("Linear System -> Table size: ");
    localStringBuilder.append(f);
    localStringBuilder.append(" (");
    i3 = f;
    localStringBuilder.append(b(i3 * i3));
    localStringBuilder.append(") -- row sizes: ");
    localStringBuilder.append(b(i1));
    localStringBuilder.append(", actual size: ");
    localStringBuilder.append(b(i2));
    localStringBuilder.append(" rows: ");
    localStringBuilder.append(k);
    localStringBuilder.append("/");
    localStringBuilder.append(l);
    localStringBuilder.append(" cols: ");
    localStringBuilder.append(j);
    localStringBuilder.append("/");
    localStringBuilder.append(g);
    localStringBuilder.append(" ");
    localStringBuilder.append(0);
    localStringBuilder.append(" occupied cells, ");
    localStringBuilder.append(b(0));
    ((PrintStream)localObject).println(localStringBuilder.toString());
  }
  
  public void f()
  {
    q();
    Object localObject1 = "";
    int i1 = 0;
    while (i1 < k)
    {
      localObject2 = localObject1;
      if (h[i1].b.p == h.a.a)
      {
        localObject1 = f.a.a.a.a.b((String)localObject1);
        ((StringBuilder)localObject1).append(h[i1].g());
        localObject2 = f.a.a.a.a.c(((StringBuilder)localObject1).toString(), "\n");
      }
      i1 += 1;
      localObject1 = localObject2;
    }
    Object localObject2 = localObject1;
    if (e.a.size() != 0) {
      localObject2 = f.a.a.a.a.a(f.a.a.a.a.b((String)localObject1), e, "\n");
    }
    System.out.println((String)localObject2);
  }
  
  public c g()
  {
    return m;
  }
  
  public d h()
  {
    return e;
  }
  
  public int i()
  {
    int i1 = 0;
    int i3;
    for (int i2 = 0; i1 < k; i2 = i3)
    {
      b[] arrayOfB = h;
      i3 = i2;
      if (arrayOfB[i1] != null) {
        i3 = arrayOfB[i1].f() + i2;
      }
      i1 += 1;
    }
    return i2;
  }
  
  public int j()
  {
    return k;
  }
  
  public int k()
  {
    return c;
  }
  
  public void l()
    throws Exception
  {
    a(e);
  }
  
  public void m()
  {
    e.a(this);
  }
  
  public void n()
  {
    int i1 = 0;
    for (;;)
    {
      localObject = m;
      h[] arrayOfH = c;
      if (i1 >= arrayOfH.length) {
        break;
      }
      localObject = arrayOfH[i1];
      if (localObject != null) {
        ((h)localObject).c();
      }
      i1 += 1;
    }
    b.a(n, o);
    o = 0;
    Arrays.fill(m.c, null);
    Object localObject = d;
    if (localObject != null) {
      ((HashMap)localObject).clear();
    }
    c = 0;
    e.a.clear();
    j = 1;
    i1 = 0;
    while (i1 < k)
    {
      h[i1].d = false;
      i1 += 1;
    }
    s();
    k = 0;
  }
}
