package b.b.d.a;

import f.a.a.a.a;
import java.util.Arrays;

public class h
{
  public static final boolean a = false;
  public static final int b = 0;
  public static final int c = 1;
  public static final int d = 2;
  public static final int e = 3;
  public static final int f = 4;
  public static final int g = 5;
  public static int h = 1;
  public static final int i = 6;
  public String j;
  public int k = -1;
  public int l = -1;
  public int m = 0;
  public float n;
  public float[] o = new float[6];
  public a p;
  public b[] q = new b[8];
  public int r = 0;
  
  public h(a paramA)
  {
    p = paramA;
  }
  
  public h(String paramString, a paramA)
  {
    j = paramString;
    p = paramA;
  }
  
  public static String a(a paramA)
  {
    h += 1;
    int i1 = paramA.ordinal();
    if (i1 != 0)
    {
      if (i1 != 1)
      {
        if (i1 != 2)
        {
          if (i1 != 3)
          {
            paramA = a.b("V");
            paramA.append(h);
            return paramA.toString();
          }
          paramA = a.b("e");
          paramA.append(h);
          return paramA.toString();
        }
        paramA = a.b("S");
        paramA.append(h);
        return paramA.toString();
      }
      paramA = a.b("C");
      paramA.append(h);
      return paramA.toString();
    }
    paramA = a.b("U");
    paramA.append(h);
    return paramA.toString();
  }
  
  public void a()
  {
    int i1 = 0;
    while (i1 < 6)
    {
      o[i1] = 0.0F;
      i1 += 1;
    }
  }
  
  public void a(b paramB)
  {
    int i1 = 0;
    int i2;
    for (;;)
    {
      i2 = r;
      if (i1 >= i2) {
        break;
      }
      if (q[i1] == paramB) {
        return;
      }
      i1 += 1;
    }
    b[] arrayOfB = q;
    if (i2 >= arrayOfB.length) {
      q = ((b[])Arrays.copyOf(arrayOfB, arrayOfB.length * 2));
    }
    arrayOfB = q;
    i1 = r;
    arrayOfB[i1] = paramB;
    r = (i1 + 1);
  }
  
  public void a(String paramString)
  {
    j = paramString;
  }
  
  public String b()
  {
    return j;
  }
  
  public void b(b paramB)
  {
    int i2 = 0;
    int i1 = 0;
    while (i1 < r)
    {
      if (q[i1] == paramB)
      {
        int i3;
        for (;;)
        {
          i3 = r;
          if (i2 >= i3 - i1 - 1) {
            break;
          }
          paramB = q;
          i3 = i1 + i2;
          paramB[i3] = paramB[(i3 + 1)];
          i2 += 1;
        }
        r = (i3 - 1);
        return;
      }
      i1 += 1;
    }
  }
  
  public void b(a paramA)
  {
    p = paramA;
  }
  
  public void c()
  {
    j = null;
    p = a.e;
    m = 0;
    k = -1;
    l = -1;
    n = 0.0F;
    r = 0;
  }
  
  public String d()
  {
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append(this);
    ((StringBuilder)localObject).append("[");
    localObject = ((StringBuilder)localObject).toString();
    int i1 = 0;
    while (i1 < o.length)
    {
      localObject = a.b((String)localObject);
      ((StringBuilder)localObject).append(o[i1]);
      localObject = ((StringBuilder)localObject).toString();
      if (i1 < o.length - 1) {
        localObject = a.c((String)localObject, ", ");
      } else {
        localObject = a.c((String)localObject, "] ");
      }
      i1 += 1;
    }
    return localObject;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = a.b("");
    localStringBuilder.append(j);
    return localStringBuilder.toString();
  }
  
  public static enum a
  {
    public a() {}
  }
}
