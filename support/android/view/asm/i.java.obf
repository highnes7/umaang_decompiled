package b.b.d.a;

import java.io.PrintStream;
import java.util.Arrays;

public class a
{
  public static final boolean a = false;
  public static final int b = -1;
  public int c = 0;
  public final b d;
  public final c e;
  public int f = 8;
  public h g = null;
  public int[] h;
  public int[] i;
  public float[] j;
  public int k;
  public int l;
  public boolean m;
  
  public a(b paramB, c paramC)
  {
    int n = f;
    h = new int[n];
    i = new int[n];
    j = new float[n];
    k = -1;
    l = -1;
    m = false;
    d = paramB;
    e = paramC;
  }
  
  public final h a(int paramInt)
  {
    int i1 = k;
    int n = 0;
    while ((i1 != -1) && (n < c))
    {
      if (n == paramInt) {
        return e.c[h[i1]];
      }
      i1 = i[i1];
      n += 1;
    }
    return null;
  }
  
  public final void a()
  {
    k = -1;
    l = -1;
    m = false;
    c = 0;
  }
  
  public void a(float paramFloat)
  {
    int i1 = k;
    int n = 0;
    while ((i1 != -1) && (n < c))
    {
      float[] arrayOfFloat = j;
      arrayOfFloat[i1] /= paramFloat;
      i1 = i[i1];
      n += 1;
    }
  }
  
  public void a(b paramB)
  {
    int i1 = k;
    int n = 0;
    while ((i1 != -1) && (n < c))
    {
      e.c[h[i1]].a(paramB);
      i1 = i[i1];
      n += 1;
    }
  }
  
  public void a(b paramB1, b paramB2)
  {
    int n = k;
    int i1 = 0;
    for (;;)
    {
      if ((n == -1) || (i1 >= c)) {
        return;
      }
      int i2 = h[n];
      Object localObject = b;
      if (i2 == k)
      {
        float f1 = j[n];
        c((h)localObject);
        localObject = e;
        i1 = k;
        n = 0;
        while ((i1 != -1) && (n < c))
        {
          a(e.c[h[i1]], j[i1] * f1);
          i1 = i[i1];
          n += 1;
        }
        float f2 = c;
        c = (c * f1 + f2);
        b.b(paramB1);
        n = k;
        break;
      }
      n = i[n];
      i1 += 1;
    }
  }
  
  public void a(b paramB, b[] paramArrayOfB)
  {
    int n = k;
    int i1 = 0;
    for (;;)
    {
      if ((n == -1) || (i1 >= c)) {
        return;
      }
      Object localObject = e.c[h[n]];
      if (l != -1)
      {
        float f1 = j[n];
        c((h)localObject);
        localObject = paramArrayOfB[l];
        if (!f)
        {
          a localA = e;
          i1 = k;
          n = 0;
          while ((i1 != -1) && (n < c))
          {
            a(e.c[h[i1]], j[i1] * f1);
            i1 = i[i1];
            n += 1;
          }
        }
        float f2 = c;
        c = (c * f1 + f2);
        b.b(paramB);
        n = k;
        break;
      }
      n = i[n];
      i1 += 1;
    }
  }
  
  public final void a(h paramH, float paramFloat)
  {
    if (paramFloat == 0.0F) {
      return;
    }
    int n = k;
    if (n == -1)
    {
      k = 0;
      localObject = j;
      n = k;
      localObject[n] = paramFloat;
      h[n] = k;
      i[n] = -1;
      c += 1;
      if (!m) {
        l += 1;
      }
      return;
    }
    int i1 = 0;
    int i3 = -1;
    int i2;
    while ((n != -1) && (i1 < c))
    {
      localObject = h;
      int i4 = localObject[n];
      i2 = k;
      if (i4 == i2)
      {
        paramH = j;
        paramH[n] += paramFloat;
        if (paramH[n] == 0.0F)
        {
          if (n == k)
          {
            k = i[n];
          }
          else
          {
            paramH = i;
            paramH[i3] = paramH[n];
          }
          e.c[i4].b(d);
          if (m) {
            l = n;
          }
          c -= 1;
        }
        return;
      }
      if (localObject[n] < i2) {
        i3 = n;
      }
      n = i[n];
      i1 += 1;
    }
    n = l;
    if (m)
    {
      localObject = h;
      if (localObject[n] != -1) {
        n = localObject.length;
      }
    }
    else
    {
      n += 1;
    }
    Object localObject = h;
    i1 = n;
    if (n >= localObject.length)
    {
      i1 = n;
      if (c < localObject.length)
      {
        i2 = 0;
        for (;;)
        {
          localObject = h;
          i1 = n;
          if (i2 >= localObject.length) {
            break;
          }
          if (localObject[i2] == -1)
          {
            i1 = i2;
            break;
          }
          i2 += 1;
        }
      }
    }
    localObject = h;
    n = i1;
    if (i1 >= localObject.length)
    {
      n = localObject.length;
      f *= 2;
      m = false;
      l = (n - 1);
      j = Arrays.copyOf(j, f);
      h = Arrays.copyOf(h, f);
      i = Arrays.copyOf(i, f);
    }
    h[n] = k;
    j[n] = paramFloat;
    if (i3 != -1)
    {
      paramH = i;
      paramH[n] = paramH[i3];
      paramH[i3] = n;
    }
    else
    {
      i[n] = k;
      k = n;
    }
    c += 1;
    if (!m) {
      l += 1;
    }
    n = l;
    paramH = h;
    if (n >= paramH.length)
    {
      m = true;
      l = (paramH.length - 1);
    }
  }
  
  public final boolean a(h paramH)
  {
    int i1 = k;
    if (i1 == -1) {
      return false;
    }
    int n = 0;
    while ((i1 != -1) && (n < c))
    {
      if (h[i1] == k) {
        return true;
      }
      i1 = i[i1];
      n += 1;
    }
    return false;
  }
  
  public final float b(int paramInt)
  {
    int i1 = k;
    int n = 0;
    while ((i1 != -1) && (n < c))
    {
      if (n == paramInt) {
        return j[i1];
      }
      i1 = i[i1];
      n += 1;
    }
    return 0.0F;
  }
  
  public final float b(h paramH)
  {
    int i1 = k;
    int n = 0;
    while ((i1 != -1) && (n < c))
    {
      if (h[i1] == k) {
        return j[i1];
      }
      i1 = i[i1];
      n += 1;
    }
    return 0.0F;
  }
  
  public void b()
  {
    int i1 = c;
    System.out.print("{ ");
    int n = 0;
    while (n < i1)
    {
      h localH = a(n);
      if (localH != null)
      {
        PrintStream localPrintStream = System.out;
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append(localH);
        localStringBuilder.append(" = ");
        localStringBuilder.append(b(n));
        localStringBuilder.append(" ");
        localPrintStream.print(localStringBuilder.toString());
      }
      n += 1;
    }
    System.out.println(" }");
  }
  
  public final void b(h paramH, float paramFloat)
  {
    if (paramFloat == 0.0F)
    {
      c(paramH);
      return;
    }
    int n = k;
    if (n == -1)
    {
      k = 0;
      localObject = j;
      n = k;
      localObject[n] = paramFloat;
      h[n] = k;
      i[n] = -1;
      c += 1;
      if (!m) {
        l += 1;
      }
      return;
    }
    int i1 = 0;
    int i3 = -1;
    int i2;
    while ((n != -1) && (i1 < c))
    {
      localObject = h;
      int i4 = localObject[n];
      i2 = k;
      if (i4 == i2)
      {
        j[n] = paramFloat;
        return;
      }
      if (localObject[n] < i2) {
        i3 = n;
      }
      n = i[n];
      i1 += 1;
    }
    n = l;
    if (m)
    {
      localObject = h;
      if (localObject[n] != -1) {
        n = localObject.length;
      }
    }
    else
    {
      n += 1;
    }
    Object localObject = h;
    i1 = n;
    if (n >= localObject.length)
    {
      i1 = n;
      if (c < localObject.length)
      {
        i2 = 0;
        for (;;)
        {
          localObject = h;
          i1 = n;
          if (i2 >= localObject.length) {
            break;
          }
          if (localObject[i2] == -1)
          {
            i1 = i2;
            break;
          }
          i2 += 1;
        }
      }
    }
    localObject = h;
    n = i1;
    if (i1 >= localObject.length)
    {
      n = localObject.length;
      f *= 2;
      m = false;
      l = (n - 1);
      j = Arrays.copyOf(j, f);
      h = Arrays.copyOf(h, f);
      i = Arrays.copyOf(i, f);
    }
    h[n] = k;
    j[n] = paramFloat;
    if (i3 != -1)
    {
      paramH = i;
      paramH[n] = paramH[i3];
      paramH[i3] = n;
    }
    else
    {
      i[n] = k;
      k = n;
    }
    c += 1;
    if (!m) {
      l += 1;
    }
    if (c >= h.length) {
      m = true;
    }
  }
  
  public final float c(h paramH)
  {
    if (g == paramH) {
      g = null;
    }
    int n = k;
    if (n == -1) {
      return 0.0F;
    }
    int i1 = 0;
    int i2 = -1;
    while ((n != -1) && (i1 < c))
    {
      int i3 = h[n];
      if (i3 == k)
      {
        if (n == k)
        {
          k = i[n];
        }
        else
        {
          paramH = i;
          paramH[i2] = paramH[n];
        }
        e.c[i3].b(d);
        c -= 1;
        h[n] = -1;
        if (m) {
          l = n;
        }
        return j[n];
      }
      i3 = i[n];
      i1 += 1;
      i2 = n;
      n = i3;
    }
    return 0.0F;
  }
  
  public h c()
  {
    Object localObject1 = g;
    if (localObject1 == null)
    {
      int i1 = k;
      int n = 0;
      Object localObject2;
      for (localObject1 = null; (i1 != -1) && (n < c); localObject1 = localObject2)
      {
        localObject2 = localObject1;
        if (j[i1] < 0.0F)
        {
          h localH = e.c[h[i1]];
          if (localObject1 != null)
          {
            localObject2 = localObject1;
            if (m >= m) {}
          }
          else
          {
            localObject2 = localH;
          }
        }
        i1 = i[i1];
        n += 1;
      }
      return localObject1;
    }
    return localObject1;
  }
  
  public boolean d()
  {
    int i1 = k;
    int n = 0;
    while ((i1 != -1) && (n < c))
    {
      if (j[i1] > 0.0F) {
        return true;
      }
      i1 = i[i1];
      n += 1;
    }
    return false;
  }
  
  public void e()
  {
    int i1 = k;
    int n = 0;
    while ((i1 != -1) && (n < c))
    {
      float[] arrayOfFloat = j;
      arrayOfFloat[i1] *= -1.0F;
      i1 = i[i1];
      n += 1;
    }
  }
  
  public h f()
  {
    int i1 = k;
    Object localObject2 = null;
    int n = 0;
    label81:
    Object localObject4;
    for (Object localObject1 = null; (i1 != -1) && (n < c); localObject1 = localObject4)
    {
      Object localObject3 = j;
      float f2 = localObject3[i1];
      if (f2 < 0.0F)
      {
        f1 = f2;
        if (f2 <= -0.001F) {
          break label81;
        }
        localObject3[i1] = 0.0F;
      }
      else
      {
        f1 = f2;
        if (f2 >= 0.001F) {
          break label81;
        }
        localObject3[i1] = 0.0F;
      }
      float f1 = 0.0F;
      localObject3 = localObject2;
      localObject4 = localObject1;
      if (f1 != 0.0F)
      {
        h localH = e.c[h[i1]];
        if (p == h.a.a)
        {
          if (f1 < 0.0F) {
            return localH;
          }
          localObject3 = localObject2;
          localObject4 = localObject1;
          if (localObject1 == null)
          {
            localObject4 = localH;
            localObject3 = localObject2;
          }
        }
        else
        {
          localObject3 = localObject2;
          localObject4 = localObject1;
          if (f1 < 0.0F) {
            if (localObject2 != null)
            {
              localObject3 = localObject2;
              localObject4 = localObject1;
              if (m >= m) {}
            }
            else
            {
              localObject3 = localH;
              localObject4 = localObject1;
            }
          }
        }
      }
      i1 = i[i1];
      n += 1;
      localObject2 = localObject3;
    }
    if (localObject1 != null) {
      return localObject1;
    }
    return localObject2;
  }
  
  public int g()
  {
    return h.length * 4 * 3 + 0 + 36;
  }
  
  public String toString()
  {
    int i1 = k;
    Object localObject = "";
    int n = 0;
    while ((i1 != -1) && (n < c))
    {
      localObject = f.a.a.a.a.b(f.a.a.a.a.c((String)localObject, " -> "));
      ((StringBuilder)localObject).append(j[i1]);
      ((StringBuilder)localObject).append(" : ");
      localObject = f.a.a.a.a.b(((StringBuilder)localObject).toString());
      ((StringBuilder)localObject).append(e.c[h[i1]]);
      localObject = ((StringBuilder)localObject).toString();
      i1 = i[i1];
      n += 1;
    }
    return localObject;
  }
}
