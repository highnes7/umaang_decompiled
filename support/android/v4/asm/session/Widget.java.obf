package b.b.x.h.b;

import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.BroadcastReceiver.PendingResult;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.pm.ServiceInfo;
import android.os.Build.VERSION;
import android.os.RemoteException;
import android.support.v4.media.MediaBrowserCompat;
import android.support.v4.media.MediaBrowserCompat.b;
import android.support.v4.media.session.MediaControllerCompat;
import android.support.v4.media.session.MediaControllerCompat.MediaControllerImplApi21;
import android.support.v4.media.session.MediaControllerCompat.c;
import android.support.v4.media.session.MediaControllerCompat.d;
import android.support.v4.media.session.MediaControllerCompat.e;
import android.support.v4.media.session.MediaControllerCompat.f;
import android.support.v4.media.session.MediaSessionCompat;
import android.support.v4.media.session.MediaSessionCompat.Token;
import android.support.v4.media.session.PlaybackStateCompat;
import android.view.KeyEvent;
import b.b.a.N;
import f.a.a.a.a;
import java.util.HashSet;
import java.util.List;

public class c
  extends BroadcastReceiver
{
  public static final String a = "MediaButtonReceiver";
  
  public c() {}
  
  public static PendingIntent a(Context paramContext, long paramLong)
  {
    ComponentName localComponentName = a(paramContext);
    if (localComponentName == null) {
      return null;
    }
    return a(paramContext, localComponentName, paramLong);
  }
  
  public static PendingIntent a(Context paramContext, ComponentName paramComponentName, long paramLong)
  {
    if (paramComponentName == null) {
      return null;
    }
    int i = PlaybackStateCompat.a(paramLong);
    if (i == 0)
    {
      paramContext = new StringBuilder();
      paramContext.append("Cannot build a media button pending intent with the given action: ");
      paramContext.append(paramLong);
      paramContext.toString();
      return null;
    }
    Intent localIntent = new Intent("android.intent.action.MEDIA_BUTTON");
    localIntent.setComponent(paramComponentName);
    localIntent.putExtra("android.intent.extra.KEY_EVENT", new KeyEvent(0, i));
    return PendingIntent.getBroadcast(paramContext, i, localIntent, 0);
  }
  
  @N({b.b.a.N.a.a})
  public static ComponentName a(Context paramContext)
  {
    Intent localIntent = new Intent("android.intent.action.MEDIA_BUTTON");
    localIntent.setPackage(paramContext.getPackageName());
    paramContext = paramContext.getPackageManager().queryBroadcastReceivers(localIntent, 0);
    if (paramContext.size() == 1)
    {
      paramContext = (ResolveInfo)paramContext.get(0);
      return new ComponentName(activityInfo.packageName, activityInfo.name);
    }
    paramContext.size();
    return null;
  }
  
  public static ComponentName a(Context paramContext, String paramString)
  {
    Object localObject = paramContext.getPackageManager();
    Intent localIntent = new Intent(paramString);
    localIntent.setPackage(paramContext.getPackageName());
    paramContext = ((PackageManager)localObject).queryIntentServices(localIntent, 0);
    if (paramContext.size() == 1)
    {
      paramContext = (ResolveInfo)paramContext.get(0);
      return new ComponentName(serviceInfo.packageName, serviceInfo.name);
    }
    if (paramContext.isEmpty()) {
      return null;
    }
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("Expected 1 service that handles ");
    ((StringBuilder)localObject).append(paramString);
    ((StringBuilder)localObject).append(", found ");
    ((StringBuilder)localObject).append(paramContext.size());
    throw new IllegalStateException(((StringBuilder)localObject).toString());
  }
  
  public static KeyEvent a(MediaSessionCompat paramMediaSessionCompat, Intent paramIntent)
  {
    if ((paramMediaSessionCompat != null) && (paramIntent != null) && ("android.intent.action.MEDIA_BUTTON".equals(paramIntent.getAction())) && (paramIntent.hasExtra("android.intent.extra.KEY_EVENT")))
    {
      paramIntent = (KeyEvent)paramIntent.getParcelableExtra("android.intent.extra.KEY_EVENT");
      paramMediaSessionCompat.b().a(paramIntent);
      return paramIntent;
    }
    return null;
  }
  
  public static void a(Context paramContext, Intent paramIntent)
  {
    if (Build.VERSION.SDK_INT >= 26)
    {
      paramContext.startForegroundService(paramIntent);
      return;
    }
    paramContext.startService(paramIntent);
  }
  
  public void onReceive(Context paramContext, Intent paramIntent)
  {
    if ((paramIntent != null) && ("android.intent.action.MEDIA_BUTTON".equals(paramIntent.getAction())) && (paramIntent.hasExtra("android.intent.extra.KEY_EVENT")))
    {
      ComponentName localComponentName = a(paramContext, "android.intent.action.MEDIA_BUTTON");
      if (localComponentName != null)
      {
        paramIntent.setComponent(localComponentName);
        a(paramContext, paramIntent);
        return;
      }
      localComponentName = a(paramContext, "android.media.browse.MediaBrowserService");
      if (localComponentName != null)
      {
        BroadcastReceiver.PendingResult localPendingResult = goAsync();
        paramContext = paramContext.getApplicationContext();
        paramIntent = new a(paramContext, paramIntent, localPendingResult);
        paramContext = new MediaBrowserCompat(paramContext, localComponentName, paramIntent, null);
        paramIntent.a(paramContext);
        paramContext.a();
        return;
      }
      throw new IllegalStateException("Could not find any Service that handles android.intent.action.MEDIA_BUTTON or implements a media browser service.");
    }
    a.b("Ignore unsupported intent: ", paramIntent);
  }
  
  private static class a
    extends MediaBrowserCompat.b
  {
    public final Context c;
    public final Intent d;
    public final BroadcastReceiver.PendingResult e;
    public MediaBrowserCompat f;
    
    public a(Context paramContext, Intent paramIntent, BroadcastReceiver.PendingResult paramPendingResult)
    {
      c = paramContext;
      d = paramIntent;
      e = paramPendingResult;
    }
    
    private void d()
    {
      f.b();
      e.finish();
    }
    
    public void a()
    {
      try
      {
        Object localObject1 = c;
        Object localObject2 = f.g();
        new HashSet();
        if (localObject2 != null)
        {
          int i = Build.VERSION.SDK_INT;
          if (i >= 24) {
            localObject1 = new MediaControllerCompat.e((Context)localObject1, (MediaSessionCompat.Token)localObject2);
          } else if (i >= 23) {
            localObject1 = new MediaControllerCompat.d((Context)localObject1, (MediaSessionCompat.Token)localObject2);
          } else if (i >= 21) {
            localObject1 = new MediaControllerCompat.MediaControllerImplApi21((Context)localObject1, (MediaSessionCompat.Token)localObject2);
          } else {
            localObject1 = new MediaControllerCompat.f((MediaSessionCompat.Token)localObject2);
          }
          localObject2 = (KeyEvent)d.getParcelableExtra("android.intent.extra.KEY_EVENT");
          if (localObject2 != null) {
            ((MediaControllerCompat.c)localObject1).a((KeyEvent)localObject2);
          } else {
            throw new IllegalArgumentException("KeyEvent may not be null");
          }
        }
        else
        {
          throw new IllegalArgumentException("sessionToken must not be null");
        }
      }
      catch (RemoteException localRemoteException)
      {
        for (;;) {}
      }
      d();
    }
    
    public void a(MediaBrowserCompat paramMediaBrowserCompat)
    {
      f = paramMediaBrowserCompat;
    }
    
    public void b()
    {
      d();
    }
    
    public void c()
    {
      d();
    }
  }
}
