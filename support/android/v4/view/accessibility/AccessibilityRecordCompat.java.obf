package b.b.x.o.a;

import android.os.Build.VERSION;
import android.os.Parcelable;
import android.view.View;
import android.view.accessibility.AccessibilityRecord;
import b.b.a.F;
import java.util.List;

public class e
{
  public final AccessibilityRecord a;
  
  @Deprecated
  public e(Object paramObject)
  {
    a = ((AccessibilityRecord)paramObject);
  }
  
  public static int a(AccessibilityRecord paramAccessibilityRecord)
  {
    int i = Build.VERSION.SDK_INT;
    return paramAccessibilityRecord.getMaxScrollX();
  }
  
  @Deprecated
  public static e a(e paramE)
  {
    return new e(AccessibilityRecord.obtain(a));
  }
  
  public static void a(AccessibilityRecord paramAccessibilityRecord, int paramInt)
  {
    int i = Build.VERSION.SDK_INT;
    paramAccessibilityRecord.setMaxScrollX(paramInt);
  }
  
  public static void a(@F AccessibilityRecord paramAccessibilityRecord, View paramView, int paramInt)
  {
    int i = Build.VERSION.SDK_INT;
    paramAccessibilityRecord.setSource(paramView, paramInt);
  }
  
  public static int b(AccessibilityRecord paramAccessibilityRecord)
  {
    int i = Build.VERSION.SDK_INT;
    return paramAccessibilityRecord.getMaxScrollY();
  }
  
  public static void b(AccessibilityRecord paramAccessibilityRecord, int paramInt)
  {
    int i = Build.VERSION.SDK_INT;
    paramAccessibilityRecord.setMaxScrollY(paramInt);
  }
  
  @Deprecated
  public static e x()
  {
    return new e(AccessibilityRecord.obtain());
  }
  
  @Deprecated
  public int a()
  {
    return a.getAddedCount();
  }
  
  @Deprecated
  public void a(int paramInt)
  {
    a.setAddedCount(paramInt);
  }
  
  @Deprecated
  public void a(Parcelable paramParcelable)
  {
    a.setParcelableData(paramParcelable);
  }
  
  @Deprecated
  public void a(View paramView)
  {
    a.setSource(paramView);
  }
  
  @Deprecated
  public void a(View paramView, int paramInt)
  {
    AccessibilityRecord localAccessibilityRecord = a;
    int i = Build.VERSION.SDK_INT;
    localAccessibilityRecord.setSource(paramView, paramInt);
  }
  
  @Deprecated
  public void a(CharSequence paramCharSequence)
  {
    a.setBeforeText(paramCharSequence);
  }
  
  @Deprecated
  public void a(boolean paramBoolean)
  {
    a.setChecked(paramBoolean);
  }
  
  @Deprecated
  public CharSequence b()
  {
    return a.getBeforeText();
  }
  
  @Deprecated
  public void b(int paramInt)
  {
    a.setCurrentItemIndex(paramInt);
  }
  
  @Deprecated
  public void b(CharSequence paramCharSequence)
  {
    a.setClassName(paramCharSequence);
  }
  
  @Deprecated
  public void b(boolean paramBoolean)
  {
    a.setEnabled(paramBoolean);
  }
  
  @Deprecated
  public CharSequence c()
  {
    return a.getClassName();
  }
  
  @Deprecated
  public void c(int paramInt)
  {
    a.setFromIndex(paramInt);
  }
  
  @Deprecated
  public void c(CharSequence paramCharSequence)
  {
    a.setContentDescription(paramCharSequence);
  }
  
  @Deprecated
  public void c(boolean paramBoolean)
  {
    a.setFullScreen(paramBoolean);
  }
  
  @Deprecated
  public CharSequence d()
  {
    return a.getContentDescription();
  }
  
  @Deprecated
  public void d(int paramInt)
  {
    a.setItemCount(paramInt);
  }
  
  @Deprecated
  public void d(boolean paramBoolean)
  {
    a.setPassword(paramBoolean);
  }
  
  @Deprecated
  public int e()
  {
    return a.getCurrentItemIndex();
  }
  
  @Deprecated
  public void e(int paramInt)
  {
    AccessibilityRecord localAccessibilityRecord = a;
    int i = Build.VERSION.SDK_INT;
    localAccessibilityRecord.setMaxScrollX(paramInt);
  }
  
  @Deprecated
  public void e(boolean paramBoolean)
  {
    a.setScrollable(paramBoolean);
  }
  
  @Deprecated
  public boolean equals(Object paramObject)
  {
    if (this == paramObject) {
      return true;
    }
    if (paramObject == null) {
      return false;
    }
    if (e.class != paramObject.getClass()) {
      return false;
    }
    paramObject = (e)paramObject;
    AccessibilityRecord localAccessibilityRecord = a;
    if (localAccessibilityRecord == null)
    {
      if (a != null) {
        return false;
      }
    }
    else if (!localAccessibilityRecord.equals(a)) {
      return false;
    }
    return true;
  }
  
  @Deprecated
  public int f()
  {
    return a.getFromIndex();
  }
  
  @Deprecated
  public void f(int paramInt)
  {
    AccessibilityRecord localAccessibilityRecord = a;
    int i = Build.VERSION.SDK_INT;
    localAccessibilityRecord.setMaxScrollY(paramInt);
  }
  
  @Deprecated
  public Object g()
  {
    return a;
  }
  
  @Deprecated
  public void g(int paramInt)
  {
    a.setRemovedCount(paramInt);
  }
  
  @Deprecated
  public int h()
  {
    return a.getItemCount();
  }
  
  @Deprecated
  public void h(int paramInt)
  {
    a.setScrollX(paramInt);
  }
  
  @Deprecated
  public int hashCode()
  {
    AccessibilityRecord localAccessibilityRecord = a;
    if (localAccessibilityRecord == null) {
      return 0;
    }
    return localAccessibilityRecord.hashCode();
  }
  
  @Deprecated
  public int i()
  {
    return a(a);
  }
  
  @Deprecated
  public void i(int paramInt)
  {
    a.setScrollY(paramInt);
  }
  
  @Deprecated
  public int j()
  {
    return b(a);
  }
  
  @Deprecated
  public void j(int paramInt)
  {
    a.setToIndex(paramInt);
  }
  
  @Deprecated
  public Parcelable k()
  {
    return a.getParcelableData();
  }
  
  @Deprecated
  public int l()
  {
    return a.getRemovedCount();
  }
  
  @Deprecated
  public int m()
  {
    return a.getScrollX();
  }
  
  @Deprecated
  public int n()
  {
    return a.getScrollY();
  }
  
  @Deprecated
  public c o()
  {
    return c.c(a.getSource());
  }
  
  @Deprecated
  public List<CharSequence> p()
  {
    return a.getText();
  }
  
  @Deprecated
  public int q()
  {
    return a.getToIndex();
  }
  
  @Deprecated
  public int r()
  {
    return a.getWindowId();
  }
  
  @Deprecated
  public boolean s()
  {
    return a.isChecked();
  }
  
  @Deprecated
  public boolean t()
  {
    return a.isEnabled();
  }
  
  @Deprecated
  public boolean u()
  {
    return a.isFullScreen();
  }
  
  @Deprecated
  public boolean v()
  {
    return a.isPassword();
  }
  
  @Deprecated
  public boolean w()
  {
    return a.isScrollable();
  }
  
  @Deprecated
  public void y()
  {
    a.recycle();
  }
}
