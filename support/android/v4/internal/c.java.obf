package b.b.x.d;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Typeface;
import android.net.Uri;
import android.os.CancellationSignal;
import b.b.a.F;
import b.b.a.G;
import b.b.a.K;
import b.b.a.N;
import b.b.x.b.b.d.c;
import b.b.x.b.b.d.d;
import b.b.x.l.r.c;
import b.b.x.n.t;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.nio.ByteBuffer;
import java.util.List;

@K(24)
@N({b.b.a.N.a.b})
public class i
  extends n
{
  public static final String c = "TypefaceCompatApi24Impl";
  public static final String d = "android.graphics.FontFamily";
  public static final String e = "addFontWeightStyle";
  public static final String f = "createFromFamiliesWithDefault";
  public static final Class g;
  public static final Constructor h;
  public static final Method i;
  public static final Method j;
  
  static
  {
    Object localObject1 = null;
    try
    {
      localClass2 = Class.forName("android.graphics.FontFamily");
      Constructor localConstructor = localClass2.getConstructor(new Class[0]);
      localObject2 = localClass2.getMethod("addFontWeightStyle", new Class[] { ByteBuffer.class, Integer.TYPE, List.class, Integer.TYPE, Boolean.TYPE });
      Method localMethod = Typeface.class.getMethod("createFromFamiliesWithDefault", new Class[] { Array.newInstance(localClass2, 1).getClass() });
      localObject1 = localConstructor;
    }
    catch (NoSuchMethodException localNoSuchMethodException) {}catch (ClassNotFoundException localClassNotFoundException) {}
    localClassNotFoundException.getClass().getName();
    Class localClass2 = null;
    Class localClass1 = localClass2;
    Object localObject2 = localClass1;
    h = localObject1;
    g = localClass2;
    i = (Method)localObject2;
    j = localClass1;
  }
  
  public i() {}
  
  public static Typeface a(Object paramObject)
  {
    try
    {
      Object localObject = Array.newInstance(g, 1);
      Array.set(localObject, 0, paramObject);
      paramObject = (Typeface)j.invoke(null, new Object[] { localObject });
      return paramObject;
    }
    catch (InvocationTargetException paramObject) {}catch (IllegalAccessException paramObject) {}
    throw new RuntimeException(paramObject);
  }
  
  public static boolean a()
  {
    Method localMethod = i;
    return i != null;
  }
  
  public static boolean a(Object paramObject, ByteBuffer paramByteBuffer, int paramInt1, int paramInt2, boolean paramBoolean)
  {
    try
    {
      paramBoolean = ((Boolean)i.invoke(paramObject, new Object[] { paramByteBuffer, Integer.valueOf(paramInt1), null, Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean) })).booleanValue();
      return paramBoolean;
    }
    catch (InvocationTargetException paramObject) {}catch (IllegalAccessException paramObject) {}
    throw new RuntimeException(paramObject);
  }
  
  public static Object b()
  {
    try
    {
      Object localObject = h.newInstance(new Object[0]);
      return localObject;
    }
    catch (InvocationTargetException localInvocationTargetException) {}catch (InstantiationException localInstantiationException) {}catch (IllegalAccessException localIllegalAccessException) {}
    throw new RuntimeException(localIllegalAccessException);
  }
  
  public Typeface a(Context paramContext, @G CancellationSignal paramCancellationSignal, @F r.c[] paramArrayOfC, int paramInt)
  {
    Object localObject = b();
    t localT = new t();
    int m = paramArrayOfC.length;
    int k = 0;
    while (k < m)
    {
      r.c localC = paramArrayOfC[k];
      Uri localUri = localC.c();
      ByteBuffer localByteBuffer2 = (ByteBuffer)localT.get(localUri);
      ByteBuffer localByteBuffer1 = localByteBuffer2;
      if (localByteBuffer2 == null)
      {
        localByteBuffer1 = o.a(paramContext, paramCancellationSignal, localUri);
        localT.put(localUri, localByteBuffer1);
      }
      if (!a(localObject, localByteBuffer1, localC.b(), localC.d(), localC.e())) {
        return null;
      }
      k += 1;
    }
    return Typeface.create(a(localObject), paramInt);
  }
  
  public Typeface a(Context paramContext, d.c paramC, Resources paramResources, int paramInt)
  {
    Object localObject1 = b();
    paramC = paramC.a();
    int k = paramC.length;
    paramInt = 0;
    while (paramInt < k)
    {
      Object localObject2 = paramC[paramInt];
      ByteBuffer localByteBuffer = o.a(paramContext, paramResources, localObject2.b());
      if (localByteBuffer == null) {
        return null;
      }
      if (!a(localObject1, localByteBuffer, localObject2.c(), localObject2.e(), localObject2.f())) {
        return null;
      }
      paramInt += 1;
    }
    return a(localObject1);
  }
}
