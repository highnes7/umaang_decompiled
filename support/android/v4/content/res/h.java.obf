package b.b.x.b.a;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.ShortcutInfo;
import android.content.pm.ShortcutInfo.Builder;
import android.graphics.drawable.Drawable;
import android.support.v4.graphics.drawable.IconCompat;
import android.text.TextUtils;
import b.b.a.F;
import b.b.a.G;
import b.b.a.K;
import java.util.Arrays;

public class d
{
  public Context a;
  public String b;
  public Intent[] c;
  public ComponentName d;
  public CharSequence e;
  public CharSequence f;
  public CharSequence g;
  public IconCompat h;
  public boolean i;
  
  public d() {}
  
  @G
  public ComponentName a()
  {
    return d;
  }
  
  public Intent a(Intent paramIntent)
  {
    Object localObject1 = c;
    paramIntent.putExtra("android.intent.extra.shortcut.INTENT", localObject1[(localObject1.length - 1)]).putExtra("android.intent.extra.shortcut.NAME", e.toString());
    Object localObject3;
    Object localObject4;
    PackageManager localPackageManager;
    if (h != null)
    {
      localObject3 = null;
      localObject4 = null;
      if (i)
      {
        localPackageManager = a.getPackageManager();
        localObject3 = d;
        localObject1 = localObject4;
        if (localObject3 == null) {}
      }
    }
    try
    {
      localObject1 = localPackageManager.getActivityIcon((ComponentName)localObject3);
      localObject3 = localObject1;
      if (localObject1 == null) {
        localObject3 = a.getApplicationInfo().loadIcon(localPackageManager);
      }
      h.a(paramIntent, (Drawable)localObject3, a);
      return paramIntent;
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException)
    {
      for (;;)
      {
        Object localObject2 = localObject4;
      }
    }
  }
  
  @G
  public CharSequence b()
  {
    return g;
  }
  
  @F
  public String c()
  {
    return b;
  }
  
  @F
  public Intent d()
  {
    Intent[] arrayOfIntent = c;
    return arrayOfIntent[(arrayOfIntent.length - 1)];
  }
  
  @F
  public Intent[] e()
  {
    Intent[] arrayOfIntent = c;
    return (Intent[])Arrays.copyOf(arrayOfIntent, arrayOfIntent.length);
  }
  
  @G
  public CharSequence f()
  {
    return f;
  }
  
  @F
  public CharSequence g()
  {
    return e;
  }
  
  @K(25)
  public ShortcutInfo h()
  {
    ShortcutInfo.Builder localBuilder = new ShortcutInfo.Builder(a, b).setShortLabel(e).setIntents(c);
    Object localObject = h;
    if (localObject != null) {
      localBuilder.setIcon(((IconCompat)localObject).k());
    }
    if (!TextUtils.isEmpty(f)) {
      localBuilder.setLongLabel(f);
    }
    if (!TextUtils.isEmpty(g)) {
      localBuilder.setDisabledMessage(g);
    }
    localObject = d;
    if (localObject != null) {
      localBuilder.setActivity((ComponentName)localObject);
    }
    return localBuilder.build();
  }
  
  public static class a
  {
    public final d a = new d();
    
    public a(@F Context paramContext, @F String paramString)
    {
      d localD = a;
      a = paramContext;
      b = paramString;
    }
    
    @F
    public a a(@F ComponentName paramComponentName)
    {
      a.d = paramComponentName;
      return this;
    }
    
    @F
    public a a(@F Intent paramIntent)
    {
      return a(new Intent[] { paramIntent });
    }
    
    @F
    public a a(IconCompat paramIconCompat)
    {
      a.h = paramIconCompat;
      return this;
    }
    
    @F
    public a a(@F CharSequence paramCharSequence)
    {
      a.g = paramCharSequence;
      return this;
    }
    
    @F
    public a a(@F Intent[] paramArrayOfIntent)
    {
      a.c = paramArrayOfIntent;
      return this;
    }
    
    @F
    public d a()
    {
      if (!TextUtils.isEmpty(a.e))
      {
        d localD = a;
        Intent[] arrayOfIntent = c;
        if ((arrayOfIntent != null) && (arrayOfIntent.length != 0)) {
          return localD;
        }
        throw new IllegalArgumentException("Shortcut must have an intent");
      }
      throw new IllegalArgumentException("Shortcut must have a non-empty label");
    }
    
    public a b()
    {
      a.i = true;
      return this;
    }
    
    @F
    public a b(@F CharSequence paramCharSequence)
    {
      a.f = paramCharSequence;
      return this;
    }
    
    @F
    public a c(@F CharSequence paramCharSequence)
    {
      a.e = paramCharSequence;
      return this;
    }
  }
}
