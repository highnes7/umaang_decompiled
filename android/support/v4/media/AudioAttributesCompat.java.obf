package android.support.v4.media;

import android.media.AudioAttributes;
import android.media.AudioAttributes.Builder;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.util.SparseIntArray;
import b.b.a.F;
import b.b.a.G;
import b.b.a.N;
import b.b.x.h.b;
import b.b.x.h.c;
import c.b.j;
import java.lang.annotation.Annotation;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

public class AudioAttributesCompat
  implements j
{
  public static boolean A = false;
  public static final int[] B = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16 };
  public static final int C = 1;
  public static final int D = 2;
  public static final int E = 4;
  public static final int F = 8;
  public static final int G = 16;
  public static final int H = 32;
  public static final int I = 64;
  public static final int J = 128;
  public static final int K = 256;
  public static final int L = 512;
  public static final int M = 1023;
  public static final int N = 273;
  public static final int O = -1;
  public static final String P = "android.support.v4.media.audio_attrs.FRAMEWORKS";
  public static final String Q = "android.support.v4.media.audio_attrs.USAGE";
  public static final String R = "android.support.v4.media.audio_attrs.CONTENT_TYPE";
  public static final String S = "android.support.v4.media.audio_attrs.FLAGS";
  public static final String T = "android.support.v4.media.audio_attrs.LEGACY_STREAM_TYPE";
  public static final String a = "AudioAttributesCompat";
  public static final int b = 0;
  public static final int c = 1;
  public static final int d = 2;
  public static final int e = 3;
  public static final int f = 4;
  public static final int g = 0;
  public static final int h = 1;
  public static final int i = 2;
  public static final int j = 3;
  public static final int k = 4;
  public static final int l = 5;
  public static final int m = 6;
  public static final int n = 7;
  public static final int o = 8;
  public static final int p = 9;
  public static final int q = 10;
  public static final int r = 11;
  public static final int s = 12;
  public static final int t = 13;
  public static final int u = 14;
  public static final int v = 15;
  public static final int w = 16;
  public static final int x = 1;
  public static final int y = 2;
  public static final SparseIntArray z = new SparseIntArray();
  public b.b.x.h.a U;
  
  static
  {
    z.put(5, 1);
    z.put(6, 2);
    z.put(7, 2);
    z.put(8, 1);
    z.put(9, 1);
    z.put(10, 1);
  }
  
  public AudioAttributesCompat() {}
  
  public AudioAttributesCompat(b.b.x.h.a paramA)
  {
    U = paramA;
  }
  
  public static int a(int paramInt)
  {
    switch (paramInt)
    {
    case 9: 
    default: 
      return 0;
    case 10: 
      return 11;
    case 8: 
      return 3;
    case 6: 
      return 2;
    case 5: 
      return 5;
    case 4: 
      return 4;
    case 3: 
      return 1;
    case 2: 
      return 6;
    case 1: 
    case 7: 
      return 13;
    }
    return 2;
  }
  
  public static int a(boolean paramBoolean, int paramInt1, int paramInt2)
  {
    if ((paramInt1 & 0x1) == 1)
    {
      if (paramBoolean) {
        return 1;
      }
      return 7;
    }
    int i1 = 0;
    if ((paramInt1 & 0x4) == 4)
    {
      if (paramBoolean) {
        return 0;
      }
      return 6;
    }
    int i2 = 3;
    paramInt1 = i1;
    switch (paramInt2)
    {
    case 15: 
    default: 
      if (!paramBoolean) {
        return 3;
      }
      break;
    case 13: 
      return 1;
    case 11: 
      return 10;
    case 6: 
      return 2;
    case 5: 
    case 7: 
    case 8: 
    case 9: 
    case 10: 
      return 5;
    case 4: 
      return 4;
    case 3: 
      if (paramBoolean) {
        return 0;
      }
      paramInt1 = 8;
    case 2: 
      return paramInt1;
    case 1: 
    case 12: 
    case 14: 
    case 16: 
      return 3;
    case 0: 
      paramInt1 = i2;
      if (paramBoolean) {
        paramInt1 = Integer.MIN_VALUE;
      }
      return paramInt1;
    }
    throw new IllegalArgumentException(f.a.a.a.a.a("Unknown usage value ", paramInt2, " in audio attributes"));
  }
  
  public static int a(boolean paramBoolean, AudioAttributesCompat paramAudioAttributesCompat)
  {
    return a(paramBoolean, paramAudioAttributesCompat.getFlags(), paramAudioAttributesCompat.b());
  }
  
  @N({b.b.a.N.a.b})
  public static AudioAttributesCompat a(Bundle paramBundle)
  {
    if (Build.VERSION.SDK_INT >= 21) {
      paramBundle = b.a(paramBundle);
    } else {
      paramBundle = c.a(paramBundle);
    }
    if (paramBundle == null) {
      return null;
    }
    return new AudioAttributesCompat(paramBundle);
  }
  
  @G
  public static AudioAttributesCompat a(@F Object paramObject)
  {
    if ((Build.VERSION.SDK_INT >= 21) && (!A))
    {
      paramObject = new b((AudioAttributes)paramObject);
      AudioAttributesCompat localAudioAttributesCompat = new AudioAttributesCompat();
      U = paramObject;
      return localAudioAttributesCompat;
    }
    return null;
  }
  
  @N({b.b.a.N.a.b})
  public static void a(boolean paramBoolean)
  {
    A = paramBoolean;
  }
  
  public static String b(int paramInt)
  {
    switch (paramInt)
    {
    case 15: 
    default: 
      return f.a.a.a.a.a("unknown usage ", paramInt);
    case 16: 
      return "USAGE_ASSISTANT";
    case 14: 
      return "USAGE_GAME";
    case 13: 
      return "USAGE_ASSISTANCE_SONIFICATION";
    case 12: 
      return "USAGE_ASSISTANCE_NAVIGATION_GUIDANCE";
    case 11: 
      return "USAGE_ASSISTANCE_ACCESSIBILITY";
    case 10: 
      return "USAGE_NOTIFICATION_EVENT";
    case 9: 
      return "USAGE_NOTIFICATION_COMMUNICATION_DELAYED";
    case 8: 
      return "USAGE_NOTIFICATION_COMMUNICATION_INSTANT";
    case 7: 
      return "USAGE_NOTIFICATION_COMMUNICATION_REQUEST";
    case 6: 
      return "USAGE_NOTIFICATION_RINGTONE";
    case 5: 
      return "USAGE_NOTIFICATION";
    case 4: 
      return "USAGE_ALARM";
    case 3: 
      return "USAGE_VOICE_COMMUNICATION_SIGNALLING";
    case 2: 
      return "USAGE_VOICE_COMMUNICATION";
    case 1: 
      return "USAGE_MEDIA";
    }
    return "USAGE_UNKNOWN";
  }
  
  public int a()
  {
    return U.a();
  }
  
  public int b()
  {
    return U.b();
  }
  
  public int c()
  {
    return U.c();
  }
  
  public int d()
  {
    return U.d();
  }
  
  public boolean equals(Object paramObject)
  {
    boolean bool2 = paramObject instanceof AudioAttributesCompat;
    boolean bool1 = false;
    if (!bool2) {
      return false;
    }
    paramObject = (AudioAttributesCompat)paramObject;
    b.b.x.h.a localA = U;
    if (localA == null)
    {
      if (U == null) {
        bool1 = true;
      }
      return bool1;
    }
    return localA.equals(U);
  }
  
  @G
  public Object f()
  {
    return U.e();
  }
  
  public int getContentType()
  {
    return U.getContentType();
  }
  
  public int getFlags()
  {
    return U.getFlags();
  }
  
  public int hashCode()
  {
    return U.hashCode();
  }
  
  @F
  @N({b.b.a.N.a.b})
  public Bundle toBundle()
  {
    return U.toBundle();
  }
  
  public String toString()
  {
    return U.toString();
  }
  
  @Retention(RetentionPolicy.SOURCE)
  @N({b.b.a.N.a.b})
  public static @interface a {}
  
  @Retention(RetentionPolicy.SOURCE)
  @N({b.b.a.N.a.b})
  public static @interface b {}
  
  public static abstract class c
  {
    public static final int a = 6;
    public static final int b = 7;
    public static final int c = 9;
    public static final int d = 10;
    
    public c() {}
  }
  
  public static class d
  {
    public int a = 0;
    public int b = 0;
    public int c = 0;
    public int d = -1;
    
    public d() {}
    
    public d(AudioAttributesCompat paramAudioAttributesCompat)
    {
      a = paramAudioAttributesCompat.b();
      b = paramAudioAttributesCompat.getContentType();
      c = paramAudioAttributesCompat.getFlags();
      d = paramAudioAttributesCompat.a();
    }
    
    public d a(int paramInt)
    {
      if ((paramInt != 0) && (paramInt != 1) && (paramInt != 2) && (paramInt != 3) && (paramInt != 4))
      {
        a = 0;
        return this;
      }
      b = paramInt;
      return this;
    }
    
    public AudioAttributesCompat a()
    {
      Object localObject;
      if ((!AudioAttributesCompat.A) && (Build.VERSION.SDK_INT >= 21))
      {
        localObject = new AudioAttributes.Builder().setContentType(b).setFlags(c).setUsage(a);
        int i = d;
        if (i != -1) {
          ((AudioAttributes.Builder)localObject).setLegacyStreamType(i);
        }
        localObject = new b(((AudioAttributes.Builder)localObject).build(), d);
      }
      else
      {
        localObject = new c(b, c, a, d);
      }
      return new AudioAttributesCompat((b.b.x.h.a)localObject);
    }
    
    public d b(int paramInt)
    {
      c = (paramInt & 0x3FF | c);
      return this;
    }
    
    public d c(int paramInt)
    {
      switch (paramInt)
      {
      default: 
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append("Invalid stream type ");
        localStringBuilder.append(paramInt);
        localStringBuilder.append(" for AudioAttributesCompat");
        localStringBuilder.toString();
        break;
      case 10: 
        b = 1;
        break;
      case 9: 
        b = 4;
        break;
      case 8: 
        b = 4;
        break;
      case 7: 
        c = (0x1 | c);
        break;
      case 6: 
        b = 1;
        c |= 0x4;
        break;
      case 5: 
        b = 4;
        break;
      case 4: 
        b = 4;
        break;
      case 3: 
        b = 2;
        break;
      case 2: 
        b = 4;
        break;
      case 1: 
        b = 4;
        break;
      }
      b = 1;
      a = AudioAttributesCompat.a(paramInt);
      return this;
    }
    
    public d d(int paramInt)
    {
      if (paramInt != 10)
      {
        d = paramInt;
        if (Build.VERSION.SDK_INT >= 21) {
          return c(paramInt);
        }
        return this;
      }
      throw new IllegalArgumentException("STREAM_ACCESSIBILITY is not a legacy stream type that was used for audio playback");
    }
    
    public d e(int paramInt)
    {
      switch (paramInt)
      {
      default: 
        a = 0;
        return this;
      case 16: 
        if ((!AudioAttributesCompat.A) && (Build.VERSION.SDK_INT > 25))
        {
          a = paramInt;
          return this;
        }
        a = 12;
        return this;
      }
      a = paramInt;
      return this;
    }
  }
}
