package android.support.v4.media;

import android.graphics.Bitmap;
import android.media.MediaMetadata;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import android.support.v4.media.session.MediaSessionCompat;
import android.text.TextUtils;
import b.b.a.N;
import b.b.x.h.ca;
import b.b.x.h.da;
import b.b.x.n.b;
import b.b.x.n.t;
import f.a.a.a.a;
import java.lang.annotation.Annotation;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.Iterator;
import java.util.Set;

public final class MediaMetadataCompat
  implements Parcelable
{
  public static final String A = "android.media.metadata.DISPLAY_ICON_URI";
  public static final String B = "android.media.metadata.MEDIA_ID";
  public static final String C = "android.media.metadata.MEDIA_URI";
  public static final Parcelable.Creator<MediaMetadataCompat> CREATOR = new ca();
  public static final String D = "android.media.metadata.BT_FOLDER_TYPE";
  public static final String E = "android.media.metadata.ADVERTISEMENT";
  public static final String F = "android.media.metadata.DOWNLOAD_STATUS";
  public static final int G = 0;
  public static final int H = 1;
  public static final int I = 2;
  public static final int J = 3;
  public static final b<String, Integer> K = new b();
  public static final String[] L;
  public static final String[] M;
  public static final String[] N;
  public static final String a = "MediaMetadata";
  public static final String b = "android.media.metadata.TITLE";
  public static final String c = "android.media.metadata.ARTIST";
  public static final String d = "android.media.metadata.DURATION";
  public static final String e = "android.media.metadata.ALBUM";
  public static final String f = "android.media.metadata.AUTHOR";
  public static final String g = "android.media.metadata.WRITER";
  public static final String h = "android.media.metadata.COMPOSER";
  public static final String i = "android.media.metadata.COMPILATION";
  public static final String j = "android.media.metadata.DATE";
  public static final String k = "android.media.metadata.YEAR";
  public static final String l = "android.media.metadata.GENRE";
  public static final String m = "android.media.metadata.TRACK_NUMBER";
  public static final String n = "android.media.metadata.NUM_TRACKS";
  public static final String o = "android.media.metadata.DISC_NUMBER";
  public static final String p = "android.media.metadata.ALBUM_ARTIST";
  public static final String q = "android.media.metadata.ART";
  public static final String r = "android.media.metadata.ART_URI";
  public static final String s = "android.media.metadata.ALBUM_ART";
  public static final String t = "android.media.metadata.ALBUM_ART_URI";
  public static final String u = "android.media.metadata.USER_RATING";
  public static final String v = "android.media.metadata.RATING";
  public static final String w = "android.media.metadata.DISPLAY_TITLE";
  public static final String x = "android.media.metadata.DISPLAY_SUBTITLE";
  public static final String y = "android.media.metadata.DISPLAY_DESCRIPTION";
  public static final String z = "android.media.metadata.DISPLAY_ICON";
  public final Bundle O;
  public Object P;
  public MediaDescriptionCompat Q;
  
  static
  {
    Object localObject1 = K;
    Integer localInteger1 = Integer.valueOf(1);
    ((t)localObject1).put("android.media.metadata.TITLE", localInteger1);
    K.put("android.media.metadata.ARTIST", localInteger1);
    Object localObject2 = K;
    localObject1 = Integer.valueOf(0);
    ((t)localObject2).put("android.media.metadata.DURATION", localObject1);
    K.put("android.media.metadata.ALBUM", localInteger1);
    K.put("android.media.metadata.AUTHOR", localInteger1);
    K.put("android.media.metadata.WRITER", localInteger1);
    K.put("android.media.metadata.COMPOSER", localInteger1);
    K.put("android.media.metadata.COMPILATION", localInteger1);
    K.put("android.media.metadata.DATE", localInteger1);
    K.put("android.media.metadata.YEAR", localObject1);
    K.put("android.media.metadata.GENRE", localInteger1);
    K.put("android.media.metadata.TRACK_NUMBER", localObject1);
    K.put("android.media.metadata.NUM_TRACKS", localObject1);
    K.put("android.media.metadata.DISC_NUMBER", localObject1);
    K.put("android.media.metadata.ALBUM_ARTIST", localInteger1);
    b localB = K;
    localObject2 = Integer.valueOf(2);
    localB.put("android.media.metadata.ART", localObject2);
    K.put("android.media.metadata.ART_URI", localInteger1);
    K.put("android.media.metadata.ALBUM_ART", localObject2);
    K.put("android.media.metadata.ALBUM_ART_URI", localInteger1);
    localB = K;
    Integer localInteger2 = Integer.valueOf(3);
    localB.put("android.media.metadata.USER_RATING", localInteger2);
    K.put("android.media.metadata.RATING", localInteger2);
    K.put("android.media.metadata.DISPLAY_TITLE", localInteger1);
    K.put("android.media.metadata.DISPLAY_SUBTITLE", localInteger1);
    K.put("android.media.metadata.DISPLAY_DESCRIPTION", localInteger1);
    K.put("android.media.metadata.DISPLAY_ICON", localObject2);
    K.put("android.media.metadata.DISPLAY_ICON_URI", localInteger1);
    K.put("android.media.metadata.MEDIA_ID", localInteger1);
    K.put("android.media.metadata.BT_FOLDER_TYPE", localObject1);
    K.put("android.media.metadata.MEDIA_URI", localInteger1);
    K.put("android.media.metadata.ADVERTISEMENT", localObject1);
    K.put("android.media.metadata.DOWNLOAD_STATUS", localObject1);
    L = new String[] { "android.media.metadata.TITLE", "android.media.metadata.ARTIST", "android.media.metadata.ALBUM", "android.media.metadata.ALBUM_ARTIST", "android.media.metadata.WRITER", "android.media.metadata.AUTHOR", "android.media.metadata.COMPOSER" };
    M = new String[] { "android.media.metadata.DISPLAY_ICON", "android.media.metadata.ART", "android.media.metadata.ALBUM_ART" };
    N = new String[] { "android.media.metadata.DISPLAY_ICON_URI", "android.media.metadata.ART_URI", "android.media.metadata.ALBUM_ART_URI" };
  }
  
  public MediaMetadataCompat(Bundle paramBundle)
  {
    O = new Bundle(paramBundle);
    MediaSessionCompat.a(O);
  }
  
  public MediaMetadataCompat(Parcel paramParcel)
  {
    O = paramParcel.readBundle(MediaSessionCompat.class.getClassLoader());
  }
  
  public static MediaMetadataCompat a(Object paramObject)
  {
    if ((paramObject != null) && (Build.VERSION.SDK_INT >= 21))
    {
      Parcel localParcel = Parcel.obtain();
      ((MediaMetadata)paramObject).writeToParcel(localParcel, 0);
      localParcel.setDataPosition(0);
      MediaMetadataCompat localMediaMetadataCompat = (MediaMetadataCompat)CREATOR.createFromParcel(localParcel);
      localParcel.recycle();
      P = paramObject;
      return localMediaMetadataCompat;
    }
    return null;
  }
  
  public Bundle a()
  {
    return new Bundle(O);
  }
  
  public boolean a(String paramString)
  {
    return O.containsKey(paramString);
  }
  
  public Bitmap b(String paramString)
  {
    try
    {
      paramString = (Bitmap)O.getParcelable(paramString);
      return paramString;
    }
    catch (Exception paramString)
    {
      for (;;) {}
    }
    return null;
  }
  
  public MediaDescriptionCompat b()
  {
    Object localObject1 = Q;
    if (localObject1 != null) {
      return localObject1;
    }
    String str = e("android.media.metadata.MEDIA_ID");
    Object localObject5 = new CharSequence[3];
    localObject1 = f("android.media.metadata.DISPLAY_TITLE");
    int i2;
    if (!TextUtils.isEmpty((CharSequence)localObject1))
    {
      localObject5[0] = localObject1;
      localObject5[1] = f("android.media.metadata.DISPLAY_SUBTITLE");
      localObject5[2] = f("android.media.metadata.DISPLAY_DESCRIPTION");
    }
    else
    {
      i2 = 0;
      i1 = 0;
      while (i2 < localObject5.length)
      {
        localObject1 = L;
        if (i1 >= localObject1.length) {
          break;
        }
        localObject1 = f(localObject1[i1]);
        int i3 = i2;
        if (!TextUtils.isEmpty((CharSequence)localObject1))
        {
          localObject5[i2] = localObject1;
          i3 = i2 + 1;
        }
        i1 += 1;
        i2 = i3;
      }
    }
    int i1 = 0;
    Object localObject4;
    for (;;)
    {
      localObject1 = M;
      i2 = localObject1.length;
      localObject4 = null;
      if (i1 >= i2) {
        break;
      }
      localObject1 = b(localObject1[i1]);
      if (localObject1 != null) {
        break label182;
      }
      i1 += 1;
    }
    localObject1 = null;
    label182:
    i1 = 0;
    for (;;)
    {
      localObject2 = N;
      if (i1 >= localObject2.length) {
        break;
      }
      localObject2 = e(localObject2[i1]);
      if (!TextUtils.isEmpty((CharSequence)localObject2))
      {
        localObject2 = Uri.parse((String)localObject2);
        break label234;
      }
      i1 += 1;
    }
    Object localObject2 = null;
    label234:
    Object localObject3 = e("android.media.metadata.MEDIA_URI");
    if (!TextUtils.isEmpty((CharSequence)localObject3)) {
      localObject3 = Uri.parse((String)localObject3);
    } else {
      localObject3 = null;
    }
    CharSequence localCharSequence1 = localObject5[0];
    CharSequence localCharSequence2 = localObject5[1];
    CharSequence localCharSequence3 = localObject5[2];
    localObject5 = new Bundle();
    if (O.containsKey("android.media.metadata.BT_FOLDER_TYPE")) {
      ((Bundle)localObject5).putLong("android.media.extra.BT_FOLDER_TYPE", c("android.media.metadata.BT_FOLDER_TYPE"));
    }
    if (O.containsKey("android.media.metadata.DOWNLOAD_STATUS")) {
      ((Bundle)localObject5).putLong("android.media.extra.DOWNLOAD_STATUS", c("android.media.metadata.DOWNLOAD_STATUS"));
    }
    if (!((Bundle)localObject5).isEmpty()) {
      localObject4 = localObject5;
    }
    Q = new MediaDescriptionCompat(str, localCharSequence1, localCharSequence2, localCharSequence3, (Bitmap)localObject1, (Uri)localObject2, localObject4, (Uri)localObject3);
    return Q;
  }
  
  public long c(String paramString)
  {
    return O.getLong(paramString, 0L);
  }
  
  public Object c()
  {
    if ((P == null) && (Build.VERSION.SDK_INT >= 21))
    {
      Parcel localParcel = Parcel.obtain();
      writeToParcel(localParcel, 0);
      localParcel.setDataPosition(0);
      P = da.a(localParcel);
      localParcel.recycle();
    }
    return P;
  }
  
  public RatingCompat d(String paramString)
  {
    try
    {
      int i1 = Build.VERSION.SDK_INT;
      paramString = RatingCompat.a(O.getParcelable(paramString));
      return paramString;
    }
    catch (Exception paramString)
    {
      for (;;) {}
    }
    return null;
  }
  
  public Set<String> d()
  {
    return O.keySet();
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public int e()
  {
    return O.size();
  }
  
  public String e(String paramString)
  {
    paramString = O.getCharSequence(paramString);
    if (paramString != null) {
      return paramString.toString();
    }
    return null;
  }
  
  public CharSequence f(String paramString)
  {
    return O.getCharSequence(paramString);
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramParcel.writeBundle(O);
  }
  
  @Retention(RetentionPolicy.SOURCE)
  @N({b.b.a.N.a.b})
  public static @interface a {}
  
  public static final class b
  {
    public final Bundle a;
    
    public b()
    {
      a = new Bundle();
    }
    
    public b(MediaMetadataCompat paramMediaMetadataCompat)
    {
      a = new Bundle(O);
      MediaSessionCompat.a(a);
    }
    
    @N({b.b.a.N.a.b})
    public b(MediaMetadataCompat paramMediaMetadataCompat, int paramInt)
    {
      this(paramMediaMetadataCompat);
      paramMediaMetadataCompat = a.keySet().iterator();
      while (paramMediaMetadataCompat.hasNext())
      {
        String str = (String)paramMediaMetadataCompat.next();
        Object localObject = a.get(str);
        if ((localObject instanceof Bitmap))
        {
          localObject = (Bitmap)localObject;
          if ((((Bitmap)localObject).getHeight() > paramInt) || (((Bitmap)localObject).getWidth() > paramInt)) {
            a(str, a((Bitmap)localObject, paramInt));
          }
        }
      }
    }
    
    private Bitmap a(Bitmap paramBitmap, int paramInt)
    {
      float f = paramInt;
      f = Math.min(f / paramBitmap.getWidth(), f / paramBitmap.getHeight());
      paramInt = (int)(paramBitmap.getHeight() * f);
      return Bitmap.createScaledBitmap(paramBitmap, (int)(paramBitmap.getWidth() * f), paramInt, true);
    }
    
    public b a(String paramString, long paramLong)
    {
      if ((MediaMetadataCompat.K.containsKey(paramString)) && (((Integer)MediaMetadataCompat.K.get(paramString)).intValue() != 0)) {
        throw new IllegalArgumentException(a.a("The ", paramString, " key cannot be used to put a long"));
      }
      a.putLong(paramString, paramLong);
      return this;
    }
    
    public b a(String paramString, Bitmap paramBitmap)
    {
      if ((MediaMetadataCompat.K.containsKey(paramString)) && (((Integer)MediaMetadataCompat.K.get(paramString)).intValue() != 2)) {
        throw new IllegalArgumentException(a.a("The ", paramString, " key cannot be used to put a Bitmap"));
      }
      a.putParcelable(paramString, paramBitmap);
      return this;
    }
    
    public b a(String paramString, RatingCompat paramRatingCompat)
    {
      if ((MediaMetadataCompat.K.containsKey(paramString)) && (((Integer)MediaMetadataCompat.K.get(paramString)).intValue() != 3)) {
        throw new IllegalArgumentException(a.a("The ", paramString, " key cannot be used to put a Rating"));
      }
      int i = Build.VERSION.SDK_INT;
      a.putParcelable(paramString, (Parcelable)paramRatingCompat.b());
      return this;
    }
    
    public b a(String paramString, CharSequence paramCharSequence)
    {
      if ((MediaMetadataCompat.K.containsKey(paramString)) && (((Integer)MediaMetadataCompat.K.get(paramString)).intValue() != 1)) {
        throw new IllegalArgumentException(a.a("The ", paramString, " key cannot be used to put a CharSequence"));
      }
      a.putCharSequence(paramString, paramCharSequence);
      return this;
    }
    
    public b a(String paramString1, String paramString2)
    {
      if ((MediaMetadataCompat.K.containsKey(paramString1)) && (((Integer)MediaMetadataCompat.K.get(paramString1)).intValue() != 1)) {
        throw new IllegalArgumentException(a.a("The ", paramString1, " key cannot be used to put a String"));
      }
      a.putCharSequence(paramString1, paramString2);
      return this;
    }
    
    public MediaMetadataCompat a()
    {
      return new MediaMetadataCompat(a);
    }
  }
  
  @Retention(RetentionPolicy.SOURCE)
  @N({b.b.a.N.a.b})
  public static @interface c {}
  
  @Retention(RetentionPolicy.SOURCE)
  @N({b.b.a.N.a.b})
  public static @interface d {}
  
  @Retention(RetentionPolicy.SOURCE)
  @N({b.b.a.N.a.b})
  public static @interface e {}
}
