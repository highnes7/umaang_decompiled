package f.c.a.c;

import f.a.a.a.a;
import java.io.File;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import l.a.a.a.g;
import l.a.a.a.q;

public class Ta
  implements Pa
{
  public final File a;
  public final File[] b;
  public final Map<String, String> c;
  
  public Ta(File paramFile)
  {
    this(paramFile, Collections.emptyMap());
  }
  
  public Ta(File paramFile, Map<String, String> paramMap)
  {
    a = paramFile;
    b = new File[] { paramFile };
    c = new HashMap(paramMap);
    if (a.length() == 0L) {
      c.putAll(Qa.a);
    }
  }
  
  public Map<String, String> a()
  {
    return Collections.unmodifiableMap(c);
  }
  
  public String b()
  {
    String str = getFileName();
    return str.substring(0, str.lastIndexOf('.'));
  }
  
  public File c()
  {
    return a;
  }
  
  public File[] d()
  {
    return b;
  }
  
  public String getFileName()
  {
    return c().getName();
  }
  
  public Pa.a getType()
  {
    return Pa.a.a;
  }
  
  public void remove()
  {
    q localQ = g.h();
    StringBuilder localStringBuilder = a.b("Removing report at ");
    localStringBuilder.append(a.getPath());
    localQ.d("CrashlyticsCore", localStringBuilder.toString());
    a.delete();
  }
}
