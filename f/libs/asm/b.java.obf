package f.c.a;

import f.c.a.b.a;
import f.c.a.c.Ha;
import f.c.a.c.fa;
import f.c.a.c.fa.a;
import f.c.a.c.ha;
import java.net.URL;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import l.a.a.a.g;
import l.a.a.a.n;
import l.a.a.a.q;

public class b
  extends n<Void>
  implements l.a.a.a.o
{
  public static final String g = "Crashlytics";
  public final f.c.a.a.b h;
  public final a i;
  public final fa j;
  public final Collection<? extends n> k;
  
  public b()
  {
    this(new f.c.a.a.b(), new a(), new fa());
  }
  
  public b(f.c.a.a.b paramB, a paramA, fa paramFa)
  {
    h = paramB;
    i = paramA;
    j = paramFa;
    k = Collections.unmodifiableCollection(Arrays.asList(new n[] { paramB, paramA, paramFa }));
  }
  
  public static void a(int paramInt, String paramString1, String paramString2)
  {
    n();
    qj.b(paramInt, paramString1, paramString2);
  }
  
  @Deprecated
  public static void a(Ha paramHa)
  {
    g.h().a("Crashlytics", "Use of Crashlytics.setPinningInfoProvider is deprecated");
  }
  
  public static void a(String paramString)
  {
    n();
    qj.b(paramString);
  }
  
  public static void a(String paramString, double paramDouble)
  {
    n();
    qj.a(paramString, paramDouble);
  }
  
  public static void a(String paramString, float paramFloat)
  {
    n();
    qj.a(paramString, paramFloat);
  }
  
  public static void a(String paramString, int paramInt)
  {
    n();
    qj.a(paramString, paramInt);
  }
  
  public static void a(String paramString, long paramLong)
  {
    n();
    qj.a(paramString, paramLong);
  }
  
  public static void a(String paramString1, String paramString2)
  {
    n();
    qj.a(paramString1, paramString2);
  }
  
  public static void a(String paramString, boolean paramBoolean)
  {
    n();
    qj.b(paramString, paramBoolean);
  }
  
  public static void a(Throwable paramThrowable)
  {
    n();
    qj.a(paramThrowable);
  }
  
  public static void a(boolean paramBoolean)
  {
    n();
    l.a.a.a.a.b.o.a(q().d()).a(paramBoolean);
  }
  
  public static void b(String paramString)
  {
    n();
    qj.d(paramString);
  }
  
  public static void c(String paramString)
  {
    n();
    qj.e(paramString);
  }
  
  public static void d(String paramString)
  {
    n();
    qj.f(paramString);
  }
  
  public static void n()
  {
    if (q() != null) {
      return;
    }
    throw new IllegalStateException("Crashlytics must be initialized by calling Fabric.with(Context) prior to calling Crashlytics.getInstance()");
  }
  
  public static b q()
  {
    return (b)g.a(b.class);
  }
  
  public static Ha r()
  {
    n();
    return qj.u();
  }
  
  public static boolean s()
  {
    n();
    return l.a.a.a.a.b.o.a(q().d()).a();
  }
  
  @Deprecated
  public void a(ha paramHa)
  {
    try
    {
      j.a(paramHa);
      return;
    }
    finally
    {
      paramHa = finally;
      throw paramHa;
    }
  }
  
  public boolean a(URL paramURL)
  {
    return j.b(paramURL);
  }
  
  public Collection<? extends n> b()
  {
    return k;
  }
  
  @Deprecated
  public void b(boolean paramBoolean)
  {
    g.h().a("Crashlytics", "Use of Crashlytics.setDebugMode is deprecated.");
  }
  
  public Void c()
  {
    return null;
  }
  
  public String h()
  {
    return "com.crashlytics.sdk.android:crashlytics";
  }
  
  public String j()
  {
    return "2.10.0.33";
  }
  
  public void o()
  {
    j.n();
  }
  
  @Deprecated
  public boolean p()
  {
    g.h().a("Crashlytics", "Use of Crashlytics.getDebugMode is deprecated.");
    f();
    return g.k();
  }
  
  public static class a
  {
    public f.c.a.a.b a;
    public a b;
    public fa c;
    public fa.a d;
    
    public a() {}
    
    private fa.a b()
    {
      try
      {
        if (d == null) {
          d = new fa.a();
        }
        fa.a localA = d;
        return localA;
      }
      finally {}
    }
    
    @Deprecated
    public a a(float paramFloat)
    {
      b().a(paramFloat);
      return this;
    }
    
    public a a(f.c.a.a.b paramB)
    {
      if (paramB != null)
      {
        if (a == null)
        {
          a = paramB;
          return this;
        }
        throw new IllegalStateException("Answers Kit already set.");
      }
      throw new NullPointerException("Answers Kit must not be null.");
    }
    
    public a a(a paramA)
    {
      if (paramA != null)
      {
        if (b == null)
        {
          b = paramA;
          return this;
        }
        throw new IllegalStateException("Beta Kit already set.");
      }
      throw new NullPointerException("Beta Kit must not be null.");
    }
    
    @Deprecated
    public a a(Ha paramHa)
    {
      b().a(paramHa);
      return this;
    }
    
    public a a(fa paramFa)
    {
      if (paramFa != null)
      {
        if (c == null)
        {
          c = paramFa;
          return this;
        }
        throw new IllegalStateException("CrashlyticsCore Kit already set.");
      }
      throw new NullPointerException("CrashlyticsCore Kit must not be null.");
    }
    
    @Deprecated
    public a a(ha paramHa)
    {
      b().a(paramHa);
      return this;
    }
    
    @Deprecated
    public a a(boolean paramBoolean)
    {
      b().a(paramBoolean);
      return this;
    }
    
    public b a()
    {
      fa.a localA = d;
      if (localA != null) {
        if (c == null) {
          c = localA.a();
        } else {
          throw new IllegalStateException("Must not use Deprecated methods delay(), disabled(), listener(), pinningInfoProvider() with core()");
        }
      }
      if (a == null) {
        a = new f.c.a.a.b();
      }
      if (b == null) {
        b = new a();
      }
      if (c == null) {
        c = new fa();
      }
      return new b(a, b, c);
    }
  }
}
