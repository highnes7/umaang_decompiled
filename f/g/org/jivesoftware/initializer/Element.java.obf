package f.g.b.b.a;

import f.g.b.a.b.i.c;
import f.g.b.a.c.t;
import f.g.b.a.g.z;

public abstract class b<T>
  extends f.g.b.a.b.i.a.b<T>
{
  @z
  public String alt;
  @z
  public String fields;
  @z
  public String key;
  @z("oauth_token")
  public String oauthToken;
  @z
  public Boolean prettyPrint;
  @z
  public String quotaUser;
  @z
  public String userIp;
  
  public b(a paramA, String paramString1, String paramString2, Object paramObject, Class<T> paramClass)
  {
    super(paramA, paramString1, paramString2, paramObject, paramClass);
  }
  
  public String C()
  {
    return alt;
  }
  
  public String D()
  {
    return fields;
  }
  
  public String E()
  {
    return key;
  }
  
  public String F()
  {
    return oauthToken;
  }
  
  public Boolean G()
  {
    return prettyPrint;
  }
  
  public String H()
  {
    return quotaUser;
  }
  
  public String I()
  {
    return userIp;
  }
  
  public b<T> a(t paramT)
  {
    h = paramT;
    return this;
  }
  
  public b<T> a(Boolean paramBoolean)
  {
    prettyPrint = paramBoolean;
    return this;
  }
  
  public b<T> a(String paramString)
  {
    alt = paramString;
    return this;
  }
  
  public b<T> a(boolean paramBoolean)
  {
    l = paramBoolean;
    return this;
  }
  
  public b<T> b(String paramString)
  {
    fields = paramString;
    return this;
  }
  
  public b<T> b(String paramString, Object paramObject)
  {
    return (b)super.b(paramString, paramObject);
  }
  
  public b<T> c(String paramString)
  {
    key = paramString;
    return this;
  }
  
  public b<T> d(String paramString)
  {
    oauthToken = paramString;
    return this;
  }
  
  public b<T> e(String paramString)
  {
    quotaUser = paramString;
    return this;
  }
  
  public b<T> f(String paramString)
  {
    userIp = paramString;
    return this;
  }
  
  public final a o()
  {
    return (a)d;
  }
}
