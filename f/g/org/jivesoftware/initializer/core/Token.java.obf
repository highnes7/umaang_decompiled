package f.g.b.b.a.a;

import f.g.b.a.d.b;
import f.g.b.a.g.r;
import f.g.b.a.g.z;
import java.util.List;
import java.util.Map;

public final class E
  extends b
{
  @z
  public Boolean ignoreUnknownValues;
  @z
  public String kind;
  @z
  public List<a> rows;
  @z
  public Boolean skipInvalidRows;
  
  static
  {
    r.b(a.class);
  }
  
  public E() {}
  
  public E a(Boolean paramBoolean)
  {
    ignoreUnknownValues = paramBoolean;
    return this;
  }
  
  public E a(String paramString)
  {
    kind = paramString;
    return this;
  }
  
  public E a(List<a> paramList)
  {
    rows = paramList;
    return this;
  }
  
  public E b(Boolean paramBoolean)
  {
    skipInvalidRows = paramBoolean;
    return this;
  }
  
  public E b(String paramString, Object paramObject)
  {
    return (E)super.b(paramString, paramObject);
  }
  
  public E clone()
  {
    return (E)super.clone();
  }
  
  public Boolean i()
  {
    return ignoreUnknownValues;
  }
  
  public String j()
  {
    return kind;
  }
  
  public List<a> k()
  {
    return rows;
  }
  
  public Boolean l()
  {
    return skipInvalidRows;
  }
  
  public static final class a
    extends b
  {
    @z
    public String insertId;
    @z
    public Map<String, Object> json;
    
    public a() {}
    
    public a a(String paramString)
    {
      insertId = paramString;
      return this;
    }
    
    public a b(String paramString, Object paramObject)
    {
      return (a)super.b(paramString, paramObject);
    }
    
    public a b(Map<String, Object> paramMap)
    {
      json = paramMap;
      return this;
    }
    
    public a clone()
    {
      return (a)super.clone();
    }
    
    public String i()
    {
      return insertId;
    }
    
    public Map<String, Object> j()
    {
      return json;
    }
  }
}
