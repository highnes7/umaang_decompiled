package f.g.b.b.a.a;

import f.g.b.a.d.b;
import f.g.b.a.g.z;
import java.util.List;

public final class f
  extends b
{
  @z
  public String compression;
  @z
  public a csvOptions;
  @z
  public Boolean ignoreUnknownValues;
  @z
  public Integer maxBadRecords;
  @z
  public L schema;
  @z
  public String sourceFormat;
  @z
  public List<String> sourceUris;
  
  public f() {}
  
  public f a(L paramL)
  {
    schema = paramL;
    return this;
  }
  
  public f a(a paramA)
  {
    csvOptions = paramA;
    return this;
  }
  
  public f a(Boolean paramBoolean)
  {
    ignoreUnknownValues = paramBoolean;
    return this;
  }
  
  public f a(Integer paramInteger)
  {
    maxBadRecords = paramInteger;
    return this;
  }
  
  public f a(String paramString)
  {
    compression = paramString;
    return this;
  }
  
  public f a(List<String> paramList)
  {
    sourceUris = paramList;
    return this;
  }
  
  public f b(String paramString)
  {
    sourceFormat = paramString;
    return this;
  }
  
  public f b(String paramString, Object paramObject)
  {
    return (f)super.b(paramString, paramObject);
  }
  
  public f clone()
  {
    return (f)super.clone();
  }
  
  public String i()
  {
    return compression;
  }
  
  public a j()
  {
    return csvOptions;
  }
  
  public Boolean k()
  {
    return ignoreUnknownValues;
  }
  
  public Integer l()
  {
    return maxBadRecords;
  }
  
  public L m()
  {
    return schema;
  }
  
  public String n()
  {
    return sourceFormat;
  }
  
  public List<String> o()
  {
    return sourceUris;
  }
}
