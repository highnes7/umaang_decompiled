package f.g.b.b.a.a;

import f.g.b.a.d.b;
import f.g.b.a.d.j;
import f.g.b.a.g.r;
import f.g.b.a.g.z;
import java.math.BigInteger;
import java.util.List;

public final class x
  extends b
{
  @z
  public String etag;
  @z
  public String kind;
  @z
  public String nextPageToken;
  @z
  public List<a> projects;
  @z
  public Integer totalItems;
  
  static
  {
    r.b(a.class);
  }
  
  public x() {}
  
  public x a(Integer paramInteger)
  {
    totalItems = paramInteger;
    return this;
  }
  
  public x a(String paramString)
  {
    etag = paramString;
    return this;
  }
  
  public x a(List<a> paramList)
  {
    projects = paramList;
    return this;
  }
  
  public x b(String paramString)
  {
    kind = paramString;
    return this;
  }
  
  public x b(String paramString, Object paramObject)
  {
    return (x)super.b(paramString, paramObject);
  }
  
  public x c(String paramString)
  {
    nextPageToken = paramString;
    return this;
  }
  
  public x clone()
  {
    return (x)super.clone();
  }
  
  public String i()
  {
    return etag;
  }
  
  public String j()
  {
    return kind;
  }
  
  public String k()
  {
    return nextPageToken;
  }
  
  public List<a> l()
  {
    return projects;
  }
  
  public Integer m()
  {
    return totalItems;
  }
  
  public static final class a
    extends b
  {
    @z
    public String friendlyName;
    @z
    public String id;
    @z
    public String kind;
    @j
    @z
    public BigInteger numericId;
    @z
    public y projectReference;
    
    public a() {}
    
    public a a(y paramY)
    {
      projectReference = paramY;
      return this;
    }
    
    public a a(String paramString)
    {
      friendlyName = paramString;
      return this;
    }
    
    public a a(BigInteger paramBigInteger)
    {
      numericId = paramBigInteger;
      return this;
    }
    
    public a b(String paramString)
    {
      id = paramString;
      return this;
    }
    
    public a b(String paramString, Object paramObject)
    {
      return (a)super.b(paramString, paramObject);
    }
    
    public a c(String paramString)
    {
      kind = paramString;
      return this;
    }
    
    public a clone()
    {
      return (a)super.clone();
    }
    
    public String i()
    {
      return friendlyName;
    }
    
    public String j()
    {
      return id;
    }
    
    public String k()
    {
      return kind;
    }
    
    public BigInteger l()
    {
      return numericId;
    }
    
    public y m()
    {
      return projectReference;
    }
  }
}
