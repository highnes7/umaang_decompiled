package f.g.b.b.a;

import f.g.b.a.b.i.e;
import f.g.b.a.c.B;
import f.g.b.a.c.y;
import f.g.b.a.d.d;
import f.g.b.b.a.a.C;
import f.g.b.b.a.a.E;
import f.g.b.b.a.a.G;
import f.g.b.b.a.a.I;
import f.g.b.b.a.a.h;
import f.g.b.b.a.a.i;
import f.g.b.b.a.a.p;
import f.g.b.b.a.a.x;
import java.io.IOException;
import java.math.BigInteger;
import java.util.List;

public class a
  extends f.g.b.a.b.i.a.a
{
  public static final String j = "https://www.googleapis.com/";
  public static final String k = "bigquery/v2/";
  public static final String l = "https://www.googleapis.com/bigquery/v2/";
  
  static
  {
    boolean bool;
    if ((f.g.b.a.b.a.a.intValue() == 1) && (f.g.b.a.b.a.b.intValue() >= 15)) {
      bool = true;
    } else {
      bool = false;
    }
    f.g.b.a.e.a.a.a.b.g.b(bool, "You are currently running with version %s of google-api-client. You need at least version 1.15 of google-api-client to run version 1.20.0 of the BigQuery API library.", new Object[] { f.g.b.a.b.a.d });
  }
  
  public a(f.g.b.a.c.F paramF, d paramD, f.g.b.a.c.A paramA)
  {
    super(new a(paramF, paramD, paramA));
  }
  
  public a(a paramA)
  {
    super(paramA);
  }
  
  public void a(f.g.b.a.b.i.c<?> paramC)
    throws IOException
  {
    if (d() != null) {
      d().a(paramC);
    }
  }
  
  public b l()
  {
    return new b();
  }
  
  public c m()
  {
    return new c();
  }
  
  public d n()
  {
    return new d();
  }
  
  public e o()
  {
    return new e();
  }
  
  public f p()
  {
    return new f();
  }
  
  public static final class a
    extends f.g.b.a.b.i.a.a.a
  {
    public a(f.g.b.a.c.F paramF, d paramD, f.g.b.a.c.A paramA)
    {
      super(paramD, "https://www.googleapis.com/", "bigquery/v2/", paramA, false);
    }
    
    public a a(e paramE)
    {
      b = paramE;
      return this;
    }
    
    public a a(f.g.b.a.c.A paramA)
    {
      c = paramA;
      return this;
    }
    
    public a a(c paramC)
    {
      b = paramC;
      return this;
    }
    
    public a a(String paramString)
    {
      g = paramString;
      return this;
    }
    
    public a a(boolean paramBoolean)
    {
      return (a)b(true).c(true);
    }
    
    public a a()
    {
      return new a(this);
    }
    
    public a b(String paramString)
    {
      return (a)super.b(paramString);
    }
    
    public a b(boolean paramBoolean)
    {
      h = paramBoolean;
      return this;
    }
    
    public a c(String paramString)
    {
      return (a)super.c(paramString);
    }
    
    public a c(boolean paramBoolean)
    {
      i = paramBoolean;
      return this;
    }
  }
  
  public class b
  {
    public b() {}
    
    public a a(String paramString1, String paramString2)
      throws IOException
    {
      paramString1 = new a(paramString1, paramString2);
      a(paramString1);
      return paramString1;
    }
    
    public c a(String paramString, f.g.b.b.a.a.b paramB)
      throws IOException
    {
      paramString = new c(paramString, paramB);
      a(paramString);
      return paramString;
    }
    
    public d a(String paramString)
      throws IOException
    {
      paramString = new d(paramString);
      a(paramString);
      return paramString;
    }
    
    public e a(String paramString1, String paramString2, f.g.b.b.a.a.b paramB)
      throws IOException
    {
      paramString1 = new e(paramString1, paramString2, paramB);
      a(paramString1);
      return paramString1;
    }
    
    public b b(String paramString1, String paramString2)
      throws IOException
    {
      paramString1 = new b(paramString1, paramString2);
      a(paramString1);
      return paramString1;
    }
    
    public f b(String paramString1, String paramString2, f.g.b.b.a.a.b paramB)
      throws IOException
    {
      paramString1 = new f(paramString1, paramString2, paramB);
      a(paramString1);
      return paramString1;
    }
    
    public class a
      extends b<Void>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public Boolean deleteContents;
      @f.g.b.a.g.z
      public String projectId;
      
      public a(String paramString1, String paramString2)
      {
        super("DELETE", "projects/{projectId}/datasets/{datasetId}", null, Void.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public Boolean K()
      {
        return deleteContents;
      }
      
      public String L()
      {
        return projectId;
      }
      
      public a a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public a a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public a b(Boolean paramBoolean)
      {
        deleteContents = paramBoolean;
        return this;
      }
      
      public a b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public a b(String paramString, Object paramObject)
      {
        return (a)super.b(paramString, paramObject);
      }
      
      public a c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public a d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public a e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public a f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public a g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public a h(String paramString)
      {
        projectId = paramString;
        return this;
      }
    }
    
    public class b
      extends b<f.g.b.b.a.a.b>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public String projectId;
      
      public b(String paramString1, String paramString2)
      {
        super("GET", "projects/{projectId}/datasets/{datasetId}", null, f.g.b.b.a.a.b.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public b a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public b a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public b b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public b b(String paramString, Object paramObject)
      {
        return (b)super.b(paramString, paramObject);
      }
      
      public b c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public b d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public b e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public b f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public b g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public b h(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public y i()
        throws IOException
      {
        return super.i();
      }
      
      public B n()
        throws IOException
      {
        return super.n();
      }
    }
    
    public class c
      extends b<f.g.b.b.a.a.b>
    {
      public static final String q = "projects/{projectId}/datasets";
      @f.g.b.a.g.z
      public String projectId;
      
      public c(String paramString, f.g.b.b.a.a.b paramB)
      {
        super("POST", "projects/{projectId}/datasets", paramB, f.g.b.b.a.a.b.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString, "Required parameter projectId must be specified.");
        projectId = paramString;
      }
      
      public String J()
      {
        return projectId;
      }
      
      public c a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public c a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public c b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public c b(String paramString, Object paramObject)
      {
        return (c)super.b(paramString, paramObject);
      }
      
      public c c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public c d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public c e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public c f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public c g(String paramString)
      {
        projectId = paramString;
        return this;
      }
    }
    
    public class d
      extends b<f.g.b.b.a.a.c>
    {
      public static final String q = "projects/{projectId}/datasets";
      @f.g.b.a.g.z
      public Boolean all;
      @f.g.b.a.g.z
      public Long maxResults;
      @f.g.b.a.g.z
      public String pageToken;
      @f.g.b.a.g.z
      public String projectId;
      
      public d(String paramString)
      {
        super("GET", "projects/{projectId}/datasets", null, f.g.b.b.a.a.c.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString, "Required parameter projectId must be specified.");
        projectId = paramString;
      }
      
      public Boolean J()
      {
        return all;
      }
      
      public Long K()
      {
        return maxResults;
      }
      
      public String L()
      {
        return pageToken;
      }
      
      public String M()
      {
        return projectId;
      }
      
      public d a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public d a(Long paramLong)
      {
        maxResults = paramLong;
        return this;
      }
      
      public d a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public d b(Boolean paramBoolean)
      {
        all = paramBoolean;
        return this;
      }
      
      public d b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public d b(String paramString, Object paramObject)
      {
        return (d)super.b(paramString, paramObject);
      }
      
      public d c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public d d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public d e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public d f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public d g(String paramString)
      {
        pageToken = paramString;
        return this;
      }
      
      public d h(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public y i()
        throws IOException
      {
        return super.i();
      }
      
      public B n()
        throws IOException
      {
        return super.n();
      }
    }
    
    public class e
      extends b<f.g.b.b.a.a.b>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public String projectId;
      
      public e(String paramString1, String paramString2, f.g.b.b.a.a.b paramB)
      {
        super("PATCH", "projects/{projectId}/datasets/{datasetId}", paramB, f.g.b.b.a.a.b.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public e a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public e a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public e b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public e b(String paramString, Object paramObject)
      {
        return (e)super.b(paramString, paramObject);
      }
      
      public e c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public e d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public e e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public e f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public e g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public e h(String paramString)
      {
        projectId = paramString;
        return this;
      }
    }
    
    public class f
      extends b<f.g.b.b.a.a.b>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public String projectId;
      
      public f(String paramString1, String paramString2, f.g.b.b.a.a.b paramB)
      {
        super("PUT", "projects/{projectId}/datasets/{datasetId}", paramB, f.g.b.b.a.a.b.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public f a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public f a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public f b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public f b(String paramString, Object paramObject)
      {
        return (f)super.b(paramString, paramObject);
      }
      
      public f c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public f d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public f e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public f f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public f g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public f h(String paramString)
      {
        projectId = paramString;
        return this;
      }
    }
  }
  
  public class c
  {
    public c() {}
    
    public a a(String paramString1, String paramString2)
      throws IOException
    {
      paramString1 = new a(paramString1, paramString2);
      a(paramString1);
      return paramString1;
    }
    
    public d a(String paramString, h paramH)
      throws IOException
    {
      paramString = new d(paramString, paramH);
      a(paramString);
      return paramString;
    }
    
    public d a(String paramString, h paramH, f.g.b.a.c.b paramB)
      throws IOException
    {
      paramString = new d(paramString, paramH, paramB);
      a(paramString);
      return paramString;
    }
    
    public e a(String paramString)
      throws IOException
    {
      paramString = new e(paramString);
      a(paramString);
      return paramString;
    }
    
    public f a(String paramString, f.g.b.b.a.a.z paramZ)
      throws IOException
    {
      paramString = new f(paramString, paramZ);
      a(paramString);
      return paramString;
    }
    
    public b b(String paramString1, String paramString2)
      throws IOException
    {
      paramString1 = new b(paramString1, paramString2);
      a(paramString1);
      return paramString1;
    }
    
    public c c(String paramString1, String paramString2)
      throws IOException
    {
      paramString1 = new c(paramString1, paramString2);
      a(paramString1);
      return paramString1;
    }
    
    public class a
      extends b<i>
    {
      public static final String q = "project/{projectId}/jobs/{jobId}/cancel";
      @f.g.b.a.g.z
      public String jobId;
      @f.g.b.a.g.z
      public String projectId;
      
      public a(String paramString1, String paramString2)
      {
        super("POST", "project/{projectId}/jobs/{jobId}/cancel", null, i.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter jobId must be specified.");
        jobId = paramString2;
      }
      
      public String J()
      {
        return jobId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public a a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public a a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public a b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public a b(String paramString, Object paramObject)
      {
        return (a)super.b(paramString, paramObject);
      }
      
      public a c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public a d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public a e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public a f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public a g(String paramString)
      {
        jobId = paramString;
        return this;
      }
      
      public a h(String paramString)
      {
        projectId = paramString;
        return this;
      }
    }
    
    public class b
      extends b<h>
    {
      public static final String q = "projects/{projectId}/jobs/{jobId}";
      @f.g.b.a.g.z
      public String jobId;
      @f.g.b.a.g.z
      public String projectId;
      
      public b(String paramString1, String paramString2)
      {
        super("GET", "projects/{projectId}/jobs/{jobId}", null, h.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter jobId must be specified.");
        jobId = paramString2;
      }
      
      public String J()
      {
        return jobId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public b a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public b a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public b b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public b b(String paramString, Object paramObject)
      {
        return (b)super.b(paramString, paramObject);
      }
      
      public b c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public b d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public b e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public b f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public b g(String paramString)
      {
        jobId = paramString;
        return this;
      }
      
      public b h(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public y i()
        throws IOException
      {
        return super.i();
      }
      
      public B n()
        throws IOException
      {
        return super.n();
      }
    }
    
    public class c
      extends b<f.g.b.b.a.a.g>
    {
      public static final String q = "projects/{projectId}/queries/{jobId}";
      @f.g.b.a.g.z
      public String jobId;
      @f.g.b.a.g.z
      public Long maxResults;
      @f.g.b.a.g.z
      public String pageToken;
      @f.g.b.a.g.z
      public String projectId;
      @f.g.b.a.g.z
      public BigInteger startIndex;
      @f.g.b.a.g.z
      public Long timeoutMs;
      
      public c(String paramString1, String paramString2)
      {
        super("GET", "projects/{projectId}/queries/{jobId}", null, f.g.b.b.a.a.g.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter jobId must be specified.");
        jobId = paramString2;
      }
      
      public String J()
      {
        return jobId;
      }
      
      public Long K()
      {
        return maxResults;
      }
      
      public String L()
      {
        return pageToken;
      }
      
      public String M()
      {
        return projectId;
      }
      
      public BigInteger N()
      {
        return startIndex;
      }
      
      public Long O()
      {
        return timeoutMs;
      }
      
      public c a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public c a(Long paramLong)
      {
        maxResults = paramLong;
        return this;
      }
      
      public c a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public c a(BigInteger paramBigInteger)
      {
        startIndex = paramBigInteger;
        return this;
      }
      
      public c b(Long paramLong)
      {
        timeoutMs = paramLong;
        return this;
      }
      
      public c b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public c b(String paramString, Object paramObject)
      {
        return (c)super.b(paramString, paramObject);
      }
      
      public c c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public c d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public c e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public c f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public c g(String paramString)
      {
        jobId = paramString;
        return this;
      }
      
      public c h(String paramString)
      {
        pageToken = paramString;
        return this;
      }
      
      public y i()
        throws IOException
      {
        return super.i();
      }
      
      public c i(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public B n()
        throws IOException
      {
        return super.n();
      }
    }
    
    public class d
      extends b<h>
    {
      public static final String q = "projects/{projectId}/jobs";
      @f.g.b.a.g.z
      public String projectId;
      
      public d(String paramString, h paramH)
      {
        super("POST", "projects/{projectId}/jobs", paramH, h.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString, "Required parameter projectId must be specified.");
        projectId = paramString;
      }
      
      public d(String paramString, h paramH, f.g.b.a.c.b paramB)
      {
        super("POST", localStringBuilder.toString(), paramH, h.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString, "Required parameter projectId must be specified.");
        projectId = paramString;
        a(paramB);
      }
      
      public String J()
      {
        return projectId;
      }
      
      public d a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public d a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public d b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public d b(String paramString, Object paramObject)
      {
        return (d)super.b(paramString, paramObject);
      }
      
      public d c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public d d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public d e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public d f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public d g(String paramString)
      {
        projectId = paramString;
        return this;
      }
    }
    
    public class e
      extends b<p>
    {
      public static final String q = "projects/{projectId}/jobs";
      @f.g.b.a.g.z
      public Boolean allUsers;
      @f.g.b.a.g.z
      public Long maxResults;
      @f.g.b.a.g.z
      public String pageToken;
      @f.g.b.a.g.z
      public String projectId;
      @f.g.b.a.g.z
      public String projection;
      @f.g.b.a.g.z
      public List<String> stateFilter;
      
      public e(String paramString)
      {
        super("GET", "projects/{projectId}/jobs", null, p.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString, "Required parameter projectId must be specified.");
        projectId = paramString;
      }
      
      public Boolean J()
      {
        return allUsers;
      }
      
      public Long K()
      {
        return maxResults;
      }
      
      public String L()
      {
        return pageToken;
      }
      
      public String M()
      {
        return projectId;
      }
      
      public String N()
      {
        return projection;
      }
      
      public List<String> O()
      {
        return stateFilter;
      }
      
      public e a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public e a(Long paramLong)
      {
        maxResults = paramLong;
        return this;
      }
      
      public e a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public e a(List<String> paramList)
      {
        stateFilter = paramList;
        return this;
      }
      
      public e b(Boolean paramBoolean)
      {
        allUsers = paramBoolean;
        return this;
      }
      
      public e b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public e b(String paramString, Object paramObject)
      {
        return (e)super.b(paramString, paramObject);
      }
      
      public e c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public e d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public e e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public e f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public e g(String paramString)
      {
        pageToken = paramString;
        return this;
      }
      
      public e h(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public y i()
        throws IOException
      {
        return super.i();
      }
      
      public e i(String paramString)
      {
        projection = paramString;
        return this;
      }
      
      public B n()
        throws IOException
      {
        return super.n();
      }
    }
    
    public class f
      extends b<f.g.b.b.a.a.A>
    {
      public static final String q = "projects/{projectId}/queries";
      @f.g.b.a.g.z
      public String projectId;
      
      public f(String paramString, f.g.b.b.a.a.z paramZ)
      {
        super("POST", "projects/{projectId}/queries", paramZ, f.g.b.b.a.a.A.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString, "Required parameter projectId must be specified.");
        projectId = paramString;
      }
      
      public String J()
      {
        return projectId;
      }
      
      public f a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public f a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public f b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public f b(String paramString, Object paramObject)
      {
        return (f)super.b(paramString, paramObject);
      }
      
      public f c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public f d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public f e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public f f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public f g(String paramString)
      {
        projectId = paramString;
        return this;
      }
    }
  }
  
  public class d
  {
    public d() {}
    
    public a a()
      throws IOException
    {
      a localA = new a();
      a(localA);
      return localA;
    }
    
    public class a
      extends b<x>
    {
      public static final String q = "projects";
      @f.g.b.a.g.z
      public Long maxResults;
      @f.g.b.a.g.z
      public String pageToken;
      
      public a()
      {
        super("GET", "projects", null, x.class);
      }
      
      public Long J()
      {
        return maxResults;
      }
      
      public String K()
      {
        return pageToken;
      }
      
      public a a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public a a(Long paramLong)
      {
        maxResults = paramLong;
        return this;
      }
      
      public a a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public a b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public a b(String paramString, Object paramObject)
      {
        return (a)super.b(paramString, paramObject);
      }
      
      public a c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public a d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public a e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public a f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public a g(String paramString)
      {
        pageToken = paramString;
        return this;
      }
      
      public y i()
        throws IOException
      {
        return super.i();
      }
      
      public B n()
        throws IOException
      {
        return super.n();
      }
    }
  }
  
  public class e
  {
    public e() {}
    
    public a a(String paramString1, String paramString2, String paramString3, E paramE)
      throws IOException
    {
      paramString1 = new a(paramString1, paramString2, paramString3, paramE);
      a(paramString1);
      return paramString1;
    }
    
    public b a(String paramString1, String paramString2, String paramString3)
      throws IOException
    {
      paramString1 = new b(paramString1, paramString2, paramString3);
      a(paramString1);
      return paramString1;
    }
    
    public class a
      extends b<f.g.b.b.a.a.F>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}/tables/{tableId}/insertAll";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public String projectId;
      @f.g.b.a.g.z
      public String tableId;
      
      public a(String paramString1, String paramString2, String paramString3, E paramE)
      {
        super("POST", "projects/{projectId}/datasets/{datasetId}/tables/{tableId}/insertAll", paramE, f.g.b.b.a.a.F.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
        f.g.b.a.e.a.a.a.b.g.a(paramString3, "Required parameter tableId must be specified.");
        tableId = paramString3;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public String L()
      {
        return tableId;
      }
      
      public a a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public a a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public a b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public a b(String paramString, Object paramObject)
      {
        return (a)super.b(paramString, paramObject);
      }
      
      public a c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public a d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public a e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public a f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public a g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public a h(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public a i(String paramString)
      {
        tableId = paramString;
        return this;
      }
    }
    
    public class b
      extends b<G>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}/tables/{tableId}/data";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public Long maxResults;
      @f.g.b.a.g.z
      public String pageToken;
      @f.g.b.a.g.z
      public String projectId;
      @f.g.b.a.g.z
      public BigInteger startIndex;
      @f.g.b.a.g.z
      public String tableId;
      
      public b(String paramString1, String paramString2, String paramString3)
      {
        super("GET", "projects/{projectId}/datasets/{datasetId}/tables/{tableId}/data", null, G.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
        f.g.b.a.e.a.a.a.b.g.a(paramString3, "Required parameter tableId must be specified.");
        tableId = paramString3;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public Long K()
      {
        return maxResults;
      }
      
      public String L()
      {
        return pageToken;
      }
      
      public String M()
      {
        return projectId;
      }
      
      public BigInteger N()
      {
        return startIndex;
      }
      
      public String O()
      {
        return tableId;
      }
      
      public b a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public b a(Long paramLong)
      {
        maxResults = paramLong;
        return this;
      }
      
      public b a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public b a(BigInteger paramBigInteger)
      {
        startIndex = paramBigInteger;
        return this;
      }
      
      public b b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public b b(String paramString, Object paramObject)
      {
        return (b)super.b(paramString, paramObject);
      }
      
      public b c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public b d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public b e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public b f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public b g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public b h(String paramString)
      {
        pageToken = paramString;
        return this;
      }
      
      public y i()
        throws IOException
      {
        return super.i();
      }
      
      public b i(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public b j(String paramString)
      {
        tableId = paramString;
        return this;
      }
      
      public B n()
        throws IOException
      {
        return super.n();
      }
    }
  }
  
  public class f
  {
    public f() {}
    
    public a a(String paramString1, String paramString2, String paramString3)
      throws IOException
    {
      paramString1 = new a(paramString1, paramString2, paramString3);
      a(paramString1);
      return paramString1;
    }
    
    public c a(String paramString1, String paramString2, C paramC)
      throws IOException
    {
      paramString1 = new c(paramString1, paramString2, paramC);
      a(paramString1);
      return paramString1;
    }
    
    public d a(String paramString1, String paramString2)
      throws IOException
    {
      paramString1 = new d(paramString1, paramString2);
      a(paramString1);
      return paramString1;
    }
    
    public e a(String paramString1, String paramString2, String paramString3, C paramC)
      throws IOException
    {
      paramString1 = new e(paramString1, paramString2, paramString3, paramC);
      a(paramString1);
      return paramString1;
    }
    
    public b b(String paramString1, String paramString2, String paramString3)
      throws IOException
    {
      paramString1 = new b(paramString1, paramString2, paramString3);
      a(paramString1);
      return paramString1;
    }
    
    public f b(String paramString1, String paramString2, String paramString3, C paramC)
      throws IOException
    {
      paramString1 = new f(paramString1, paramString2, paramString3, paramC);
      a(paramString1);
      return paramString1;
    }
    
    public class a
      extends b<Void>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}/tables/{tableId}";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public String projectId;
      @f.g.b.a.g.z
      public String tableId;
      
      public a(String paramString1, String paramString2, String paramString3)
      {
        super("DELETE", "projects/{projectId}/datasets/{datasetId}/tables/{tableId}", null, Void.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
        f.g.b.a.e.a.a.a.b.g.a(paramString3, "Required parameter tableId must be specified.");
        tableId = paramString3;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public String L()
      {
        return tableId;
      }
      
      public a a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public a a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public a b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public a b(String paramString, Object paramObject)
      {
        return (a)super.b(paramString, paramObject);
      }
      
      public a c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public a d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public a e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public a f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public a g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public a h(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public a i(String paramString)
      {
        tableId = paramString;
        return this;
      }
    }
    
    public class b
      extends b<C>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}/tables/{tableId}";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public String projectId;
      @f.g.b.a.g.z
      public String tableId;
      
      public b(String paramString1, String paramString2, String paramString3)
      {
        super("GET", "projects/{projectId}/datasets/{datasetId}/tables/{tableId}", null, C.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
        f.g.b.a.e.a.a.a.b.g.a(paramString3, "Required parameter tableId must be specified.");
        tableId = paramString3;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public String L()
      {
        return tableId;
      }
      
      public b a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public b a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public b b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public b b(String paramString, Object paramObject)
      {
        return (b)super.b(paramString, paramObject);
      }
      
      public b c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public b d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public b e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public b f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public b g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public b h(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public y i()
        throws IOException
      {
        return super.i();
      }
      
      public b i(String paramString)
      {
        tableId = paramString;
        return this;
      }
      
      public B n()
        throws IOException
      {
        return super.n();
      }
    }
    
    public class c
      extends b<C>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}/tables";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public String projectId;
      
      public c(String paramString1, String paramString2, C paramC)
      {
        super("POST", "projects/{projectId}/datasets/{datasetId}/tables", paramC, C.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public c a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public c a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public c b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public c b(String paramString, Object paramObject)
      {
        return (c)super.b(paramString, paramObject);
      }
      
      public c c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public c d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public c e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public c f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public c g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public c h(String paramString)
      {
        projectId = paramString;
        return this;
      }
    }
    
    public class d
      extends b<I>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}/tables";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public Long maxResults;
      @f.g.b.a.g.z
      public String pageToken;
      @f.g.b.a.g.z
      public String projectId;
      
      public d(String paramString1, String paramString2)
      {
        super("GET", "projects/{projectId}/datasets/{datasetId}/tables", null, I.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public Long K()
      {
        return maxResults;
      }
      
      public String L()
      {
        return pageToken;
      }
      
      public String M()
      {
        return projectId;
      }
      
      public d a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public d a(Long paramLong)
      {
        maxResults = paramLong;
        return this;
      }
      
      public d a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public d b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public d b(String paramString, Object paramObject)
      {
        return (d)super.b(paramString, paramObject);
      }
      
      public d c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public d d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public d e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public d f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public d g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public d h(String paramString)
      {
        pageToken = paramString;
        return this;
      }
      
      public y i()
        throws IOException
      {
        return super.i();
      }
      
      public d i(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public B n()
        throws IOException
      {
        return super.n();
      }
    }
    
    public class e
      extends b<C>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}/tables/{tableId}";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public String projectId;
      @f.g.b.a.g.z
      public String tableId;
      
      public e(String paramString1, String paramString2, String paramString3, C paramC)
      {
        super("PATCH", "projects/{projectId}/datasets/{datasetId}/tables/{tableId}", paramC, C.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
        f.g.b.a.e.a.a.a.b.g.a(paramString3, "Required parameter tableId must be specified.");
        tableId = paramString3;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public String L()
      {
        return tableId;
      }
      
      public e a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public e a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public e b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public e b(String paramString, Object paramObject)
      {
        return (e)super.b(paramString, paramObject);
      }
      
      public e c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public e d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public e e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public e f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public e g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public e h(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public e i(String paramString)
      {
        tableId = paramString;
        return this;
      }
    }
    
    public class f
      extends b<C>
    {
      public static final String q = "projects/{projectId}/datasets/{datasetId}/tables/{tableId}";
      @f.g.b.a.g.z
      public String datasetId;
      @f.g.b.a.g.z
      public String projectId;
      @f.g.b.a.g.z
      public String tableId;
      
      public f(String paramString1, String paramString2, String paramString3, C paramC)
      {
        super("PUT", "projects/{projectId}/datasets/{datasetId}/tables/{tableId}", paramC, C.class);
        f.g.b.a.e.a.a.a.b.g.a(paramString1, "Required parameter projectId must be specified.");
        projectId = paramString1;
        f.g.b.a.e.a.a.a.b.g.a(paramString2, "Required parameter datasetId must be specified.");
        datasetId = paramString2;
        f.g.b.a.e.a.a.a.b.g.a(paramString3, "Required parameter tableId must be specified.");
        tableId = paramString3;
      }
      
      public String J()
      {
        return datasetId;
      }
      
      public String K()
      {
        return projectId;
      }
      
      public String L()
      {
        return tableId;
      }
      
      public f a(Boolean paramBoolean)
      {
        prettyPrint = paramBoolean;
        return this;
      }
      
      public f a(String paramString)
      {
        alt = paramString;
        return this;
      }
      
      public f b(String paramString)
      {
        fields = paramString;
        return this;
      }
      
      public f b(String paramString, Object paramObject)
      {
        return (f)super.b(paramString, paramObject);
      }
      
      public f c(String paramString)
      {
        key = paramString;
        return this;
      }
      
      public f d(String paramString)
      {
        oauthToken = paramString;
        return this;
      }
      
      public f e(String paramString)
      {
        quotaUser = paramString;
        return this;
      }
      
      public f f(String paramString)
      {
        userIp = paramString;
        return this;
      }
      
      public f g(String paramString)
      {
        datasetId = paramString;
        return this;
      }
      
      public f h(String paramString)
      {
        projectId = paramString;
        return this;
      }
      
      public f i(String paramString)
      {
        tableId = paramString;
        return this;
      }
    }
  }
}
