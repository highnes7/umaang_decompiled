package f.g.b.a.g;

import f.g.b.a.e.a.a.a.b.g;
import java.io.IOException;

public class u
  implements e
{
  public static final int a = 500;
  public static final double b = 0.5D;
  public static final double c = 1.5D;
  public static final int d = 60000;
  public static final int e = 900000;
  public int f;
  public final int g;
  public final double h;
  public final double i;
  public final int j;
  public long k;
  public final int l;
  public final H m;
  
  public u()
  {
    this(new a());
  }
  
  public u(a paramA)
  {
    g = a;
    h = b;
    i = c;
    j = d;
    l = e;
    m = f;
    int n = g;
    boolean bool2 = true;
    boolean bool1;
    if (n > 0) {
      bool1 = true;
    } else {
      bool1 = false;
    }
    g.a(bool1);
    double d1 = h;
    if ((0.0D <= d1) && (d1 < 1.0D)) {
      bool1 = true;
    } else {
      bool1 = false;
    }
    g.a(bool1);
    if (i >= 1.0D) {
      bool1 = true;
    } else {
      bool1 = false;
    }
    g.a(bool1);
    if (j >= g) {
      bool1 = true;
    } else {
      bool1 = false;
    }
    g.a(bool1);
    if (l > 0) {
      bool1 = bool2;
    } else {
      bool1 = false;
    }
    g.a(bool1);
    reset();
  }
  
  public static int a(double paramDouble1, double paramDouble2, int paramInt)
  {
    double d1 = paramInt;
    Double.isNaN(d1);
    paramDouble1 *= d1;
    Double.isNaN(d1);
    double d2 = d1 - paramDouble1;
    Double.isNaN(d1);
    return (int)((d1 + paramDouble1 - d2 + 1.0D) * paramDouble2 + d2);
  }
  
  private void i()
  {
    int n = f;
    double d2 = n;
    int i1 = j;
    double d3 = i1;
    double d1 = i;
    Double.isNaN(d3);
    if (d2 >= d3 / d1)
    {
      f = i1;
      return;
    }
    d2 = n;
    Double.isNaN(d2);
    f = ((int)(d2 * d1));
  }
  
  public long a()
    throws IOException
  {
    if (c() > l) {
      return -1L;
    }
    int n = a(h, Math.random(), f);
    i();
    return n;
  }
  
  public final int b()
  {
    return f;
  }
  
  public final long c()
  {
    return (m.nanoTime() - k) / 1000000L;
  }
  
  public final int d()
  {
    return g;
  }
  
  public final int e()
  {
    return l;
  }
  
  public final int f()
  {
    return j;
  }
  
  public final double g()
  {
    return i;
  }
  
  public final double h()
  {
    return h;
  }
  
  public final void reset()
  {
    f = g;
    k = m.nanoTime();
  }
  
  public static class a
  {
    public int a = 500;
    public double b = 0.5D;
    public double c = 1.5D;
    public int d = 60000;
    public int e = 900000;
    public H f = H.a;
    
    public a() {}
    
    public a a(double paramDouble)
    {
      c = paramDouble;
      return this;
    }
    
    public a a(int paramInt)
    {
      a = paramInt;
      return this;
    }
    
    public a a(H paramH)
    {
      if (paramH != null)
      {
        f = paramH;
        return this;
      }
      throw new NullPointerException();
    }
    
    public u a()
    {
      return new u(this);
    }
    
    public final int b()
    {
      return a;
    }
    
    public a b(double paramDouble)
    {
      b = paramDouble;
      return this;
    }
    
    public a b(int paramInt)
    {
      e = paramInt;
      return this;
    }
    
    public final int c()
    {
      return e;
    }
    
    public a c(int paramInt)
    {
      d = paramInt;
      return this;
    }
    
    public final int d()
    {
      return d;
    }
    
    public final double e()
    {
      return c;
    }
    
    public final H f()
    {
      return f;
    }
    
    public final double g()
    {
      return b;
    }
  }
}
