package f.g.b.a.g;

import f.g.b.a.e.a.a.a.b.i;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.Serializable;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class x
{
  public x() {}
  
  public static long a(V paramV)
    throws IOException
  {
    j localJ = new j();
    try
    {
      paramV.writeTo(localJ);
      return a;
    }
    finally
    {
      localJ.close();
    }
  }
  
  /* Error */
  public static <S extends Serializable> S a(InputStream paramInputStream)
    throws IOException
  {
    // Byte code:
    //   0: new 36	java/io/ObjectInputStream
    //   3: dup
    //   4: aload_0
    //   5: invokespecial 39	java/io/ObjectInputStream:<init>	(Ljava/io/InputStream;)V
    //   8: invokevirtual 43	java/io/ObjectInputStream:readObject	()Ljava/lang/Object;
    //   11: checkcast 45	java/io/Serializable
    //   14: astore_1
    //   15: aload_0
    //   16: invokevirtual 48	java/io/InputStream:close	()V
    //   19: aload_1
    //   20: areturn
    //   21: astore_1
    //   22: goto +22 -> 44
    //   25: astore_1
    //   26: new 13	java/io/IOException
    //   29: dup
    //   30: ldc 50
    //   32: invokespecial 53	java/io/IOException:<init>	(Ljava/lang/String;)V
    //   35: astore_2
    //   36: aload_2
    //   37: aload_1
    //   38: invokevirtual 57	java/io/IOException:initCause	(Ljava/lang/Throwable;)Ljava/lang/Throwable;
    //   41: pop
    //   42: aload_2
    //   43: athrow
    //   44: aload_0
    //   45: invokevirtual 48	java/io/InputStream:close	()V
    //   48: aload_1
    //   49: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	50	0	paramInputStream	InputStream
    //   14	6	1	localSerializable	Serializable
    //   21	1	1	localObject	Object
    //   25	24	1	localClassNotFoundException	ClassNotFoundException
    //   35	8	2	localIOException	IOException
    // Exception table:
    //   from	to	target	type
    //   0	15	21	finally
    //   26	44	21	finally
    //   0	15	25	java/lang/ClassNotFoundException
  }
  
  public static <S extends Serializable> S a(byte[] paramArrayOfByte)
    throws IOException
  {
    if (paramArrayOfByte == null) {
      return null;
    }
    return a(new ByteArrayInputStream(paramArrayOfByte));
  }
  
  public static void a(InputStream paramInputStream, OutputStream paramOutputStream)
    throws IOException
  {
    a(paramInputStream, paramOutputStream, true);
  }
  
  public static void a(InputStream paramInputStream, OutputStream paramOutputStream, boolean paramBoolean)
    throws IOException
  {
    try
    {
      k.a(paramInputStream, paramOutputStream);
      return;
    }
    finally
    {
      if (paramBoolean) {
        paramInputStream.close();
      }
    }
  }
  
  public static void a(Object paramObject, OutputStream paramOutputStream)
    throws IOException
  {
    try
    {
      new ObjectOutputStream(paramOutputStream).writeObject(paramObject);
      return;
    }
    finally
    {
      paramOutputStream.close();
    }
  }
  
  public static boolean a(File paramFile)
    throws IOException
  {
    try
    {
      localObject1 = Class.forName("java.nio.file.Files");
      Class localClass = Class.forName("java.nio.file.Path");
      Object localObject2 = File.class.getMethod("toPath", new Class[0]).invoke(paramFile, new Object[0]);
      boolean bool = ((Boolean)((Class)localObject1).getMethod("isSymbolicLink", new Class[] { localClass }).invoke(null, new Object[] { localObject2 })).booleanValue();
      return bool;
    }
    catch (InvocationTargetException paramFile)
    {
      Object localObject1;
      paramFile = paramFile.getCause();
      i.a(paramFile, IOException.class);
      i.e(paramFile);
      throw new RuntimeException(paramFile);
    }
    catch (ClassNotFoundException|IllegalArgumentException|SecurityException|IllegalAccessException|NoSuchMethodException localClassNotFoundException)
    {
      for (;;) {}
    }
    if (File.separatorChar == '\\') {
      return false;
    }
    localObject1 = paramFile;
    if (paramFile.getParent() != null) {
      localObject1 = new File(paramFile.getParentFile().getCanonicalFile(), paramFile.getName());
    }
    return ((File)localObject1).getCanonicalFile().equals(((File)localObject1).getAbsoluteFile()) ^ true;
  }
  
  public static byte[] a(Object paramObject)
    throws IOException
  {
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    a(paramObject, localByteArrayOutputStream);
    return localByteArrayOutputStream.toByteArray();
  }
}
