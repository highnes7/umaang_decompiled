package f.g.b.a.g;

import f.g.b.a.e.a.a.a.b.g;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public final class b
{
  public final Map<String, a> a = new a();
  public final Map<Field, a> b = new a();
  public final Object c;
  
  public b(Object paramObject)
  {
    c = paramObject;
  }
  
  public void a()
  {
    Iterator localIterator = a.entrySet().iterator();
    Map.Entry localEntry;
    while (localIterator.hasNext())
    {
      localEntry = (Map.Entry)localIterator.next();
      ((Map)c).put(localEntry.getKey(), ((a)localEntry.getValue()).a());
    }
    localIterator = b.entrySet().iterator();
    while (localIterator.hasNext())
    {
      localEntry = (Map.Entry)localIterator.next();
      v.a((Field)localEntry.getKey(), c, ((a)localEntry.getValue()).a());
    }
  }
  
  public void a(String paramString, Class<?> paramClass, Object paramObject)
  {
    a localA2 = (a)a.get(paramString);
    a localA1 = localA2;
    if (localA2 == null)
    {
      localA1 = new a(paramClass);
      a.put(paramString, localA1);
    }
    localA1.a(paramClass, paramObject);
  }
  
  public void a(Field paramField, Class<?> paramClass, Object paramObject)
  {
    a localA2 = (a)b.get(paramField);
    a localA1 = localA2;
    if (localA2 == null)
    {
      localA1 = new a(paramClass);
      b.put(paramField, localA1);
    }
    localA1.a(paramClass, paramObject);
  }
  
  public static class a
  {
    public final Class<?> a;
    public final ArrayList<Object> b = new ArrayList();
    
    public a(Class<?> paramClass)
    {
      a = paramClass;
    }
    
    public Object a()
    {
      return ba.a(b, a);
    }
    
    public void a(Class<?> paramClass, Object paramObject)
    {
      boolean bool;
      if (paramClass == a) {
        bool = true;
      } else {
        bool = false;
      }
      g.a(bool);
      b.add(paramObject);
    }
  }
}
