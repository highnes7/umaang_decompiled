package f.g.b.a.d.c;

import f.g.b.a.d.d;
import f.g.b.a.e.a.a.a.b.g;
import f.g.b.a.g.N;
import f.g.b.a.g.W;
import f.g.b.a.g.h;
import f.g.b.a.g.z;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.List;
import javax.net.ssl.TrustManagerFactory;
import javax.net.ssl.X509TrustManager;

public class a
  extends b
{
  public final byte[] c;
  public final byte[] d;
  
  public a(a paramA, b.b paramB, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    super(paramA, paramB);
    if (paramArrayOfByte1 != null)
    {
      c = paramArrayOfByte1;
      if (paramArrayOfByte2 != null)
      {
        d = paramArrayOfByte2;
        return;
      }
      throw new NullPointerException();
    }
    throw new NullPointerException();
  }
  
  public static b a(d paramD)
  {
    return new b(paramD);
  }
  
  public static a a(d paramD, String paramString)
    throws IOException
  {
    return new b(paramD).a(paramString);
  }
  
  public static String a(PrivateKey paramPrivateKey, d paramD, a paramA, b.b paramB)
    throws GeneralSecurityException, IOException
  {
    paramA = String.valueOf(f.g.b.a.e.b.a.a.a.a.a.k(paramD.a(paramA)));
    paramD = String.valueOf(f.g.b.a.e.b.a.a.a.a.a.k(paramD.a(paramB)));
    int i = paramA.length();
    paramD = f.a.a.a.a.a(new StringBuilder(paramD.length() + (i + 1)), paramA, ".", paramD);
    paramA = W.a(paramD);
    paramPrivateKey = N.a(N.f(), paramPrivateKey, paramA);
    paramD = String.valueOf(paramD);
    paramPrivateKey = String.valueOf(f.g.b.a.e.b.a.a.a.a.a.k(paramPrivateKey));
    i = paramD.length();
    return f.a.a.a.a.a(new StringBuilder(paramPrivateKey.length() + (i + 1)), paramD, ".", paramPrivateKey);
  }
  
  public static X509TrustManager c()
  {
    try
    {
      Object localObject1 = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
      ((TrustManagerFactory)localObject1).init(null);
      localObject1 = ((TrustManagerFactory)localObject1).getTrustManagers();
      int j = localObject1.length;
      int i = 0;
      while (i < j)
      {
        Object localObject2 = localObject1[i];
        if ((localObject2 instanceof X509TrustManager))
        {
          localObject1 = (X509TrustManager)localObject2;
          return localObject1;
        }
        i += 1;
      }
      return null;
    }
    catch (NoSuchAlgorithmException|KeyStoreException localNoSuchAlgorithmException) {}
    return null;
  }
  
  public a a()
  {
    return (a)a;
  }
  
  @h
  public final X509Certificate a(X509TrustManager paramX509TrustManager)
    throws GeneralSecurityException
  {
    List localList = a().q();
    if (localList != null)
    {
      if (localList.isEmpty()) {
        return null;
      }
      if ("RS256".equals(a().k())) {
        return N.a(N.f(), paramX509TrustManager, localList, c, d);
      }
    }
    return null;
  }
  
  public final boolean a(PublicKey paramPublicKey)
    throws GeneralSecurityException
  {
    if ("RS256".equals(a().k())) {
      return N.a(N.f(), paramPublicKey, c, d);
    }
    return false;
  }
  
  public final byte[] d()
  {
    return c;
  }
  
  public final byte[] e()
  {
    return d;
  }
  
  @h
  public final X509Certificate f()
    throws GeneralSecurityException
  {
    X509TrustManager localX509TrustManager = c();
    if (localX509TrustManager == null) {
      return null;
    }
    return a(localX509TrustManager);
  }
  
  public static class a
    extends b.a
  {
    @z("alg")
    public String algorithm;
    @z("crit")
    public List<String> critical;
    @z("jwk")
    public String jwk;
    @z("jku")
    public String jwkUrl;
    @z("kid")
    public String keyId;
    @z("x5c")
    public List<String> x509Certificates;
    @z("x5t")
    public String x509Thumbprint;
    @z("x5u")
    public String x509Url;
    
    public a() {}
    
    public a a(List<String> paramList)
    {
      critical = paramList;
      return this;
    }
    
    public a b(String paramString)
    {
      type = paramString;
      return this;
    }
    
    public a b(String paramString, Object paramObject)
    {
      return (a)super.b(paramString, paramObject);
    }
    
    public a b(List<String> paramList)
    {
      x509Certificates = paramList;
      return this;
    }
    
    public a c(String paramString)
    {
      algorithm = paramString;
      return this;
    }
    
    public a clone()
    {
      return (a)super.clone();
    }
    
    public a d(String paramString)
    {
      jwk = paramString;
      return this;
    }
    
    public a e(String paramString)
    {
      jwkUrl = paramString;
      return this;
    }
    
    public a f(String paramString)
    {
      keyId = paramString;
      return this;
    }
    
    @Deprecated
    public a g(String paramString)
    {
      ArrayList localArrayList = new ArrayList();
      localArrayList.add(paramString);
      x509Certificates = localArrayList;
      return this;
    }
    
    public a h(String paramString)
    {
      x509Thumbprint = paramString;
      return this;
    }
    
    public a i(String paramString)
    {
      x509Url = paramString;
      return this;
    }
    
    public final String k()
    {
      return algorithm;
    }
    
    public final List<String> l()
    {
      return critical;
    }
    
    public final String m()
    {
      return jwk;
    }
    
    public final String n()
    {
      return jwkUrl;
    }
    
    public final String o()
    {
      return keyId;
    }
    
    @Deprecated
    public final String p()
    {
      List localList = x509Certificates;
      if ((localList != null) && (!localList.isEmpty())) {
        return (String)x509Certificates.get(0);
      }
      return null;
    }
    
    public final List<String> q()
    {
      return x509Certificates;
    }
    
    public final String r()
    {
      return x509Thumbprint;
    }
    
    public final String s()
    {
      return x509Url;
    }
  }
  
  public static final class b
  {
    public final d a;
    public Class<? extends a.a> b = a.a.class;
    public Class<? extends b.b> c = b.b.class;
    
    public b(d paramD)
    {
      if (paramD != null)
      {
        a = paramD;
        return;
      }
      throw new NullPointerException();
    }
    
    public b a(Class<? extends a.a> paramClass)
    {
      b = paramClass;
      return this;
    }
    
    public a a(String paramString)
      throws IOException
    {
      int i = paramString.indexOf('.');
      boolean bool2 = true;
      boolean bool1;
      if (i != -1) {
        bool1 = true;
      } else {
        bool1 = false;
      }
      g.a(bool1);
      Object localObject = f.g.b.a.e.b.a.a.a.a.a.c(paramString.substring(0, i));
      i += 1;
      int j = paramString.indexOf('.', i);
      if (j != -1) {
        bool1 = true;
      } else {
        bool1 = false;
      }
      g.a(bool1);
      int k = j + 1;
      if (paramString.indexOf('.', k) == -1) {
        bool1 = true;
      } else {
        bool1 = false;
      }
      g.a(bool1);
      byte[] arrayOfByte1 = f.g.b.a.e.b.a.a.a.a.a.c(paramString.substring(i, j));
      byte[] arrayOfByte2 = f.g.b.a.e.b.a.a.a.a.a.c(paramString.substring(k));
      paramString = W.a(paramString.substring(0, j));
      localObject = (a.a)a.a(new ByteArrayInputStream((byte[])localObject), b);
      if (((a.a)localObject).k() != null) {
        bool1 = bool2;
      } else {
        bool1 = false;
      }
      g.a(bool1);
      return new a((a.a)localObject, (b.b)a.a(new ByteArrayInputStream(arrayOfByte1), c), arrayOfByte2, paramString);
    }
    
    public Class<? extends a.a> a()
    {
      return b;
    }
    
    public b b(Class<? extends b.b> paramClass)
    {
      c = paramClass;
      return this;
    }
    
    public d b()
    {
      return a;
    }
    
    public Class<? extends b.b> c()
    {
      return c;
    }
  }
}
