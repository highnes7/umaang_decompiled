package f.g.b.a.a.b;

import f.g.b.a.e.a.a.a.b.f;
import f.g.b.a.g.K;
import f.g.b.a.g.K.a;
import f.g.b.a.g.b.d;
import f.g.b.a.g.b.e;
import f.g.b.a.g.h;
import java.io.IOException;
import java.io.Serializable;
import java.util.Arrays;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

@h
public final class q
  implements Serializable
{
  public static final String a = "q";
  public static final long b = 1L;
  public final Lock c = new ReentrantLock();
  public String d;
  public Long e;
  public String f;
  
  public q() {}
  
  public q(j paramJ)
  {
    a(paramJ.b());
    b(paramJ.j());
    a(paramJ.e());
  }
  
  public static d<q> a(e paramE)
    throws IOException
  {
    return paramE.a(a);
  }
  
  public q a(Long paramLong)
  {
    c.lock();
    try
    {
      e = paramLong;
      return this;
    }
    finally
    {
      c.unlock();
    }
  }
  
  public q a(String paramString)
  {
    c.lock();
    try
    {
      d = paramString;
      return this;
    }
    finally
    {
      c.unlock();
    }
  }
  
  public String a()
  {
    c.lock();
    try
    {
      String str = d;
      return str;
    }
    finally
    {
      c.unlock();
    }
  }
  
  public q b(String paramString)
  {
    c.lock();
    try
    {
      f = paramString;
      return this;
    }
    finally
    {
      c.unlock();
    }
  }
  
  public Long b()
  {
    c.lock();
    try
    {
      Long localLong = e;
      return localLong;
    }
    finally
    {
      c.unlock();
    }
  }
  
  public String c()
  {
    c.lock();
    try
    {
      String str = f;
      return str;
    }
    finally
    {
      c.unlock();
    }
  }
  
  public boolean equals(Object paramObject)
  {
    if (this == paramObject) {
      return true;
    }
    if (!(paramObject instanceof q)) {
      return false;
    }
    paramObject = (q)paramObject;
    return (f.a(a(), paramObject.a())) && (f.a(c(), paramObject.c())) && (f.a(b(), paramObject.b()));
  }
  
  public int hashCode()
  {
    return Arrays.hashCode(new Object[] { a(), c(), b() });
  }
  
  public String toString()
  {
    return K.a(q.class).a("accessToken", a()).a("refreshToken", c()).a("expirationTimeMilliseconds", b()).toString();
  }
}
