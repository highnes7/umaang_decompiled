package f.g.b.a.b.g;

import f.g.b.a.c.A;
import f.g.b.a.c.B;
import f.g.b.a.c.F;
import f.g.b.a.c.k;
import f.g.b.a.c.t;
import f.g.b.a.c.y;
import f.g.b.a.c.z;
import f.g.b.a.e.a.a.a.b.g;
import f.g.b.a.g.w;
import f.g.b.a.g.x;
import java.io.IOException;
import java.io.OutputStream;

public final class a
{
  public static final int a = 33554432;
  public final z b;
  public final F c;
  public boolean d = false;
  public b e;
  public int f = 33554432;
  public long g;
  public a h = a.a;
  public long i;
  public long j = -1L;
  
  public a(F paramF, A paramA)
  {
    if (paramF != null)
    {
      c = paramF;
      if (paramA == null) {
        paramF = paramF.b();
      } else {
        paramF = paramF.a(paramA);
      }
      b = paramF;
      return;
    }
    throw new NullPointerException();
  }
  
  private long a(String paramString)
  {
    if (paramString == null) {
      return 0L;
    }
    return Long.parseLong(paramString.substring(paramString.indexOf('-') + 1, paramString.indexOf('/'))) + 1L;
  }
  
  private B a(long paramLong, k paramK, t paramT, OutputStream paramOutputStream)
    throws IOException
  {
    paramK = b.b(paramK);
    if (paramT != null) {
      paramK.i().putAll(paramT);
    }
    if ((i != 0L) || (paramLong != -1L))
    {
      paramT = f.a.a.a.a.b("bytes=");
      paramT.append(i);
      paramT.append("-");
      if (paramLong != -1L) {
        paramT.append(paramLong);
      }
      paramK.i().x(paramT.toString());
    }
    paramK = paramK.a();
    try
    {
      x.a(paramK.b(), paramOutputStream, true);
      return paramK;
    }
    finally
    {
      paramK.a();
    }
  }
  
  private void a(a paramA)
    throws IOException
  {
    h = paramA;
    paramA = e;
    if (paramA != null) {
      paramA.a(this);
    }
  }
  
  private void b(String paramString)
  {
    if (paramString == null) {
      return;
    }
    if (g == 0L) {
      g = Long.parseLong(paramString.substring(paramString.indexOf('/') + 1));
    }
  }
  
  public int a()
  {
    return f;
  }
  
  public a a(int paramInt)
  {
    boolean bool;
    if ((paramInt > 0) && (paramInt <= 33554432)) {
      bool = true;
    } else {
      bool = false;
    }
    g.a(bool);
    f = paramInt;
    return this;
  }
  
  public a a(long paramLong)
  {
    boolean bool;
    if (paramLong >= 0L) {
      bool = true;
    } else {
      bool = false;
    }
    g.a(bool);
    i = paramLong;
    return this;
  }
  
  public a a(long paramLong, int paramInt)
  {
    long l = paramInt;
    boolean bool;
    if (l >= paramLong) {
      bool = true;
    } else {
      bool = false;
    }
    g.a(bool);
    a(paramLong);
    j = l;
    return this;
  }
  
  public a a(b paramB)
  {
    e = paramB;
    return this;
  }
  
  public a a(boolean paramBoolean)
  {
    d = paramBoolean;
    return this;
  }
  
  public void a(k paramK, t paramT, OutputStream paramOutputStream)
    throws IOException
  {
    boolean bool;
    if (h == a.a) {
      bool = true;
    } else {
      bool = false;
    }
    g.a(bool);
    paramK.a("alt", "media");
    if (d)
    {
      a(a.b);
      g = a(j, paramK, paramT, paramOutputStream).g().p().longValue();
      i = g;
      a(a.c);
      return;
    }
    for (;;)
    {
      long l2 = i + f - 1L;
      long l3 = j;
      long l1 = l2;
      if (l3 != -1L) {
        l1 = Math.min(l3, l2);
      }
      String str = a(l1, paramK, paramT, paramOutputStream).g().r();
      l1 = a(str);
      b(str);
      l2 = g;
      if (l2 <= l1)
      {
        i = l2;
        a(a.c);
        return;
      }
      i = l1;
      a(a.b);
    }
  }
  
  public void a(k paramK, OutputStream paramOutputStream)
    throws IOException
  {
    a(paramK, null, paramOutputStream);
  }
  
  public a b()
  {
    return h;
  }
  
  public long c()
  {
    return j;
  }
  
  public long d()
  {
    return i;
  }
  
  public double e()
  {
    long l = g;
    if (l == 0L) {
      return 0.0D;
    }
    double d1 = i;
    double d2 = l;
    Double.isNaN(d1);
    Double.isNaN(d2);
    return d1 / d2;
  }
  
  public b f()
  {
    return e;
  }
  
  public F g()
  {
    return c;
  }
  
  public boolean h()
  {
    return d;
  }
  
  public static enum a
  {
    public a() {}
  }
}
