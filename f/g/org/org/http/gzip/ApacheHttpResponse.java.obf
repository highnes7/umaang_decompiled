package f.g.b.a.c.a;

import f.g.b.a.c.J;
import java.io.IOException;
import java.io.InputStream;
import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.HttpMessage;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.methods.AbstractExecutionAwareRequest;
import org.apache.http.client.methods.HttpRequestBase;

public final class b
  extends J
{
  public final HttpRequestBase a;
  public final HttpResponse b;
  public final Header[] c;
  
  public b(HttpRequestBase paramHttpRequestBase, HttpResponse paramHttpResponse)
  {
    a = paramHttpRequestBase;
    b = paramHttpResponse;
    c = paramHttpResponse.getAllHeaders();
  }
  
  public String a(int paramInt)
  {
    return c[paramInt].getName();
  }
  
  public String a(String paramString)
  {
    return b.getLastHeader(paramString).getValue();
  }
  
  public void a()
  {
    a.abort();
  }
  
  public InputStream b()
    throws IOException
  {
    HttpEntity localHttpEntity = b.getEntity();
    if (localHttpEntity == null) {
      return null;
    }
    return localHttpEntity.getContent();
  }
  
  public String b(int paramInt)
  {
    return c[paramInt].getValue();
  }
  
  public String c()
  {
    Object localObject = b.getEntity();
    if (localObject != null)
    {
      localObject = ((HttpEntity)localObject).getContentEncoding();
      if (localObject != null) {
        return ((Header)localObject).getValue();
      }
    }
    return null;
  }
  
  public long d()
  {
    HttpEntity localHttpEntity = b.getEntity();
    if (localHttpEntity == null) {
      return -1L;
    }
    return localHttpEntity.getContentLength();
  }
  
  public String e()
  {
    Object localObject = b.getEntity();
    if (localObject != null)
    {
      localObject = ((HttpEntity)localObject).getContentType();
      if (localObject != null) {
        return ((Header)localObject).getValue();
      }
    }
    return null;
  }
  
  public int f()
  {
    return c.length;
  }
  
  public String g()
  {
    StatusLine localStatusLine = b.getStatusLine();
    if (localStatusLine == null) {
      return null;
    }
    return localStatusLine.getReasonPhrase();
  }
  
  public int h()
  {
    StatusLine localStatusLine = b.getStatusLine();
    if (localStatusLine == null) {
      return 0;
    }
    return localStatusLine.getStatusCode();
  }
  
  public String i()
  {
    StatusLine localStatusLine = b.getStatusLine();
    if (localStatusLine == null) {
      return null;
    }
    return localStatusLine.toString();
  }
}
