package f.g.b.a.c;

import f.g.b.a.g.Q;
import f.g.b.a.g.e;
import f.g.b.a.g.f;
import f.g.b.a.g.h;
import java.io.IOException;

@h
public class o
  implements G
{
  public final e a;
  public a b = a.b;
  public Q c = Q.a;
  
  public o(e paramE)
  {
    if (paramE != null)
    {
      a = paramE;
      return;
    }
    throw new NullPointerException();
  }
  
  public o a(a paramA)
  {
    if (paramA != null)
    {
      b = paramA;
      return this;
    }
    throw new NullPointerException();
  }
  
  public o a(Q paramQ)
  {
    if (paramQ != null)
    {
      c = paramQ;
      return this;
    }
    throw new NullPointerException();
  }
  
  public final e a()
  {
    return a;
  }
  
  public final boolean a(y paramY, B paramB, boolean paramBoolean)
    throws IOException
  {
    boolean bool = false;
    if (!paramBoolean) {
      return false;
    }
    paramBoolean = bool;
    if (b.a(paramB)) {}
    try
    {
      paramBoolean = f.a(c, a);
      return paramBoolean;
    }
    catch (InterruptedException paramY) {}
    return false;
  }
  
  public final a b()
  {
    return b;
  }
  
  public final Q c()
  {
    return c;
  }
  
  @h
  public static abstract interface a
  {
    public static final a a = new m();
    public static final a b = new n();
    
    public abstract boolean a(B paramB);
  }
}
