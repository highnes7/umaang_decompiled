package f.g.c.d;

import f.g.c.a.b;
import java.util.Collection;
import java.util.Comparator;
import java.util.NoSuchElementException;
import java.util.Set;
import m.a.h;

@b(emulated=true, serializable=true)
public class Ba<E>
  extends Wb<E>
{
  public Ba(Comparator<? super E> paramComparator)
  {
    super(paramComparator);
  }
  
  public Wb<E> a(E paramE, boolean paramBoolean)
  {
    return this;
  }
  
  public Wb<E> a(E paramE1, boolean paramBoolean1, E paramE2, boolean paramBoolean2)
  {
    return this;
  }
  
  public vb<E> a()
  {
    return vb.f();
  }
  
  public Wb<E> b(E paramE, boolean paramBoolean)
  {
    return this;
  }
  
  public boolean c()
  {
    return false;
  }
  
  public boolean contains(Object paramObject)
  {
    return false;
  }
  
  public boolean containsAll(Collection<?> paramCollection)
  {
    return paramCollection.isEmpty();
  }
  
  public boolean equals(@h Object paramObject)
  {
    if ((paramObject instanceof Set)) {
      return ((Set)paramObject).isEmpty();
    }
    return false;
  }
  
  public E first()
  {
    throw new NoSuchElementException();
  }
  
  public Wb<E> h()
  {
    return new Ba(mf.b(h).g());
  }
  
  public int hashCode()
  {
    return 0;
  }
  
  public int indexOf(@h Object paramObject)
  {
    return -1;
  }
  
  public boolean isEmpty()
  {
    return true;
  }
  
  public th<E> iterator()
  {
    return Jc.a;
  }
  
  public E last()
  {
    throw new NoSuchElementException();
  }
  
  public int size()
  {
    return 0;
  }
  
  public Object[] toArray()
  {
    return kf.a;
  }
  
  public <T> T[] toArray(T[] paramArrayOfT)
  {
    return a().toArray(paramArrayOfT);
  }
  
  public String toString()
  {
    return "[]";
  }
}
