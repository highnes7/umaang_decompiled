package f.g.c.d;

import f.g.c.a.b;
import f.g.c.a.c;
import java.io.InvalidObjectException;
import java.io.ObjectInputStream;
import java.io.Serializable;
import java.util.Collection;

@b(emulated=true, serializable=true)
public abstract class mb<E>
  extends vb<E>
{
  public mb() {}
  
  @c("serialization")
  private void b(ObjectInputStream paramObjectInputStream)
    throws InvalidObjectException
  {
    throw new InvalidObjectException("Use SerializedForm");
  }
  
  public boolean c()
  {
    return h().c();
  }
  
  public boolean contains(Object paramObject)
  {
    return h().contains(paramObject);
  }
  
  @c("serialization")
  public Object d()
  {
    return new a(h());
  }
  
  public abstract rb<E> h();
  
  public boolean isEmpty()
  {
    return h().isEmpty();
  }
  
  public int size()
  {
    return h().size();
  }
  
  @c("serialization")
  public static class a
    implements Serializable
  {
    public static final long a = 0L;
    public final rb<?> b;
    
    public a(rb<?> paramRb)
    {
      b = paramRb;
    }
    
    public Object a()
    {
      return b.a();
    }
  }
}
