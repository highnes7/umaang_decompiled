package f.g.c.d;

import f.g.c.a.b;
import f.g.c.a.c;
import java.io.Serializable;
import java.util.Map;

@b(emulated=true)
public abstract class Fb<K, V>
  extends rb<V>
{
  public Fb() {}
  
  public vb<V> b()
  {
    return new Eb(this, e().entrySet().a());
  }
  
  public boolean c()
  {
    return true;
  }
  
  public boolean contains(Object paramObject)
  {
    return e().containsValue(paramObject);
  }
  
  @c("serialization")
  public Object d()
  {
    return new a(e());
  }
  
  public abstract Ab<K, V> e();
  
  public th<V> iterator()
  {
    return fe.a(e().entrySet().iterator());
  }
  
  public int size()
  {
    return e().size();
  }
  
  @c("serialization")
  private static class a<V>
    implements Serializable
  {
    public static final long a = 0L;
    public final Ab<?, V> b;
    
    public a(Ab<?, V> paramAb)
    {
      b = paramAb;
    }
    
    public Object a()
    {
      return b.values();
    }
  }
}
