package f.g.c.d;

import f.g.c.a.a;
import f.g.c.a.b;
import java.util.NoSuchElementException;
import java.util.Queue;

@b
public abstract class Xa<E>
  extends Ja<E>
  implements Queue<E>
{
  public Xa() {}
  
  public E element()
  {
    return q().element();
  }
  
  @a
  public boolean m(E paramE)
  {
    try
    {
      boolean bool = add(paramE);
      return bool;
    }
    catch (IllegalStateException paramE)
    {
      for (;;) {}
    }
    return false;
  }
  
  public boolean offer(E paramE)
  {
    return q().offer(paramE);
  }
  
  public E peek()
  {
    return q().peek();
  }
  
  public E poll()
  {
    return q().poll();
  }
  
  public abstract Queue<E> q();
  
  public E remove()
  {
    return q().remove();
  }
  
  @a
  public E x()
  {
    try
    {
      Object localObject = element();
      return localObject;
    }
    catch (NoSuchElementException localNoSuchElementException)
    {
      for (;;) {}
    }
    return null;
  }
  
  @a
  public E y()
  {
    try
    {
      Object localObject = remove();
      return localObject;
    }
    catch (NoSuchElementException localNoSuchElementException)
    {
      for (;;) {}
    }
    return null;
  }
}
