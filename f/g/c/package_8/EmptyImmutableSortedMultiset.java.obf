package f.g.c.d;

import java.util.Collection;
import java.util.Comparator;
import m.a.h;

public final class Aa<E>
  extends Ub<E>
{
  public final Wb<E> g;
  
  public Aa(Comparator<? super E> paramComparator)
  {
    g = Wb.a(paramComparator);
  }
  
  public int a(@h Object paramObject)
  {
    return 0;
  }
  
  public Ub<E> a(E paramE, O paramO)
  {
    if (paramE != null)
    {
      if (paramO != null) {
        return this;
      }
      throw new NullPointerException();
    }
    throw new NullPointerException();
  }
  
  public vb<E> a()
  {
    return vb.f();
  }
  
  public Ub<E> b(E paramE, O paramO)
  {
    if (paramE != null)
    {
      if (paramO != null) {
        return this;
      }
      throw new NullPointerException();
    }
    throw new NullPointerException();
  }
  
  public boolean c()
  {
    return false;
  }
  
  public boolean contains(@h Object paramObject)
  {
    return false;
  }
  
  public boolean containsAll(Collection<?> paramCollection)
  {
    return paramCollection.isEmpty();
  }
  
  public Nb<Ye.a<E>> entrySet()
  {
    return Nb.g();
  }
  
  public boolean equals(@h Object paramObject)
  {
    if ((paramObject instanceof Ye)) {
      return ((Ye)paramObject).isEmpty();
    }
    return false;
  }
  
  public Nb<Ye.a<E>> f()
  {
    throw new AssertionError("should never be called");
  }
  
  public Ye.a<E> firstEntry()
  {
    return null;
  }
  
  public int hashCode()
  {
    return 0;
  }
  
  public th<E> iterator()
  {
    return Jc.a;
  }
  
  public Ye.a<E> lastEntry()
  {
    return null;
  }
  
  public int size()
  {
    return 0;
  }
  
  public Object[] toArray()
  {
    return kf.a;
  }
  
  public <T> T[] toArray(T[] paramArrayOfT)
  {
    return a().toArray(paramArrayOfT);
  }
  
  public String toString()
  {
    return "[]";
  }
  
  public Wb<E> u()
  {
    return g;
  }
}
