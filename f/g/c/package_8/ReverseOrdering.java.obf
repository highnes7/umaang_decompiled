package f.g.c.d;

import f.a.a.a.a;
import f.g.c.a.b;
import java.io.Serializable;
import java.util.Iterator;
import m.a.h;

@b(serializable=true)
public final class Yf<T>
  extends mf<T>
  implements Serializable
{
  public static final long c = 0L;
  public final mf<? super T> d;
  
  public Yf(mf<? super T> paramMf)
  {
    if (paramMf != null)
    {
      d = paramMf;
      return;
    }
    throw new NullPointerException();
  }
  
  public <E extends T> E a(E paramE1, E paramE2)
  {
    return d.b(paramE1, paramE2);
  }
  
  public <E extends T> E a(E paramE1, E paramE2, E paramE3, E... paramVarArgs)
  {
    return d.b(paramE1, paramE2, paramE3, paramVarArgs);
  }
  
  public <E extends T> E a(Iterator<E> paramIterator)
  {
    return d.b(paramIterator);
  }
  
  public <E extends T> E b(E paramE1, E paramE2)
  {
    return d.a(paramE1, paramE2);
  }
  
  public <E extends T> E b(E paramE1, E paramE2, E paramE3, E... paramVarArgs)
  {
    return d.a(paramE1, paramE2, paramE3, paramVarArgs);
  }
  
  public <E extends T> E b(Iterator<E> paramIterator)
  {
    return d.a(paramIterator);
  }
  
  public int compare(T paramT1, T paramT2)
  {
    return d.compare(paramT2, paramT1);
  }
  
  public <E extends T> E e(Iterable<E> paramIterable)
  {
    return d.f(paramIterable);
  }
  
  public boolean equals(@h Object paramObject)
  {
    if (paramObject == this) {
      return true;
    }
    if ((paramObject instanceof Yf))
    {
      paramObject = (Yf)paramObject;
      return d.equals(d);
    }
    return false;
  }
  
  public <E extends T> E f(Iterable<E> paramIterable)
  {
    return d.e(paramIterable);
  }
  
  public <S extends T> mf<S> g()
  {
    return d;
  }
  
  public int hashCode()
  {
    return -d.hashCode();
  }
  
  public String toString()
  {
    return a.a(new StringBuilder(), d, ".reverse()");
  }
}
