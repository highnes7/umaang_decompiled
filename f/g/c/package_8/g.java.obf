package f.g.c.d;

import f.g.c.a.a;
import f.g.c.a.b;
import java.io.Serializable;
import java.math.BigInteger;

@a
@b
public final class pa
{
  public pa() {}
  
  public static oa<BigInteger> a()
  {
    return a.a;
  }
  
  public static oa<Integer> b()
  {
    return b.a;
  }
  
  public static oa<Long> c()
  {
    return c.a;
  }
  
  private static final class a
    extends oa<BigInteger>
    implements Serializable
  {
    public static final a a = new a();
    public static final BigInteger b = BigInteger.valueOf(Long.MIN_VALUE);
    public static final BigInteger c = BigInteger.valueOf(Long.MAX_VALUE);
    public static final long d = 0L;
    
    public a() {}
    
    private Object d()
    {
      return a;
    }
    
    public long a(BigInteger paramBigInteger1, BigInteger paramBigInteger2)
    {
      return paramBigInteger1.subtract(paramBigInteger2).max(b).min(c).longValue();
    }
    
    public BigInteger a(BigInteger paramBigInteger)
    {
      return paramBigInteger.add(BigInteger.ONE);
    }
    
    public BigInteger b(BigInteger paramBigInteger)
    {
      return paramBigInteger.subtract(BigInteger.ONE);
    }
  }
  
  private static final class b
    extends oa<Integer>
    implements Serializable
  {
    public static final b a = new b();
    public static final long b = 0L;
    
    public b() {}
    
    private Object d()
    {
      return a;
    }
    
    public long a(Integer paramInteger1, Integer paramInteger2)
    {
      return paramInteger2.intValue() - paramInteger1.intValue();
    }
    
    public Integer a()
    {
      return Integer.valueOf(Integer.MAX_VALUE);
    }
    
    public Integer a(Integer paramInteger)
    {
      int i = paramInteger.intValue();
      if (i == Integer.MAX_VALUE) {
        return null;
      }
      return Integer.valueOf(i + 1);
    }
    
    public Integer b()
    {
      return Integer.valueOf(Integer.MIN_VALUE);
    }
    
    public Integer b(Integer paramInteger)
    {
      int i = paramInteger.intValue();
      if (i == Integer.MIN_VALUE) {
        return null;
      }
      return Integer.valueOf(i - 1);
    }
  }
  
  private static final class c
    extends oa<Long>
    implements Serializable
  {
    public static final c a = new c();
    public static final long b = 0L;
    
    public c() {}
    
    private Object d()
    {
      return a;
    }
    
    public long a(Long paramLong1, Long paramLong2)
    {
      long l = paramLong2.longValue() - paramLong1.longValue();
      if ((paramLong2.longValue() > paramLong1.longValue()) && (l < 0L)) {
        return Long.MAX_VALUE;
      }
      if ((paramLong2.longValue() < paramLong1.longValue()) && (l > 0L)) {
        return Long.MIN_VALUE;
      }
      return l;
    }
    
    public Long a()
    {
      return Long.valueOf(Long.MAX_VALUE);
    }
    
    public Long a(Long paramLong)
    {
      long l = paramLong.longValue();
      if (l == Long.MAX_VALUE) {
        return null;
      }
      return Long.valueOf(l + 1L);
    }
    
    public Long b()
    {
      return Long.valueOf(Long.MIN_VALUE);
    }
    
    public Long b(Long paramLong)
    {
      long l = paramLong.longValue();
      if (l == Long.MIN_VALUE) {
        return null;
      }
      return Long.valueOf(l - 1L);
    }
  }
}
