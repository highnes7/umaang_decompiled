package f.g.c.d;

import f.g.c.a.a;
import f.g.c.a.b;
import f.g.c.a.c;
import f.g.c.b.C;
import f.g.c.b.J;
import f.g.c.b.U;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.TimeUnit;

@a
@b(emulated=true)
public abstract class fb<K0, V0>
{
  @c("To be supported")
  public ud.d<K0, V0> a;
  
  public fb() {}
  
  public abstract fb<K0, V0> a(int paramInt);
  
  @c("To be supported")
  public abstract fb<K0, V0> a(long paramLong, TimeUnit paramTimeUnit);
  
  @c("To be supported")
  public abstract fb<K0, V0> a(C<Object> paramC);
  
  @c("To be supported")
  public <K extends K0, V extends V0> ud.d<K, V> a()
  {
    return (ud.d)U.b(a, a.a);
  }
  
  @Deprecated
  public abstract <K extends K0, V extends V0> ConcurrentMap<K, V> a(J<? super K, ? extends V> paramJ);
  
  @c("MapMakerInternalMap")
  public abstract <K, V> Cd<K, V> b();
  
  public abstract fb<K0, V0> b(int paramInt);
  
  public abstract fb<K0, V0> b(long paramLong, TimeUnit paramTimeUnit);
  
  public abstract fb<K0, V0> c(int paramInt);
  
  public abstract <K extends K0, V extends V0> ConcurrentMap<K, V> c();
  
  @Deprecated
  @c("java.lang.ref.SoftReference")
  public abstract fb<K0, V0> d();
  
  @c("java.lang.ref.SoftReference")
  public abstract fb<K0, V0> e();
  
  @c("java.lang.ref.WeakReference")
  public abstract fb<K0, V0> f();
  
  @c("java.lang.ref.WeakReference")
  public abstract fb<K0, V0> g();
  
  @c("To be supported")
  public static enum a
    implements ud.d<Object, Object>
  {
    public a() {}
    
    public void a(ud.e<Object, Object> paramE) {}
  }
}
