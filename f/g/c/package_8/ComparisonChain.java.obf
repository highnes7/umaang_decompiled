package f.g.c.d;

import f.g.c.a.b;
import java.util.Comparator;
import m.a.h;

@b
public abstract class Y
{
  public static final Y a = new X();
  public static final Y b = new a(-1);
  public static final Y c = new a(1);
  
  public Y() {}
  
  public static Y e()
  {
    return a;
  }
  
  public abstract Y a(double paramDouble1, double paramDouble2);
  
  public abstract Y a(float paramFloat1, float paramFloat2);
  
  public abstract Y a(int paramInt1, int paramInt2);
  
  public abstract Y a(long paramLong1, long paramLong2);
  
  public abstract Y a(Comparable<?> paramComparable1, Comparable<?> paramComparable2);
  
  public abstract <T> Y a(@h T paramT1, @h T paramT2, Comparator<T> paramComparator);
  
  @Deprecated
  public final Y a(boolean paramBoolean1, boolean paramBoolean2)
  {
    return b(paramBoolean1, paramBoolean2);
  }
  
  public abstract Y b(boolean paramBoolean1, boolean paramBoolean2);
  
  public abstract Y c(boolean paramBoolean1, boolean paramBoolean2);
  
  public abstract int d();
  
  private static final class a
    extends Y
  {
    public final int d;
    
    public a(int paramInt)
    {
      super();
      d = paramInt;
    }
    
    public Y a(double paramDouble1, double paramDouble2)
    {
      return this;
    }
    
    public Y a(float paramFloat1, float paramFloat2)
    {
      return this;
    }
    
    public Y a(int paramInt1, int paramInt2)
    {
      return this;
    }
    
    public Y a(long paramLong1, long paramLong2)
    {
      return this;
    }
    
    public Y a(@h Comparable paramComparable1, @h Comparable paramComparable2)
    {
      return this;
    }
    
    public <T> Y a(@h T paramT1, @h T paramT2, @h Comparator<T> paramComparator)
    {
      return this;
    }
    
    public Y b(boolean paramBoolean1, boolean paramBoolean2)
    {
      return this;
    }
    
    public Y c(boolean paramBoolean1, boolean paramBoolean2)
    {
      return this;
    }
    
    public int d()
    {
      return d;
    }
  }
}
