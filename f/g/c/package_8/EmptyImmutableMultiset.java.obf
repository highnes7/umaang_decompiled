package f.g.c.d;

import f.g.c.a.b;
import java.util.Collection;
import m.a.h;

@b(serializable=true)
public final class wa
  extends Mb<Object>
{
  public static final wa d = new wa();
  public static final long e = 0L;
  
  public wa() {}
  
  public int a(@h Object paramObject)
  {
    return 0;
  }
  
  public vb<Object> a()
  {
    return vb.f();
  }
  
  public boolean c()
  {
    return false;
  }
  
  public boolean contains(@h Object paramObject)
  {
    return false;
  }
  
  public boolean containsAll(Collection<?> paramCollection)
  {
    return paramCollection.isEmpty();
  }
  
  public Nb<Ye.a<Object>> entrySet()
  {
    return Nb.g();
  }
  
  public boolean equals(@h Object paramObject)
  {
    if ((paramObject instanceof Ye)) {
      return ((Ye)paramObject).isEmpty();
    }
    return false;
  }
  
  public Nb<Ye.a<Object>> f()
  {
    throw new AssertionError("should never be called");
  }
  
  public Object h()
  {
    return d;
  }
  
  public int hashCode()
  {
    return 0;
  }
  
  public th<Object> iterator()
  {
    return Jc.a;
  }
  
  public int size()
  {
    return 0;
  }
  
  public Object[] toArray()
  {
    return kf.a;
  }
  
  public <T> T[] toArray(T[] paramArrayOfT)
  {
    return a().toArray(paramArrayOfT);
  }
  
  public Nb<Object> u()
  {
    return Nb.g();
  }
}
