package f.g.c.d;

import f.g.c.a.b;
import f.g.c.b.ba;
import java.util.NoSuchElementException;

@b
public abstract class g<T>
  extends th<T>
{
  public a a = a.b;
  public T b;
  
  public g() {}
  
  private boolean c()
  {
    a = a.d;
    b = a();
    if (a != a.c)
    {
      a = a.a;
      return true;
    }
    return false;
  }
  
  public abstract T a();
  
  public final T b()
  {
    a = a.c;
    return null;
  }
  
  public final boolean hasNext()
  {
    boolean bool;
    if (a != a.d) {
      bool = true;
    } else {
      bool = false;
    }
    ba.b(bool);
    int i = a.ordinal();
    if (i != 0)
    {
      if (i != 2) {
        return c();
      }
      return false;
    }
    return true;
  }
  
  public final T next()
  {
    if (hasNext())
    {
      a = a.b;
      return b;
    }
    throw new NoSuchElementException();
  }
  
  public final T peek()
  {
    if (hasNext()) {
      return b;
    }
    throw new NoSuchElementException();
  }
  
  private static enum a
  {
    public a() {}
  }
}
