package f.g.c.d;

import f.g.c.a.b;
import f.g.c.b.ba;
import java.util.Collection;
import java.util.List;
import m.a.h;

@b(emulated=true, serializable=true)
public final class ta
  extends vb<Object>
{
  public static final ta c = new ta();
  public static final long d = 0L;
  
  public ta() {}
  
  public boolean c()
  {
    return false;
  }
  
  public boolean contains(@h Object paramObject)
  {
    return false;
  }
  
  public boolean containsAll(Collection<?> paramCollection)
  {
    return paramCollection.isEmpty();
  }
  
  public boolean equals(@h Object paramObject)
  {
    if ((paramObject instanceof List)) {
      return ((List)paramObject).isEmpty();
    }
    return false;
  }
  
  public vb<Object> g()
  {
    return this;
  }
  
  public Object get(int paramInt)
  {
    ba.c(paramInt, 0, "index");
    throw new AssertionError("unreachable");
  }
  
  public Object h()
  {
    return c;
  }
  
  public int hashCode()
  {
    return 1;
  }
  
  public int indexOf(@h Object paramObject)
  {
    return -1;
  }
  
  public boolean isEmpty()
  {
    return true;
  }
  
  public th<Object> iterator()
  {
    return listIterator();
  }
  
  public int lastIndexOf(@h Object paramObject)
  {
    return -1;
  }
  
  public uh<Object> listIterator()
  {
    return Jc.a;
  }
  
  public uh<Object> listIterator(int paramInt)
  {
    ba.d(paramInt, 0, "index");
    return Jc.a;
  }
  
  public int size()
  {
    return 0;
  }
  
  public vb<Object> subList(int paramInt1, int paramInt2)
  {
    ba.b(paramInt1, paramInt2, 0);
    return this;
  }
  
  public Object[] toArray()
  {
    return kf.a;
  }
  
  public <T> T[] toArray(T[] paramArrayOfT)
  {
    if (paramArrayOfT.length > 0) {
      paramArrayOfT[0] = null;
    }
    return paramArrayOfT;
  }
  
  public String toString()
  {
    return "[]";
  }
}
