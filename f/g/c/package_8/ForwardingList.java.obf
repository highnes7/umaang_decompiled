package f.g.c.d;

import f.g.c.a.a;
import f.g.c.a.b;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import m.a.h;

@b
public abstract class Pa<E>
  extends Ja<E>
  implements List<E>
{
  public Pa() {}
  
  @a
  public List<E> a(int paramInt1, int paramInt2)
  {
    return fd.a(this, paramInt1, paramInt2);
  }
  
  @a
  public ListIterator<E> a(int paramInt)
  {
    return fd.a(this, paramInt);
  }
  
  @a
  public boolean a(int paramInt, Iterable<? extends E> paramIterable)
  {
    return fd.a(this, paramInt, paramIterable);
  }
  
  public void add(int paramInt, E paramE)
  {
    q().add(paramInt, paramE);
  }
  
  public boolean addAll(int paramInt, Collection<? extends E> paramCollection)
  {
    return q().addAll(paramInt, paramCollection);
  }
  
  public boolean equals(@h Object paramObject)
  {
    return (paramObject == this) || (q().equals(paramObject));
  }
  
  public E get(int paramInt)
  {
    return q().get(paramInt);
  }
  
  public int hashCode()
  {
    return q().hashCode();
  }
  
  public int indexOf(Object paramObject)
  {
    return q().indexOf(paramObject);
  }
  
  public int lastIndexOf(Object paramObject)
  {
    return q().lastIndexOf(paramObject);
  }
  
  public ListIterator<E> listIterator()
  {
    return q().listIterator();
  }
  
  public ListIterator<E> listIterator(int paramInt)
  {
    return q().listIterator(paramInt);
  }
  
  @a
  public boolean m(E paramE)
  {
    add(size(), paramE);
    return true;
  }
  
  @a
  public boolean n(@h Object paramObject)
  {
    return fd.a(this, paramObject);
  }
  
  @a
  public int o(@h Object paramObject)
  {
    return fd.b(this, paramObject);
  }
  
  @a
  public int p(@h Object paramObject)
  {
    return fd.c(this, paramObject);
  }
  
  public abstract List<E> q();
  
  public E remove(int paramInt)
  {
    return q().remove(paramInt);
  }
  
  public E set(int paramInt, E paramE)
  {
    return q().set(paramInt, paramE);
  }
  
  public List<E> subList(int paramInt1, int paramInt2)
  {
    return q().subList(paramInt1, paramInt2);
  }
  
  @a
  public int x()
  {
    return fd.a(this);
  }
  
  @a
  public Iterator<E> y()
  {
    return listIterator();
  }
  
  @a
  public ListIterator<E> z()
  {
    return listIterator(0);
  }
}
