package f.g.c.d;

import f.g.c.a.b;
import java.util.Collection;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import m.a.h;

@b
public abstract class v<K, V>
  extends r<K, V>
  implements bg<K, V>
{
  public static final long i = 7431625294878419160L;
  
  public v(Map<K, Collection<V>> paramMap)
  {
    super(paramMap);
  }
  
  public Map<K, Collection<V>> a()
  {
    return super.a();
  }
  
  public Set<V> b(@h K paramK, Iterable<? extends V> paramIterable)
  {
    return (Set)super.b(paramK, paramIterable);
  }
  
  public Set<V> d(@h Object paramObject)
  {
    return (Set)super.d(paramObject);
  }
  
  public abstract Set<V> e();
  
  public Set<Map.Entry<K, V>> entries()
  {
    return (Set)super.entries();
  }
  
  public boolean equals(@h Object paramObject)
  {
    return super.equals(paramObject);
  }
  
  public Set<V> get(@h K paramK)
  {
    return (Set)super.get(paramK);
  }
  
  public boolean put(K paramK, V paramV)
  {
    return super.put(paramK, paramV);
  }
}
