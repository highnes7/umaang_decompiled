package f.g.c.d;

import f.a.a.a.a;
import f.g.c.a.b;
import f.g.c.b.U;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import m.a.h;

@b
public final class mg<R, C, V>
  extends Yb<R, C, V>
{
  public final R a;
  public final C b;
  public final V c;
  
  public mg(Yg.a<R, C, V> paramA)
  {
    this(paramA.a(), paramA.b(), paramA.getValue());
  }
  
  public mg(R paramR, C paramC, V paramV)
  {
    if (paramR != null)
    {
      a = paramR;
      if (paramC != null)
      {
        b = paramC;
        if (paramV != null)
        {
          c = paramV;
          return;
        }
        throw new NullPointerException();
      }
      throw new NullPointerException();
    }
    throw new NullPointerException();
  }
  
  public V c(@h Object paramObject1, @h Object paramObject2)
  {
    if (d(paramObject1, paramObject2)) {
      return c;
    }
    return null;
  }
  
  public boolean containsValue(@h Object paramObject)
  {
    return U.a(c, paramObject);
  }
  
  public boolean d(@h Object paramObject1, @h Object paramObject2)
  {
    return (g(paramObject1)) && (e(paramObject2));
  }
  
  public Ab<C, Map<R, V>> e()
  {
    return Ab.c(b, Ab.c(a, c));
  }
  
  public boolean e(@h Object paramObject)
  {
    return U.a(b, paramObject);
  }
  
  public boolean equals(@h Object paramObject)
  {
    if (paramObject == this) {
      return true;
    }
    if ((paramObject instanceof Yg))
    {
      paramObject = (Yg)paramObject;
      if (paramObject.size() == 1)
      {
        paramObject = (Yg.a)paramObject.h().iterator().next();
        return (U.a(a, paramObject.a())) && (U.a(b, paramObject.b())) && (U.a(c, paramObject.getValue()));
      }
    }
    return false;
  }
  
  public Ab<R, V> f(C paramC)
  {
    if (paramC != null)
    {
      if (e(paramC)) {
        return Ab.c(a, c);
      }
      return Ab.g();
    }
    throw new NullPointerException();
  }
  
  public Nb<R> g()
  {
    return Nb.b(a);
  }
  
  public boolean g(@h Object paramObject)
  {
    return U.a(a, paramObject);
  }
  
  public Ab<C, V> h(R paramR)
  {
    if (paramR != null)
    {
      if (g(paramR)) {
        return Ab.c(b, c);
      }
      return Ab.g();
    }
    throw new NullPointerException();
  }
  
  public Nb<Yg.a<R, C, V>> h()
  {
    return Nb.b(_g.a(a, b, c));
  }
  
  public int hashCode()
  {
    return Arrays.hashCode(new Object[] { a, b, c });
  }
  
  public Nb<C> i()
  {
    return Nb.b(b);
  }
  
  public boolean isEmpty()
  {
    return false;
  }
  
  public Ab<R, Map<C, V>> j()
  {
    return Ab.c(a, Ab.c(b, c));
  }
  
  public int size()
  {
    return 1;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append('{');
    localStringBuilder.append(a);
    localStringBuilder.append("={");
    localStringBuilder.append(b);
    localStringBuilder.append('=');
    return a.a(localStringBuilder, c, "}}");
  }
  
  public rb<V> values()
  {
    return Nb.b(c);
  }
}
