package f.g.c.i;

import f.g.c.b.Q;
import f.g.c.b.Q.a;
import f.g.c.b.U;
import f.g.c.b.X;
import f.g.c.b.ba;
import f.g.c.b.d;
import f.g.c.b.w;
import f.g.c.b.x;
import f.g.c.d.Ab;
import f.g.c.d.Ab.a;
import f.g.c.d.Be;
import f.g.c.d.Ib;
import f.g.c.d.Jc;
import f.g.c.d.Mb;
import f.g.c.d.Nb;
import f.g.c.d.cd;
import f.g.c.d.fe;
import f.g.c.d.rb;
import f.g.c.d.ua;
import f.g.c.d.ve;
import f.g.c.d.xb;
import f.g.c.d.xb.a;
import java.nio.charset.Charset;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;

@f.g.c.a.a
@f.g.c.a.b
@m.a.a.b
public final class h
{
  public static final h A;
  public static final h B;
  public static final h C;
  public static final h D;
  public static final h E;
  public static final h F;
  public static final h G;
  public static final h H;
  public static final h I;
  public static final h J;
  public static final h K;
  public static final h L;
  public static final h M;
  public static final h N;
  public static final h O;
  public static final h P;
  public static final h Q;
  public static final h R;
  public static final h S;
  public static final h T;
  public static final h U;
  public static final h V;
  public static final h W;
  public static final h X;
  public static final h Y;
  public static final h Z;
  public static final String a = "charset";
  public static final h aa;
  public static final xb<String, String> b = xb.a("charset", d.a(x.c.name()));
  public static final h ba;
  public static final w c = w.b.a(w.i.a()).a(w.b(' ')).a(w.h("()<>@,;:\\\"/[]?="));
  public static final h ca;
  public static final w d = w.b.a(w.h("\"\\\r"));
  public static final h da;
  public static final w e = w.a(" \t\r\n");
  public static final h ea;
  public static final String f = "application";
  public static final h fa;
  public static final String g = "audio";
  public static final h ga;
  public static final String h = "image";
  public static final h ha;
  public static final String i = "text";
  public static final h ia;
  public static final String j = "video";
  public static final h ja;
  public static final String k = "*";
  public static final h ka;
  public static final h l = b("*", "*");
  public static final h la;
  public static final h m = b("text", "*");
  public static final h ma;
  public static final h n = b("image", "*");
  public static final h na;
  public static final h o = b("audio", "*");
  public static final h oa;
  public static final h p = b("video", "*");
  public static final h pa;
  public static final h q = b("application", "*");
  public static final h qa;
  public static final h r = c("text", "cache-manifest");
  public static final h ra;
  public static final h s = c("text", "css");
  public static final h sa;
  public static final h t = c("text", "csv");
  public static final h ta;
  public static final h u = c("text", "html");
  public static final h ua;
  public static final h v = c("text", "calendar");
  public static final h va;
  public static final h w = c("text", "plain");
  public static final Ab<h, h> wa;
  public static final h x = c("text", "javascript");
  public static final Q.a xa = new Q("; ").c("=");
  public static final h y = c("text", "vcard");
  public static final h z = c("text", "vnd.wap.wml");
  public final xb<String, String> Aa;
  public final String ya;
  public final String za;
  
  static
  {
    A = c("text", "xml");
    B = b("image", "bmp");
    C = b("image", "gif");
    D = b("image", "vnd.microsoft.icon");
    E = b("image", "jpeg");
    F = b("image", "png");
    G = c("image", "svg+xml");
    H = b("image", "tiff");
    I = b("image", "webp");
    J = b("audio", "mp4");
    K = b("audio", "mpeg");
    L = b("audio", "ogg");
    M = b("audio", "webm");
    N = b("video", "mp4");
    O = b("video", "mpeg");
    P = b("video", "ogg");
    Q = b("video", "quicktime");
    R = b("video", "webm");
    S = b("video", "x-ms-wmv");
    T = c("application", "atom+xml");
    U = b("application", "x-bzip2");
    V = b("application", "x-www-form-urlencoded");
    W = b("application", "x-gzip");
    X = c("application", "javascript");
    Y = c("application", "json");
    Z = b("application", "vnd.google-earth.kml+xml");
    aa = b("application", "vnd.google-earth.kmz");
    ba = b("application", "mbox");
    ca = b("application", "vnd.ms-excel");
    da = b("application", "vnd.ms-powerpoint");
    ea = b("application", "msword");
    fa = b("application", "octet-stream");
    ga = b("application", "ogg");
    ha = b("application", "vnd.openxmlformats-officedocument.wordprocessingml.document");
    ia = b("application", "vnd.openxmlformats-officedocument.presentationml.presentation");
    ja = b("application", "vnd.openxmlformats-officedocument.spreadsheetml.sheet");
    ka = b("application", "vnd.oasis.opendocument.graphics");
    la = b("application", "vnd.oasis.opendocument.presentation");
    ma = b("application", "vnd.oasis.opendocument.spreadsheet");
    na = b("application", "vnd.oasis.opendocument.text");
    oa = b("application", "pdf");
    pa = b("application", "postscript");
    qa = c("application", "rtf");
    ra = b("application", "x-shockwave-flash");
    sa = b("application", "vnd.sketchup.skp");
    ta = b("application", "x-tar");
    ua = c("application", "xhtml+xml");
    va = b("application", "zip");
    Ab.a localA = new Ab.a();
    h localH = l;
    localA = localA.a(localH, localH);
    localH = m;
    localA = localA.a(localH, localH);
    localH = n;
    localA = localA.a(localH, localH);
    localH = o;
    localA = localA.a(localH, localH);
    localH = p;
    localA = localA.a(localH, localH);
    localH = q;
    localA = localA.a(localH, localH);
    localH = r;
    localA = localA.a(localH, localH);
    localH = s;
    localA = localA.a(localH, localH);
    localH = t;
    localA = localA.a(localH, localH);
    localH = u;
    localA = localA.a(localH, localH);
    localH = v;
    localA = localA.a(localH, localH);
    localH = w;
    localA = localA.a(localH, localH);
    localH = x;
    localA = localA.a(localH, localH);
    localH = y;
    localA = localA.a(localH, localH);
    localH = z;
    localA = localA.a(localH, localH);
    localH = A;
    localA = localA.a(localH, localH);
    localH = B;
    localA = localA.a(localH, localH);
    localH = C;
    localA = localA.a(localH, localH);
    localH = D;
    localA = localA.a(localH, localH);
    localH = E;
    localA = localA.a(localH, localH);
    localH = F;
    localA = localA.a(localH, localH);
    localH = G;
    localA = localA.a(localH, localH);
    localH = H;
    localA = localA.a(localH, localH);
    localH = I;
    localA = localA.a(localH, localH);
    localH = J;
    localA = localA.a(localH, localH);
    localH = K;
    localA = localA.a(localH, localH);
    localH = L;
    localA = localA.a(localH, localH);
    localH = M;
    localA = localA.a(localH, localH);
    localH = N;
    localA = localA.a(localH, localH);
    localH = O;
    localA = localA.a(localH, localH);
    localH = P;
    localA = localA.a(localH, localH);
    localH = Q;
    localA = localA.a(localH, localH);
    localH = R;
    localA = localA.a(localH, localH);
    localH = S;
    localA = localA.a(localH, localH);
    localH = T;
    localA = localA.a(localH, localH);
    localH = U;
    localA = localA.a(localH, localH);
    localH = V;
    localA = localA.a(localH, localH);
    localH = W;
    localA = localA.a(localH, localH);
    localH = X;
    localA = localA.a(localH, localH);
    localH = Y;
    localA = localA.a(localH, localH);
    localH = Z;
    localA = localA.a(localH, localH);
    localH = aa;
    localA = localA.a(localH, localH);
    localH = ba;
    localA = localA.a(localH, localH);
    localH = ca;
    localA = localA.a(localH, localH);
    localH = da;
    localA = localA.a(localH, localH);
    localH = ea;
    localA = localA.a(localH, localH);
    localH = fa;
    localA = localA.a(localH, localH);
    localH = ga;
    localA = localA.a(localH, localH);
    localH = ha;
    localA = localA.a(localH, localH);
    localH = ia;
    localA = localA.a(localH, localH);
    localH = ja;
    localA = localA.a(localH, localH);
    localH = ka;
    localA = localA.a(localH, localH);
    localH = la;
    localA = localA.a(localH, localH);
    localH = ma;
    localA = localA.a(localH, localH);
    localH = na;
    localA = localA.a(localH, localH);
    localH = oa;
    localA = localA.a(localH, localH);
    localH = pa;
    localA = localA.a(localH, localH);
    localH = qa;
    localA = localA.a(localH, localH);
    localH = ra;
    localA = localA.a(localH, localH);
    localH = sa;
    localA = localA.a(localH, localH);
    localH = ta;
    localA = localA.a(localH, localH);
    localH = ua;
    localA = localA.a(localH, localH);
    localH = va;
    wa = localA.a(localH, localH).a();
  }
  
  public h(String paramString1, String paramString2, xb<String, String> paramXb)
  {
    ya = paramString1;
    za = paramString2;
    Aa = paramXb;
  }
  
  public static h a(String paramString1, String paramString2)
  {
    return a(paramString1, paramString2, ua.i);
  }
  
  public static h a(String paramString1, String paramString2, ve<String, String> paramVe)
  {
    if (paramString1 != null)
    {
      if (paramString2 != null)
      {
        if (paramVe != null)
        {
          paramString1 = h(paramString1);
          paramString2 = h(paramString2);
          boolean bool;
          if (("*".equals(paramString1)) && (!"*".equals(paramString2))) {
            bool = false;
          } else {
            bool = true;
          }
          ba.a(bool, "A wildcard type cannot be used with a non-wildcard subtype");
          xb.a localA = new xb.a();
          paramVe = paramVe.entries().iterator();
          while (paramVe.hasNext())
          {
            Map.Entry localEntry = (Map.Entry)paramVe.next();
            String str = h((String)localEntry.getKey());
            localA.a(str, d(str, (String)localEntry.getValue()));
          }
          paramString1 = new h(paramString1, paramString2, localA.a());
          return (h)U.b(wa.get(paramString1), paramString1);
        }
        throw new NullPointerException();
      }
      throw new NullPointerException();
    }
    paramString1 = new NullPointerException();
    for (;;)
    {
      throw paramString1;
    }
  }
  
  public static h b(String paramString)
  {
    return a("application", paramString);
  }
  
  public static h b(String paramString1, String paramString2)
  {
    return new h(paramString1, paramString2, ua.i);
  }
  
  public static h c(String paramString)
  {
    return a("audio", paramString);
  }
  
  public static h c(String paramString1, String paramString2)
  {
    return new h(paramString1, paramString2, b);
  }
  
  public static h d(String paramString)
  {
    return a("image", paramString);
  }
  
  public static String d(String paramString1, String paramString2)
  {
    String str = paramString2;
    if ("charset".equals(paramString1)) {
      str = d.a(paramString2);
    }
    return str;
  }
  
  public static h e(String paramString)
  {
    return a("text", paramString);
  }
  
  public static h f(String paramString)
  {
    return a("video", paramString);
  }
  
  public static String g(String paramString)
  {
    StringBuilder localStringBuilder = new StringBuilder(paramString.length() + 16);
    localStringBuilder.append('"');
    paramString = paramString.toCharArray();
    int i2 = paramString.length;
    int i1 = 0;
    while (i1 < i2)
    {
      char c1 = paramString[i1];
      if ((c1 == '\r') || (c1 == '\\') || (c1 == '"')) {
        localStringBuilder.append('\\');
      }
      localStringBuilder.append(c1);
      i1 += 1;
    }
    localStringBuilder.append('"');
    return localStringBuilder.toString();
  }
  
  public static String h(String paramString)
  {
    ba.a(c.e(paramString));
    return d.a(paramString);
  }
  
  private Map<String, Mb<String>> h()
  {
    return fe.a(Aa.a(), new f(this));
  }
  
  public static h i(String paramString)
  {
    if (paramString != null)
    {
      a localA = new a(paramString);
      try
      {
        String str1 = localA.b(c);
        localA.a('/');
        String str2 = localA.b(c);
        xb.a localA1 = new xb.a();
        while (localA.a())
        {
          localA.a(';');
          localA.c(e);
          String str3 = localA.b(c);
          localA.a('=');
          if ('"' == localA.b())
          {
            localA.a('"');
            paramString = new StringBuilder();
            while ('"' != localA.b()) {
              if ('\\' == localA.b())
              {
                localA.a('\\');
                paramString.append(localA.a(w.b));
              }
              else
              {
                paramString.append(localA.b(d));
              }
            }
            paramString = paramString.toString();
            localA.a('"');
          }
          else
          {
            paramString = localA.b(c);
          }
          localA1.a(str3, paramString);
        }
        paramString = a(str1, str2, localA1.a());
        return paramString;
      }
      catch (IllegalStateException paramString)
      {
        throw new IllegalArgumentException(paramString);
      }
    }
    paramString = new NullPointerException();
    for (;;)
    {
      throw paramString;
    }
  }
  
  public h a(ve<String, String> paramVe)
  {
    return a(ya, za, paramVe);
  }
  
  public h a(Charset paramCharset)
  {
    if (paramCharset != null) {
      return e("charset", paramCharset.name());
    }
    throw new NullPointerException();
  }
  
  public boolean a(h paramH)
  {
    return ((ya.equals("*")) || (ya.equals(ya))) && ((za.equals("*")) || (za.equals(za))) && (Aa.entries().containsAll(Aa.entries()));
  }
  
  public X<Charset> b()
  {
    Nb localNb = Nb.b(Aa.get("charset"));
    int i1 = localNb.size();
    if (i1 != 0)
    {
      if (i1 == 1) {
        return X.b(Charset.forName((String)Jc.g(localNb.iterator())));
      }
      throw new IllegalStateException(f.a.a.a.a.a("Multiple charset values defined: ", localNb));
    }
    return f.g.c.b.a.b;
  }
  
  public boolean c()
  {
    return ("*".equals(ya)) || ("*".equals(za));
  }
  
  public xb<String, String> d()
  {
    return Aa;
  }
  
  public h e(String paramString1, String paramString2)
  {
    if (paramString1 != null)
    {
      if (paramString2 != null)
      {
        paramString1 = h(paramString1);
        xb.a localA = new xb.a();
        Iterator localIterator = Aa.entries().iterator();
        while (localIterator.hasNext())
        {
          Map.Entry localEntry = (Map.Entry)localIterator.next();
          String str = (String)localEntry.getKey();
          if (!paramString1.equals(str)) {
            localA.a(str, localEntry.getValue());
          }
        }
        localA.a(paramString1, d(paramString1, paramString2));
        paramString1 = new h(ya, za, localA.a());
        return (h)U.b(wa.get(paramString1), paramString1);
      }
      throw new NullPointerException();
    }
    paramString1 = new NullPointerException();
    for (;;)
    {
      throw paramString1;
    }
  }
  
  public String e()
  {
    return za;
  }
  
  public boolean equals(@m.a.h Object paramObject)
  {
    if (paramObject == this) {
      return true;
    }
    if ((paramObject instanceof h))
    {
      paramObject = (h)paramObject;
      return (ya.equals(ya)) && (za.equals(za)) && (h().equals(paramObject.h()));
    }
    return false;
  }
  
  public String f()
  {
    return ya;
  }
  
  public h g()
  {
    if (Aa.isEmpty()) {
      return this;
    }
    return a(ya, za);
  }
  
  public int hashCode()
  {
    return Arrays.hashCode(new Object[] { ya, za, h() });
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(ya);
    localStringBuilder.append('/');
    localStringBuilder.append(za);
    if (!Aa.isEmpty())
    {
      localStringBuilder.append("; ");
      cd localCd = Be.a(Aa, new g(this));
      xa.a(localStringBuilder, localCd.entries());
    }
    return localStringBuilder.toString();
  }
  
  private static final class a
  {
    public final String a;
    public int b = 0;
    
    public a(String paramString)
    {
      a = paramString;
    }
    
    public char a(char paramChar)
    {
      ba.b(a());
      boolean bool;
      if (b() == paramChar) {
        bool = true;
      } else {
        bool = false;
      }
      ba.b(bool);
      b += 1;
      return paramChar;
    }
    
    public char a(w paramW)
    {
      ba.b(a());
      char c = b();
      ba.b(paramW.c(c));
      b += 1;
      return c;
    }
    
    public boolean a()
    {
      int i = b;
      return (i >= 0) && (i < a.length());
    }
    
    public char b()
    {
      ba.b(a());
      return a.charAt(b);
    }
    
    public String b(w paramW)
    {
      int i = b;
      paramW = c(paramW);
      boolean bool;
      if (b != i) {
        bool = true;
      } else {
        bool = false;
      }
      ba.b(bool);
      return paramW;
    }
    
    public String c(w paramW)
    {
      ba.b(a());
      int i = b;
      b = paramW.a().a(a, i);
      if (a()) {
        return a.substring(i, b);
      }
      return a.substring(i);
    }
  }
}
