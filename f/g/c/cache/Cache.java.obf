package f.g.c.c;

import f.g.c.a.a;
import f.g.c.a.b;
import f.g.c.d.Ab;
import java.util.Map;
import java.util.concurrent.Callable;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ExecutionException;
import m.a.h;

@a
@b
public abstract interface c<K, V>
{
  public abstract V a(K paramK, Callable<? extends V> paramCallable)
    throws ExecutionException;
  
  public abstract ConcurrentMap<K, V> a();
  
  public abstract void b(Iterable<?> paramIterable);
  
  public abstract Ab<K, V> c(Iterable<?> paramIterable);
  
  public abstract void i(Object paramObject);
  
  @h
  public abstract V j(Object paramObject);
  
  public abstract void n();
  
  public abstract k o();
  
  public abstract void p();
  
  public abstract void put(K paramK, V paramV);
  
  public abstract void putAll(Map<? extends K, ? extends V> paramMap);
  
  public abstract long size();
}
