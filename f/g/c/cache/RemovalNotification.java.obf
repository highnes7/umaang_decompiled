package f.g.c.c;

import f.g.c.a.a;
import java.util.Map.Entry;
import m.a.h;

@a
public final class U<K, V>
  implements Map.Entry<K, V>
{
  public static final long a = 0L;
  @h
  public final K b;
  @h
  public final V c;
  public final O d;
  
  public U(@h K paramK, @h V paramV, O paramO)
  {
    b = paramK;
    c = paramV;
    if (paramO != null)
    {
      d = paramO;
      return;
    }
    throw new NullPointerException();
  }
  
  public O a()
  {
    return d;
  }
  
  public boolean b()
  {
    return d.a();
  }
  
  public boolean equals(@h Object paramObject)
  {
    boolean bool3 = paramObject instanceof Map.Entry;
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (bool3)
    {
      paramObject = (Map.Entry)paramObject;
      bool1 = bool2;
      if (f.g.c.b.U.a(getKey(), paramObject.getKey()))
      {
        bool1 = bool2;
        if (f.g.c.b.U.a(getValue(), paramObject.getValue())) {
          bool1 = true;
        }
      }
    }
    return bool1;
  }
  
  @h
  public K getKey()
  {
    return b;
  }
  
  @h
  public V getValue()
  {
    return c;
  }
  
  public int hashCode()
  {
    Object localObject1 = getKey();
    Object localObject2 = getValue();
    int j = 0;
    int i;
    if (localObject1 == null) {
      i = 0;
    } else {
      i = localObject1.hashCode();
    }
    if (localObject2 != null) {
      j = localObject2.hashCode();
    }
    return i ^ j;
  }
  
  public final V setValue(V paramV)
  {
    throw new UnsupportedOperationException();
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(getKey());
    localStringBuilder.append("=");
    localStringBuilder.append(getValue());
    return localStringBuilder.toString();
  }
}
