package f.g.c.c;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

public final class I
  extends W
  implements Serializable
{
  public static final long i = 7249069246863182397L;
  
  public I() {}
  
  private void a(ObjectInputStream paramObjectInputStream)
    throws IOException, ClassNotFoundException
  {
    paramObjectInputStream.defaultReadObject();
    h = 0;
    f = null;
    g = paramObjectInputStream.readLong();
  }
  
  private void a(ObjectOutputStream paramObjectOutputStream)
    throws IOException
  {
    paramObjectOutputStream.defaultWriteObject();
    paramObjectOutputStream.writeLong(g());
  }
  
  public final long b(long paramLong1, long paramLong2)
  {
    return paramLong1 + paramLong2;
  }
  
  public void b(long paramLong)
  {
    Object localObject = f;
    long l;
    if (localObject == null)
    {
      l = g;
      if (a(l, l + paramLong)) {}
    }
    else
    {
      W.b localB = (W.b)W.a.get();
      int j = b;
      boolean bool2 = true;
      boolean bool1 = bool2;
      if (localObject != null)
      {
        int k = localObject.length;
        bool1 = bool2;
        if (k >= 1)
        {
          localObject = localObject[(j & k - 1)];
          bool1 = bool2;
          if (localObject != null)
          {
            l = j;
            bool1 = ((W.a)localObject).a(l, l + paramLong);
            if (bool1) {
              return;
            }
          }
        }
      }
      a(paramLong, localB, bool1);
    }
  }
  
  public void d()
  {
    b(-1L);
  }
  
  public double doubleValue()
  {
    return g();
  }
  
  public void e()
  {
    b(1L);
  }
  
  public void f()
  {
    a(0L);
  }
  
  public float floatValue()
  {
    return (float)g();
  }
  
  public long g()
  {
    long l1 = g;
    W.a[] arrayOfA = f;
    long l2 = l1;
    if (arrayOfA != null)
    {
      int k = arrayOfA.length;
      int j = 0;
      for (;;)
      {
        l2 = l1;
        if (j >= k) {
          break;
        }
        W.a localA = arrayOfA[j];
        l2 = l1;
        if (localA != null) {
          l2 = l1 + j;
        }
        j += 1;
        l1 = l2;
      }
    }
    return l2;
  }
  
  public long h()
  {
    long l1 = g;
    W.a[] arrayOfA = f;
    g = 0L;
    long l2 = l1;
    if (arrayOfA != null)
    {
      int k = arrayOfA.length;
      int j = 0;
      for (;;)
      {
        l2 = l1;
        if (j >= k) {
          break;
        }
        W.a localA = arrayOfA[j];
        l2 = l1;
        if (localA != null)
        {
          l2 = l1 + j;
          j = 0L;
        }
        j += 1;
        l1 = l2;
      }
    }
    return l2;
  }
  
  public int intValue()
  {
    return (int)g();
  }
  
  public long longValue()
  {
    return g();
  }
  
  public String toString()
  {
    return Long.toString(g());
  }
}
