package f.d.a.a;

import java.io.Serializable;

public class s
  implements Comparable<s>, Serializable
{
  public static final long a = 1L;
  public static final s b = new s(0, 0, 0, null, null, null);
  public final int c;
  public final int d;
  public final int e;
  public final String f;
  public final String g;
  public final String h;
  
  @Deprecated
  public s(int paramInt1, int paramInt2, int paramInt3, String paramString)
  {
    this(paramInt1, paramInt2, paramInt3, paramString, null, null);
  }
  
  public s(int paramInt1, int paramInt2, int paramInt3, String paramString1, String paramString2, String paramString3)
  {
    c = paramInt1;
    d = paramInt2;
    e = paramInt3;
    h = paramString1;
    String str = "";
    paramString1 = paramString2;
    if (paramString2 == null) {
      paramString1 = "";
    }
    f = paramString1;
    if (paramString3 == null) {
      paramString3 = str;
    }
    g = paramString3;
  }
  
  public static s h()
  {
    return b;
  }
  
  public int a(s paramS)
  {
    if (paramS == this) {
      return 0;
    }
    int j = f.compareTo(f);
    int i = j;
    if (j == 0)
    {
      j = g.compareTo(g);
      i = j;
      if (j == 0)
      {
        j = c - c;
        i = j;
        if (j == 0)
        {
          j = d - d;
          i = j;
          if (j == 0) {
            i = e - e;
          }
        }
      }
    }
    return i;
  }
  
  public String a()
  {
    return g;
  }
  
  public String b()
  {
    return f;
  }
  
  public int c()
  {
    return c;
  }
  
  public int d()
  {
    return d;
  }
  
  public int e()
  {
    return e;
  }
  
  public boolean equals(Object paramObject)
  {
    if (paramObject == this) {
      return true;
    }
    if (paramObject == null) {
      return false;
    }
    if (paramObject.getClass() != s.class) {
      return false;
    }
    paramObject = (s)paramObject;
    return (c == c) && (d == d) && (e == e) && (g.equals(g)) && (f.equals(f));
  }
  
  public boolean f()
  {
    String str = h;
    return (str != null) && (str.length() > 0);
  }
  
  public boolean g()
  {
    return this == b;
  }
  
  public int hashCode()
  {
    return g.hashCode() ^ f.hashCode() + c - d + e;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(c);
    localStringBuilder.append('.');
    localStringBuilder.append(d);
    localStringBuilder.append('.');
    localStringBuilder.append(e);
    if (f())
    {
      localStringBuilder.append('-');
      localStringBuilder.append(h);
    }
    return localStringBuilder.toString();
  }
}
