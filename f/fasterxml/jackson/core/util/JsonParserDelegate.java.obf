package f.d.a.a.g;

import f.d.a.a.a;
import f.d.a.a.c;
import f.d.a.a.h;
import f.d.a.a.i;
import f.d.a.a.k;
import f.d.a.a.k.a;
import f.d.a.a.k.b;
import f.d.a.a.m;
import f.d.a.a.n;
import f.d.a.a.o;
import f.d.a.a.s;
import java.io.IOException;
import java.io.OutputStream;
import java.math.BigDecimal;
import java.math.BigInteger;

public class g
  extends k
{
  public k f;
  
  public g(k paramK)
  {
    f = paramK;
  }
  
  public byte A()
    throws IOException, i
  {
    return f.A();
  }
  
  public o B()
  {
    return f.B();
  }
  
  public h C()
  {
    return f.C();
  }
  
  public String D()
    throws IOException, i
  {
    return f.D();
  }
  
  public n E()
  {
    return f.E();
  }
  
  public BigDecimal F()
    throws IOException, i
  {
    return f.F();
  }
  
  public double G()
    throws IOException, i
  {
    return f.G();
  }
  
  public Object H()
    throws IOException, i
  {
    return f.H();
  }
  
  public float I()
    throws IOException, i
  {
    return f.I();
  }
  
  public Object J()
  {
    return f.J();
  }
  
  public int K()
    throws IOException, i
  {
    return f.K();
  }
  
  public n L()
  {
    return f.L();
  }
  
  public long M()
    throws IOException, i
  {
    return f.M();
  }
  
  public k.b N()
    throws IOException, i
  {
    return f.N();
  }
  
  public Number O()
    throws IOException, i
  {
    return f.O();
  }
  
  public m P()
  {
    return f.P();
  }
  
  public c Q()
  {
    return f.Q();
  }
  
  public short R()
    throws IOException, i
  {
    return f.R();
  }
  
  public String S()
    throws IOException, i
  {
    return f.S();
  }
  
  public char[] T()
    throws IOException, i
  {
    return f.T();
  }
  
  public int U()
    throws IOException, i
  {
    return f.U();
  }
  
  public int V()
    throws IOException, i
  {
    return f.V();
  }
  
  public h W()
  {
    return f.W();
  }
  
  public boolean X()
    throws IOException, i
  {
    return f.X();
  }
  
  public double Y()
    throws IOException, i
  {
    return f.Y();
  }
  
  public int Z()
    throws IOException, i
  {
    return f.Z();
  }
  
  public double a(double paramDouble)
    throws IOException, i
  {
    return f.a(paramDouble);
  }
  
  public int a(a paramA, OutputStream paramOutputStream)
    throws IOException, i
  {
    return f.a(paramA, paramOutputStream);
  }
  
  public k a(k.a paramA)
  {
    f.a(paramA);
    return this;
  }
  
  public void a(o paramO)
  {
    f.a(paramO);
  }
  
  public boolean a(c paramC)
  {
    return f.a(paramC);
  }
  
  public boolean a(boolean paramBoolean)
    throws IOException, i
  {
    return f.a(paramBoolean);
  }
  
  public byte[] a(a paramA)
    throws IOException, i
  {
    return f.a(paramA);
  }
  
  public long aa()
    throws IOException, i
  {
    return f.aa();
  }
  
  public k b(k.a paramA)
  {
    f.b(paramA);
    return this;
  }
  
  public void b(c paramC)
  {
    f.b(paramC);
  }
  
  public String ba()
    throws IOException, i
  {
    return f.ba();
  }
  
  public String c(String paramString)
    throws IOException, i
  {
    return f.c(paramString);
  }
  
  public boolean c(k.a paramA)
  {
    return f.c(paramA);
  }
  
  public boolean ca()
  {
    return f.ca();
  }
  
  public void close()
    throws IOException
  {
    f.close();
  }
  
  public int d(int paramInt)
    throws IOException, i
  {
    return f.d(paramInt);
  }
  
  public void d(String paramString)
  {
    f.d(paramString);
  }
  
  public boolean da()
  {
    return f.da();
  }
  
  public long h(long paramLong)
    throws IOException, i
  {
    return f.h(paramLong);
  }
  
  public n ha()
    throws IOException, i
  {
    return f.ha();
  }
  
  public n ia()
    throws IOException, i
  {
    return f.ia();
  }
  
  public boolean isClosed()
  {
    return f.isClosed();
  }
  
  public boolean ka()
  {
    return f.ka();
  }
  
  public k la()
    throws IOException, i
  {
    f.la();
    return this;
  }
  
  public s u()
  {
    return f.u();
  }
  
  public void w()
  {
    f.w();
  }
  
  public BigInteger x()
    throws IOException, i
  {
    return f.x();
  }
  
  public boolean z()
    throws IOException, i
  {
    return f.z();
  }
}
