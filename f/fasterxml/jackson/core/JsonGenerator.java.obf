package f.d.a.a;

import java.io.Closeable;
import java.io.Flushable;
import java.io.IOException;
import java.io.InputStream;
import java.math.BigDecimal;
import java.math.BigInteger;

public abstract class g
  implements Closeable, Flushable, t
{
  public p a;
  
  public g() {}
  
  public p A()
  {
    return a;
  }
  
  public c B()
  {
    return null;
  }
  
  public abstract g C();
  
  public abstract void D()
    throws IOException, f;
  
  public abstract void E()
    throws IOException, f;
  
  public abstract void F()
    throws IOException, f;
  
  public abstract void G()
    throws IOException, f;
  
  public abstract void H()
    throws IOException, f;
  
  public abstract int a(a paramA, InputStream paramInputStream, int paramInt)
    throws IOException, f;
  
  public int a(InputStream paramInputStream, int paramInt)
    throws IOException, f
  {
    return a(b.c, paramInputStream, paramInt);
  }
  
  public g a(f.d.a.a.c.c paramC)
  {
    return this;
  }
  
  public abstract g a(a paramA);
  
  public final g a(a paramA, boolean paramBoolean)
  {
    if (paramBoolean)
    {
      b(paramA);
      return this;
    }
    a(paramA);
    return this;
  }
  
  public abstract g a(o paramO);
  
  public g a(p paramP)
  {
    a = paramP;
    return this;
  }
  
  public g a(q paramQ)
  {
    throw new UnsupportedOperationException();
  }
  
  public abstract void a(char paramChar)
    throws IOException, f;
  
  public abstract void a(double paramDouble)
    throws IOException, f;
  
  public abstract void a(float paramFloat)
    throws IOException, f;
  
  public abstract void a(a paramA, byte[] paramArrayOfByte, int paramInt1, int paramInt2)
    throws IOException, f;
  
  public abstract void a(k paramK)
    throws IOException, l;
  
  public abstract void a(r paramR)
    throws IOException, l;
  
  public abstract void a(Object paramObject)
    throws IOException, l;
  
  public final void a(String paramString, double paramDouble)
    throws IOException, f
  {
    c(paramString);
    a(paramDouble);
  }
  
  public final void a(String paramString, float paramFloat)
    throws IOException, f
  {
    c(paramString);
    a(paramFloat);
  }
  
  public final void a(String paramString, int paramInt)
    throws IOException, f
  {
    c(paramString);
    e(paramInt);
  }
  
  public final void a(String paramString, long paramLong)
    throws IOException, f
  {
    c(paramString);
    h(paramLong);
  }
  
  public final void a(String paramString, Object paramObject)
    throws IOException, l
  {
    c(paramString);
    a(paramObject);
  }
  
  public void a(String paramString1, String paramString2)
    throws IOException, f
  {
    c(paramString1);
    i(paramString2);
  }
  
  public final void a(String paramString, BigDecimal paramBigDecimal)
    throws IOException, f
  {
    c(paramString);
    a(paramBigDecimal);
  }
  
  public final void a(String paramString, boolean paramBoolean)
    throws IOException, f
  {
    c(paramString);
    a(paramBoolean);
  }
  
  public final void a(String paramString, byte[] paramArrayOfByte)
    throws IOException, f
  {
    c(paramString);
    a(paramArrayOfByte);
  }
  
  public abstract void a(BigDecimal paramBigDecimal)
    throws IOException, f;
  
  public abstract void a(BigInteger paramBigInteger)
    throws IOException, f;
  
  public abstract void a(boolean paramBoolean)
    throws IOException, f;
  
  public void a(byte[] paramArrayOfByte)
    throws IOException, f
  {
    a(b.c, paramArrayOfByte, 0, paramArrayOfByte.length);
  }
  
  public void a(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
    throws IOException, f
  {
    a(b.c, paramArrayOfByte, paramInt1, paramInt2);
  }
  
  public abstract void a(char[] paramArrayOfChar, int paramInt1, int paramInt2)
    throws IOException, f;
  
  public boolean a(c paramC)
  {
    return false;
  }
  
  public abstract g b(a paramA);
  
  public void b(c paramC)
  {
    StringBuilder localStringBuilder = f.a.a.a.a.b("Generator of type ");
    localStringBuilder.append(getClass().getName());
    localStringBuilder.append(" does not support schema of type '");
    localStringBuilder.append(paramC.a());
    localStringBuilder.append("'");
    throw new UnsupportedOperationException(localStringBuilder.toString());
  }
  
  public abstract void b(k paramK)
    throws IOException, l;
  
  public abstract void b(q paramQ)
    throws IOException, f;
  
  public final void b(String paramString)
    throws IOException, f
  {
    c(paramString);
    G();
  }
  
  public abstract void b(String paramString, int paramInt1, int paramInt2)
    throws IOException, f;
  
  public abstract void b(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
    throws IOException, f;
  
  public abstract void b(char[] paramArrayOfChar, int paramInt1, int paramInt2)
    throws IOException, f;
  
  public void c(q paramQ)
    throws IOException, f
  {
    g(paramQ.getValue());
  }
  
  public abstract void c(String paramString)
    throws IOException, f;
  
  public abstract void c(String paramString, int paramInt1, int paramInt2)
    throws IOException, f;
  
  public abstract void c(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
    throws IOException, f;
  
  public abstract void c(char[] paramArrayOfChar, int paramInt1, int paramInt2)
    throws IOException, f;
  
  public abstract boolean c(a paramA);
  
  public abstract void close()
    throws IOException;
  
  public g d(int paramInt)
  {
    return this;
  }
  
  public abstract void d(q paramQ)
    throws IOException, f;
  
  public final void d(String paramString)
    throws IOException, f
  {
    c(paramString);
    F();
  }
  
  public abstract void e(int paramInt)
    throws IOException, f;
  
  public abstract void e(String paramString)
    throws IOException, f, UnsupportedOperationException;
  
  public final void f(String paramString)
    throws IOException, f
  {
    c(paramString);
    H();
  }
  
  public abstract void flush()
    throws IOException;
  
  public abstract void g(String paramString)
    throws IOException, f;
  
  public abstract void h(long paramLong)
    throws IOException, f;
  
  public abstract void h(String paramString)
    throws IOException, f;
  
  public abstract void i(String paramString)
    throws IOException, f;
  
  public abstract boolean isClosed();
  
  public abstract s u();
  
  public f.d.a.a.c.c v()
  {
    return null;
  }
  
  public abstract o w();
  
  public int x()
  {
    return 0;
  }
  
  public abstract m y();
  
  public Object z()
  {
    return null;
  }
  
  public static enum a
  {
    public final boolean i;
    public final int j = 1 << ordinal();
    
    public a(boolean paramBoolean)
    {
      i = paramBoolean;
    }
    
    public static int a()
    {
      a[] arrayOfA = values();
      int i1 = arrayOfA.length;
      int k = 0;
      int n;
      for (int m = 0; k < i1; m = n)
      {
        a localA = arrayOfA[k];
        n = m;
        if (localA.b()) {
          n = m | localA.c();
        }
        k += 1;
      }
      return m;
    }
    
    public boolean b()
    {
      return i;
    }
    
    public int c()
    {
      return j;
    }
  }
}
