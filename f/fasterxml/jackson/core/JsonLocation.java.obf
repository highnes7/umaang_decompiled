package f.d.a.a;

import f.a.a.a.a;
import java.io.Serializable;

public class h
  implements Serializable
{
  public static final long a = 1L;
  public static final h b = new h("N/A", -1L, -1L, -1, -1);
  public final long c;
  public final long d;
  public final int e;
  public final int f;
  public final Object g;
  
  public h(Object paramObject, long paramLong, int paramInt1, int paramInt2)
  {
    g = paramObject;
    c = -1L;
    d = paramLong;
    e = paramInt1;
    f = paramInt2;
  }
  
  public h(Object paramObject, long paramLong1, long paramLong2, int paramInt1, int paramInt2)
  {
    g = paramObject;
    c = paramLong1;
    d = paramLong2;
    e = paramInt1;
    f = paramInt2;
  }
  
  public long a()
  {
    return c;
  }
  
  public long b()
  {
    return d;
  }
  
  public int c()
  {
    return f;
  }
  
  public int d()
  {
    return e;
  }
  
  public Object e()
  {
    return g;
  }
  
  public boolean equals(Object paramObject)
  {
    if (paramObject == this) {
      return true;
    }
    if (paramObject == null) {
      return false;
    }
    if (!(paramObject instanceof h)) {
      return false;
    }
    paramObject = (h)paramObject;
    Object localObject = g;
    if (localObject == null)
    {
      if (g != null) {
        return false;
      }
    }
    else if (!localObject.equals(g)) {
      return false;
    }
    return (e == e) && (f == f) && (d == d) && (a() == paramObject.a());
  }
  
  public int hashCode()
  {
    Object localObject = g;
    int i;
    if (localObject == null) {
      i = 1;
    } else {
      i = localObject.hashCode();
    }
    return ((i ^ e) + f ^ (int)d) + (int)c;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder(80);
    localStringBuilder.append("[Source: ");
    Object localObject = g;
    if (localObject == null) {
      localStringBuilder.append("UNKNOWN");
    } else {
      localStringBuilder.append(localObject.toString());
    }
    localStringBuilder.append("; line: ");
    localStringBuilder.append(e);
    localStringBuilder.append(", column: ");
    return a.a(localStringBuilder, f, ']');
  }
}
