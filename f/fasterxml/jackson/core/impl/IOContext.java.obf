package f.d.a.a.c;

import f.d.a.a.g.a;
import f.d.a.a.g.a.a;
import f.d.a.a.g.a.b;
import f.d.a.a.g.j;

public final class d
{
  public final Object a;
  public f.d.a.a.d b;
  public final boolean c;
  public final a d;
  public byte[] e = null;
  public byte[] f = null;
  public byte[] g = null;
  public char[] h = null;
  public char[] i = null;
  public char[] j = null;
  
  public d(a paramA, Object paramObject, boolean paramBoolean)
  {
    d = paramA;
    a = paramObject;
    c = paramBoolean;
  }
  
  public void a(f.d.a.a.d paramD)
  {
    b = paramD;
  }
  
  public void a(byte[] paramArrayOfByte)
  {
    if (paramArrayOfByte != null)
    {
      if (paramArrayOfByte == g)
      {
        g = null;
        d.a(a.a.d, paramArrayOfByte);
        return;
      }
      throw new IllegalArgumentException("Trying to release buffer not owned by the context");
    }
  }
  
  public void a(char[] paramArrayOfChar)
  {
    if (paramArrayOfChar != null)
    {
      if (paramArrayOfChar == i)
      {
        i = null;
        d.a(a.b.b, paramArrayOfChar);
        return;
      }
      throw new IllegalArgumentException("Trying to release buffer not owned by the context");
    }
  }
  
  public byte[] a()
  {
    if (g == null)
    {
      g = d.a(a.a.d);
      return g;
    }
    throw new IllegalStateException("Trying to call allocBase64Buffer() second time");
  }
  
  public char[] a(int paramInt)
  {
    if (j == null)
    {
      j = d.a(a.b.d, paramInt);
      return j;
    }
    throw new IllegalStateException("Trying to call allocNameCopyBuffer() second time");
  }
  
  public void b(byte[] paramArrayOfByte)
  {
    if (paramArrayOfByte != null)
    {
      if (paramArrayOfByte == e)
      {
        e = null;
        d.a(a.a.a, paramArrayOfByte);
        return;
      }
      throw new IllegalArgumentException("Trying to release buffer not owned by the context");
    }
  }
  
  public void b(char[] paramArrayOfChar)
  {
    if (paramArrayOfChar != null)
    {
      if (paramArrayOfChar == j)
      {
        j = null;
        d.a(a.b.d, paramArrayOfChar);
        return;
      }
      throw new IllegalArgumentException("Trying to release buffer not owned by the context");
    }
  }
  
  public char[] b()
  {
    if (i == null)
    {
      i = d.a(a.b.b);
      return i;
    }
    throw new IllegalStateException("Trying to call allocConcatBuffer() second time");
  }
  
  public void c(byte[] paramArrayOfByte)
  {
    if (paramArrayOfByte != null)
    {
      if (paramArrayOfByte == f)
      {
        f = null;
        d.a(a.a.b, paramArrayOfByte);
        return;
      }
      throw new IllegalArgumentException("Trying to release buffer not owned by the context");
    }
  }
  
  public void c(char[] paramArrayOfChar)
  {
    if (paramArrayOfChar != null)
    {
      if (paramArrayOfChar == h)
      {
        h = null;
        d.a(a.b.a, paramArrayOfChar);
        return;
      }
      throw new IllegalArgumentException("Trying to release buffer not owned by the context");
    }
  }
  
  public byte[] c()
  {
    if (e == null)
    {
      e = d.a(a.a.a);
      return e;
    }
    throw new IllegalStateException("Trying to call allocReadIOBuffer() second time");
  }
  
  public char[] d()
  {
    if (h == null)
    {
      h = d.a(a.b.a);
      return h;
    }
    throw new IllegalStateException("Trying to call allocTokenBuffer() second time");
  }
  
  public byte[] e()
  {
    if (f == null)
    {
      f = d.a(a.a.b);
      return f;
    }
    throw new IllegalStateException("Trying to call allocWriteEncodingBuffer() second time");
  }
  
  public j f()
  {
    return new j(d);
  }
  
  public f.d.a.a.d g()
  {
    return b;
  }
  
  public Object h()
  {
    return a;
  }
  
  public boolean i()
  {
    return c;
  }
}
