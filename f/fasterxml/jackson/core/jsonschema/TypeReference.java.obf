package f.d.a.a.f;

import java.lang.reflect.Type;

public abstract class b<T>
  implements Comparable<b<T>>
{
  public final Type a;
  
  public b()
  {
    Type localType = b.class.getGenericSuperclass();
    if (!(localType instanceof Class))
    {
      a = ((java.lang.reflect.ParameterizedType)localType).getActualTypeArguments()[0];
      return;
    }
    throw new IllegalArgumentException("Internal error: TypeReference constructed without actual type information");
  }
  
  public int a(b<T> paramB)
  {
    return 0;
  }
  
  public Type a()
  {
    return a;
  }
}
